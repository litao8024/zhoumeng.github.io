{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"\u8be6\u89c1\uff1ahttp://52.83.69.131:8003/1/","title":"Home"},{"location":"index.html#http52836913180031","text":"","title":"\u8be6\u89c1\uff1ahttp://52.83.69.131:8003/1/"},{"location":"1.html","text":"1.1 \u8ba4\u8bc6\u6587\u672c\u9884\u5904\u7406 \u5b66\u4e60\u76ee\u6807 \u6587\u672c\u9884\u5904\u7406\u53ca\u5176\u4f5c\u7528 \u6587\u672c\u8bed\u6599\u5728\u8f93\u9001\u7ed9\u6a21\u578b\u524d\u4e00\u822c\u9700\u8981\u4e00\u7cfb\u5217\u7684\u9884\u5904\u7406\u5de5\u4f5c, \u624d\u80fd\u7b26\u5408\u6a21\u578b\u8f93\u5165\u7684\u8981\u6c42, \u5982: \u5c06\u6587\u672c\u8f6c\u5316\u6210\u6a21\u578b\u9700\u8981\u7684\u5f20\u91cf, \u89c4\u8303\u5f20\u91cf\u7684\u5c3a\u5bf8\u7b49, \u800c\u4e14\u79d1\u5b66\u7684\u6587\u672c\u9884\u5904\u7406\u73af\u8282\u8fd8\u5c06\u6709\u6548\u6307\u5bfc\u6a21\u578b\u8d85\u53c2\u6570\u7684\u9009\u62e9, \u63d0\u5347\u6a21\u578b\u7684\u8bc4\u4f30\u6307\u6807. \u6587\u672c\u9884\u5904\u7406\u4e2d\u5305\u542b\u7684\u4e3b\u8981\u73af\u8282 \u6587\u672c\u5904\u7406\u7684\u57fa\u672c\u65b9\u6cd5 \u6587\u672c\u5f20\u91cf\u8868\u793a\u65b9\u6cd5 \u6587\u672c\u8bed\u6599\u7684\u6570\u636e\u5206\u6790 \u6587\u672c\u7279\u5f81\u5904\u7406 \u6570\u636e\u589e\u5f3a\u65b9\u6cd5 \u6587\u672c\u5904\u7406\u7684\u57fa\u672c\u65b9\u6cd5 \u5206\u8bcd \u8bcd\u6027\u6807\u6ce8 \u547d\u540d\u5b9e\u4f53\u8bc6\u522b \u6587\u672c\u5f20\u91cf\u8868\u793a\u65b9\u6cd5 one-hot\u7f16\u7801 Word2vec Word Embedding \u6587\u672c\u8bed\u6599\u7684\u6570\u636e\u5206\u6790 \u6807\u7b7e\u6570\u91cf\u5206\u5e03 \u53e5\u5b50\u957f\u5ea6\u5206\u5e03 \u8bcd\u9891\u7edf\u8ba1\u4e0e\u5173\u952e\u8bcd\u8bcd\u4e91 \u6587\u672c\u7279\u5f81\u5904\u7406 \u6dfb\u52a0n-gram\u7279\u5f81 \u6587\u672c\u957f\u5ea6\u89c4\u8303 \u6570\u636e\u589e\u5f3a\u65b9\u6cd5 \u56de\u8bd1\u6570\u636e\u589e\u5f3a\u6cd5 \u91cd\u8981\u8bf4\u660e \u5728\u5b9e\u9645\u751f\u4ea7\u5e94\u7528\u4e2d, \u6211\u4eec\u6700\u5e38\u4f7f\u7528\u7684\u4e24\u79cd\u8bed\u8a00\u662f\u4e2d\u6587\u548c\u82f1\u6587, \u56e0\u6b64, \u6587\u672c\u9884\u5904\u7406\u90e8\u5206\u7684\u5185\u5bb9\u90fd\u5c06\u9488\u5bf9\u8fd9\u4e24\u79cd\u8bed\u8a00\u8fdb\u884c\u8bb2\u89e3. 1.2 \u6587\u672c\u5904\u7406\u7684\u57fa\u672c\u65b9\u6cd5 \u5b66\u4e60\u76ee\u6807 \u4e86\u89e3\u4ec0\u4e48\u662f\u5206\u8bcd, \u8bcd\u6027\u6807\u6ce8, \u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u53ca\u5176\u5b83\u4eec\u7684\u4f5c\u7528. \u638c\u63e1\u5206\u8bcd, \u8bcd\u6027\u6807\u6ce8, \u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u6d41\u884c\u5de5\u5177\u7684\u4f7f\u7528\u65b9\u6cd5. \u4ec0\u4e48\u662f\u5206\u8bcd \u5206\u8bcd\u5c31\u662f\u5c06\u8fde\u7eed\u7684\u5b57\u5e8f\u5217\u6309\u7167\u4e00\u5b9a\u7684\u89c4\u8303\u91cd\u65b0\u7ec4\u5408\u6210\u8bcd\u5e8f\u5217\u7684\u8fc7\u7a0b\u3002\u6211\u4eec\u77e5\u9053\uff0c\u5728\u82f1\u6587\u7684\u884c\u6587\u4e2d\uff0c\u5355\u8bcd\u4e4b\u95f4\u662f\u4ee5\u7a7a\u683c\u4f5c\u4e3a\u81ea\u7136\u5206\u754c\u7b26\u7684\uff0c\u800c\u4e2d\u6587\u53ea\u662f\u5b57\u3001\u53e5\u548c\u6bb5\u80fd\u901a\u8fc7\u660e\u663e\u7684\u5206\u754c\u7b26\u6765\u7b80\u5355\u5212\u754c\uff0c\u552f\u72ec\u8bcd\u6ca1\u6709\u4e00\u4e2a\u5f62\u5f0f\u4e0a\u7684\u5206\u754c\u7b26, \u5206\u8bcd\u8fc7\u7a0b\u5c31\u662f\u627e\u5230\u8fd9\u6837\u5206\u754c\u7b26\u7684\u8fc7\u7a0b. \u4e3e\u4e2a\u6817\u5b50: \u5de5\u4fe1\u5904\u5973\u5e72\u4e8b\u6bcf\u6708\u7ecf\u8fc7\u4e0b\u5c5e\u79d1\u5ba4\u90fd\u8981\u4eb2\u53e3\u4ea4\u4ee324\u53e3\u4ea4\u6362\u673a\u7b49\u6280\u672f\u6027\u5668\u4ef6\u7684\u5b89\u88c5\u5de5\u4f5c ==> ['\u5de5\u4fe1\u5904', '\u5973\u5e72\u4e8b', '\u6bcf\u6708', '\u7ecf\u8fc7', '\u4e0b\u5c5e', '\u79d1\u5ba4', '\u90fd', '\u8981', '\u4eb2\u53e3', '\u4ea4\u4ee3', '24', '\u53e3', '\u4ea4\u6362\u673a', '\u7b49', '\u6280\u672f\u6027', '\u5668\u4ef6', '\u7684', '\u5b89\u88c5', '\u5de5\u4f5c'] \u5206\u8bcd\u7684\u4f5c\u7528: \u8bcd\u4f5c\u4e3a\u8bed\u8a00\u8bed\u4e49\u7406\u89e3\u7684\u6700\u5c0f\u5355\u5143, \u662f\u4eba\u7c7b\u7406\u89e3\u6587\u672c\u8bed\u8a00\u7684\u57fa\u7840. \u56e0\u6b64\u4e5f\u662fAI\u89e3\u51b3NLP\u9886\u57df\u9ad8\u9636\u4efb\u52a1, \u5982\u81ea\u52a8\u95ee\u7b54, \u673a\u5668\u7ffb\u8bd1, \u6587\u672c\u751f\u6210\u7684\u91cd\u8981\u57fa\u7840\u73af\u8282. \u6d41\u884c\u4e2d\u6587\u5206\u8bcd\u5de5\u5177jieba: \u613f\u666f: \u201c\u7ed3\u5df4\u201d\u4e2d\u6587\u5206\u8bcd, \u505a\u6700\u597d\u7684 Python \u4e2d\u6587\u5206\u8bcd\u7ec4\u4ef6. jieba\u7684\u7279\u6027: \u652f\u6301\u591a\u79cd\u5206\u8bcd\u6a21\u5f0f \u7cbe\u786e\u6a21\u5f0f \u5168\u6a21\u5f0f \u641c\u7d22\u5f15\u64ce\u6a21\u5f0f \u652f\u6301\u4e2d\u6587\u7e41\u4f53\u5206\u8bcd \u652f\u6301\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178 jieba\u7684\u5b89\u88c5: pip install jieba jieba\u7684\u4f7f\u7528: \u7cbe\u786e\u6a21\u5f0f\u5206\u8bcd: \u8bd5\u56fe\u5c06\u53e5\u5b50\u6700\u7cbe\u786e\u5730\u5207\u5f00\uff0c\u9002\u5408\u6587\u672c\u5206\u6790. >>> import jieba >>> content = \"\u5de5\u4fe1\u5904\u5973\u5e72\u4e8b\u6bcf\u6708\u7ecf\u8fc7\u4e0b\u5c5e\u79d1\u5ba4\u90fd\u8981\u4eb2\u53e3\u4ea4\u4ee324\u53e3\u4ea4\u6362\u673a\u7b49\u6280\u672f\u6027\u5668\u4ef6\u7684\u5b89\u88c5\u5de5\u4f5c\" >>> jieba . cut ( content , cut_all = False ) # cut_all\u9ed8\u8ba4\u4e3aFalse # \u5c06\u8fd4\u56de\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61 < generator object Tokenizer . cut at 0x7f065c19e318 > # \u82e5\u9700\u76f4\u63a5\u8fd4\u56de\u5217\u8868\u5185\u5bb9, \u4f7f\u7528jieba.lcut\u5373\u53ef >>> jieba . lcut ( content , cut_all = False ) [ '\u5de5\u4fe1\u5904' , '\u5973\u5e72\u4e8b' , '\u6bcf\u6708' , '\u7ecf\u8fc7' , '\u4e0b\u5c5e' , '\u79d1\u5ba4' , '\u90fd' , '\u8981' , '\u4eb2\u53e3' , '\u4ea4\u4ee3' , '24' , '\u53e3' , '\u4ea4\u6362\u673a' , '\u7b49' , '\u6280\u672f\u6027' , '\u5668\u4ef6' , '\u7684' , '\u5b89\u88c5' , '\u5de5\u4f5c' ] \u5168\u6a21\u5f0f\u5206\u8bcd: \u628a\u53e5\u5b50\u4e2d\u6240\u6709\u7684\u53ef\u4ee5\u6210\u8bcd\u7684\u8bcd\u8bed\u90fd\u626b\u63cf\u51fa\u6765, \u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u4f46\u662f\u4e0d\u80fd\u6d88\u9664 \u6b67\u4e49. >>> import jieba >>> content = \"\u5de5\u4fe1\u5904\u5973\u5e72\u4e8b\u6bcf\u6708\u7ecf\u8fc7\u4e0b\u5c5e\u79d1\u5ba4\u90fd\u8981\u4eb2\u53e3\u4ea4\u4ee324\u53e3\u4ea4\u6362\u673a\u7b49\u6280\u672f\u6027\u5668\u4ef6\u7684\u5b89\u88c5\u5de5\u4f5c\" >>> jieba . cut ( content , cut_all = True ) # cut_all\u9ed8\u8ba4\u4e3aFalse # \u5c06\u8fd4\u56de\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61 < generator object Tokenizer . cut at 0x7f065c19e318 > # \u82e5\u9700\u76f4\u63a5\u8fd4\u56de\u5217\u8868\u5185\u5bb9, \u4f7f\u7528jieba.lcut\u5373\u53ef >>> jieba . lcut ( content , cut_all = True ) [ '\u5de5\u4fe1\u5904' , '\u5904\u5973' , '\u5973\u5e72\u4e8b' , '\u5e72\u4e8b' , '\u6bcf\u6708' , '\u6708\u7ecf' , '\u7ecf\u8fc7' , '\u4e0b\u5c5e' , '\u79d1\u5ba4' , '\u90fd' , '\u8981' , '\u4eb2\u53e3' , '\u53e3\u4ea4' , '\u4ea4\u4ee3' , '24' , '\u53e3\u4ea4' , '\u4ea4\u6362' , '\u4ea4\u6362\u673a' , '\u6362\u673a' , '\u7b49' , '\u6280\u672f' , '\u6280\u672f\u6027' , '\u6027\u5668' , '\u5668\u4ef6' , '\u7684' , '\u5b89\u88c5' , '\u5b89\u88c5\u5de5' , '\u88c5\u5de5' , '\u5de5\u4f5c' ] \u641c\u7d22\u5f15\u64ce\u6a21\u5f0f\u5206\u8bcd: \u5728\u7cbe\u786e\u6a21\u5f0f\u7684\u57fa\u7840\u4e0a\uff0c\u5bf9\u957f\u8bcd\u518d\u6b21\u5207\u5206\uff0c\u63d0\u9ad8\u53ec\u56de\u7387\uff0c\u9002\u5408\u7528\u4e8e\u641c\u7d22\u5f15\u64ce\u5206\u8bcd. >>> import jieba >>> content = \"\u5de5\u4fe1\u5904\u5973\u5e72\u4e8b\u6bcf\u6708\u7ecf\u8fc7\u4e0b\u5c5e\u79d1\u5ba4\u90fd\u8981\u4eb2\u53e3\u4ea4\u4ee324\u53e3\u4ea4\u6362\u673a\u7b49\u6280\u672f\u6027\u5668\u4ef6\u7684\u5b89\u88c5\u5de5\u4f5c\" >>> jieba . cut_for_search ( content ) # \u5c06\u8fd4\u56de\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61 < generator object Tokenizer . cut at 0x7f065c19e318 > # \u82e5\u9700\u76f4\u63a5\u8fd4\u56de\u5217\u8868\u5185\u5bb9, \u4f7f\u7528jieba.lcut_for_search\u5373\u53ef >>> jieba . lcut_for_search ( content ) [ '\u5de5\u4fe1\u5904' , '\u5e72\u4e8b' , '\u5973\u5e72\u4e8b' , '\u6bcf\u6708' , '\u7ecf\u8fc7' , '\u4e0b\u5c5e' , '\u79d1\u5ba4' , '\u90fd' , '\u8981' , '\u4eb2\u53e3' , '\u4ea4\u4ee3' , '24' , '\u53e3' , '\u4ea4\u6362' , '\u6362\u673a' , '\u4ea4\u6362\u673a' , '\u7b49' , '\u6280\u672f' , '\u6280\u672f\u6027' , '\u5668\u4ef6' , '\u7684' , '\u5b89\u88c5' , '\u5de5\u4f5c' ] # \u5bf9'\u5973\u5e72\u4e8b', '\u4ea4\u6362\u673a'\u7b49\u8f83\u957f\u8bcd\u6c47\u90fd\u8fdb\u884c\u4e86\u518d\u6b21\u5206\u8bcd. \u4e2d\u6587\u7e41\u4f53\u5206\u8bcd: \u9488\u5bf9\u4e2d\u56fd\u9999\u6e2f, \u53f0\u6e7e\u5730\u533a\u7684\u7e41\u4f53\u6587\u672c\u8fdb\u884c\u5206\u8bcd. >>> import jieba >>> content = \"\u7169\u60f1\u5373\u662f\u83e9\u63d0\uff0c\u6211\u66ab\u4e14\u4e0d\u63d0\" >>> jieba . lcut ( content ) [ '\u7169\u60f1' , '\u5373' , '\u662f' , '\u83e9\u63d0' , '\uff0c' , '\u6211' , '\u66ab\u4e14' , '\u4e0d' , '\u63d0' ] \u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178: \u6dfb\u52a0\u81ea\u5b9a\u4e49\u8bcd\u5178\u540e, jieba\u80fd\u591f\u51c6\u786e\u8bc6\u522b\u8bcd\u5178\u4e2d\u51fa\u73b0\u7684\u8bcd\u6c47\uff0c\u63d0\u5347\u6574\u4f53\u7684\u8bc6\u522b\u51c6\u786e\u7387. \u8bcd\u5178\u683c\u5f0f: \u6bcf\u4e00\u884c\u5206\u4e09\u90e8\u5206\uff1a\u8bcd\u8bed\u3001\u8bcd\u9891\uff08\u53ef\u7701\u7565\uff09\u3001\u8bcd\u6027\uff08\u53ef\u7701\u7565\uff09\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u987a\u5e8f\u4e0d\u53ef\u98a0\u5012. \u8bcd\u5178\u6837\u5f0f\u5982\u4e0b, \u5177\u4f53\u8bcd\u6027\u542b\u4e49\u8bf7\u53c2\u7167 \u9644\u5f55: jieba\u8bcd\u6027\u5bf9\u7167\u8868 , \u5c06\u8be5\u8bcd\u5178\u5b58\u4e3auserdict.txt, \u65b9\u4fbf\u4e4b\u540e\u52a0\u8f7d\u4f7f\u7528. \u4e91\u8ba1\u7b97 5 n \u674e\u5c0f\u798f 2 nr easy_install 3 eng \u597d\u7528 300 \u97e9\u7389\u8d4f\u9274 3 nz \u516b\u4e00\u53cc\u9e7f 3 nz >>> import jieba >>> jieba . lcut ( \"\u516b\u4e00\u53cc\u9e7f\u66f4\u540d\u4e3a\u516b\u4e00\u5357\u660c\u7bee\u7403\u961f\uff01\" ) # \u6ca1\u6709\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178\u524d\u7684\u7ed3\u679c: >>> [ '\u516b' , '\u4e00\u53cc' , '\u9e7f' , '\u66f4\u540d' , '\u4e3a' , '\u516b\u4e00' , '\u5357\u660c' , '\u7bee\u7403\u961f' , '\uff01' ] >>> jieba . load_userdict ( \"./userdict.txt\" ) # \u4f7f\u7528\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178\u540e\u7684\u7ed3\u679c: [ '\u516b\u4e00\u53cc\u9e7f' , '\u66f4\u540d' , '\u4e3a' , '\u516b\u4e00' , '\u5357\u660c' , '\u7bee\u7403\u961f' , '\uff01' ] \u4ec0\u4e48\u662f\u547d\u540d\u5b9e\u4f53\u8bc6\u522b \u547d\u540d\u5b9e\u4f53: \u901a\u5e38\u6211\u4eec\u5c06\u4eba\u540d, \u5730\u540d, \u673a\u6784\u540d\u7b49\u4e13\u6709\u540d\u8bcd\u7edf\u79f0\u547d\u540d\u5b9e\u4f53. \u5982: \u5468\u6770\u4f26, \u9ed1\u5c71\u53bf, \u5b54\u5b50\u5b66\u9662, 24\u8f8a\u65b9\u94a2\u77eb\u76f4\u673a. \u987e\u540d\u601d\u4e49, \u547d\u540d\u5b9e\u4f53\u8bc6\u522b(Named Entity Recognition\uff0c\u7b80\u79f0NER)\u5c31\u662f\u8bc6\u522b\u51fa\u4e00\u6bb5\u6587\u672c\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u547d\u540d\u5b9e\u4f53. \u4e3e\u4e2a\u6817\u5b50: \u9c81\u8fc5, \u6d59\u6c5f\u7ecd\u5174\u4eba, \u4e94\u56db\u65b0\u6587\u5316\u8fd0\u52a8\u7684\u91cd\u8981\u53c2\u4e0e\u8005, \u4ee3\u8868\u4f5c\u671d\u82b1\u5915\u62fe. ==> \u9c81\u8fc5(\u4eba\u540d) / \u6d59\u6c5f\u7ecd\u5174(\u5730\u540d)\u4eba / \u4e94\u56db\u65b0\u6587\u5316\u8fd0\u52a8(\u4e13\u6709\u540d\u8bcd) / \u91cd\u8981\u53c2\u4e0e\u8005 / \u4ee3\u8868\u4f5c / \u671d\u82b1\u5915\u62fe(\u4e13\u6709\u540d\u8bcd) \u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u7684\u4f5c\u7528: \u540c\u8bcd\u6c47\u4e00\u6837, \u547d\u540d\u5b9e\u4f53\u4e5f\u662f\u4eba\u7c7b\u7406\u89e3\u6587\u672c\u7684\u57fa\u7840\u5355\u5143, \u56e0\u6b64\u4e5f\u662fAI\u89e3\u51b3NLP\u9886\u57df\u9ad8\u9636\u4efb\u52a1\u7684\u91cd\u8981\u57fa\u7840\u73af\u8282. \u4ec0\u4e48\u662f\u8bcd\u6027\u6807\u6ce8 \u8bcd\u6027: \u8bed\u8a00\u4e2d\u5bf9\u8bcd\u7684\u4e00\u79cd\u5206\u7c7b\u65b9\u6cd5\uff0c\u4ee5\u8bed\u6cd5\u7279\u5f81\u4e3a\u4e3b\u8981\u4f9d\u636e\u3001\u517c\u987e\u8bcd\u6c47\u610f\u4e49\u5bf9\u8bcd\u8fdb\u884c\u5212\u5206\u7684\u7ed3\u679c, \u5e38\u89c1\u7684\u8bcd\u6027\u670914\u79cd, \u5982: \u540d\u8bcd, \u52a8\u8bcd, \u5f62\u5bb9\u8bcd\u7b49. \u987e\u540d\u601d\u4e49, \u8bcd\u6027\u6807\u6ce8(Part-Of-Speech tagging, \u7b80\u79f0POS)\u5c31\u662f\u6807\u6ce8\u51fa\u4e00\u6bb5\u6587\u672c\u4e2d\u6bcf\u4e2a\u8bcd\u6c47\u7684\u8bcd\u6027. \u4e3e\u4e2a\u6817\u5b50: \u6211\u7231\u81ea\u7136\u8bed\u8a00\u5904\u7406 ==> \u6211/rr, \u7231/v, \u81ea\u7136\u8bed\u8a00/n, \u5904\u7406/vn rr: \u4eba\u79f0\u4ee3\u8bcd v: \u52a8\u8bcd n: \u540d\u8bcd vn: \u52a8\u540d\u8bcd \u8bcd\u6027\u6807\u6ce8\u7684\u4f5c\u7528: \u8bcd\u6027\u6807\u6ce8\u4ee5\u5206\u8bcd\u4e3a\u57fa\u7840, \u662f\u5bf9\u6587\u672c\u8bed\u8a00\u7684\u53e6\u4e00\u4e2a\u89d2\u5ea6\u7684\u7406\u89e3, \u56e0\u6b64\u4e5f\u5e38\u5e38\u6210\u4e3aAI\u89e3\u51b3NLP\u9886\u57df\u9ad8\u9636\u4efb\u52a1\u7684\u91cd\u8981\u57fa\u7840\u73af\u8282. \u4f7f\u7528jieba\u8fdb\u884c\u4e2d\u6587\u8bcd\u6027\u6807\u6ce8: >>> import jieba.posseg as pseg >>> pseg . lcut ( \"\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8\" ) [ pair ( '\u6211' , 'r' ), pair ( '\u7231' , 'v' ), pair ( '\u5317\u4eac' , 'ns' ), pair ( '\u5929\u5b89\u95e8' , 'ns' )] # \u7ed3\u679c\u8fd4\u56de\u4e00\u4e2a\u88c5\u6709pair\u5143\u7ec4\u7684\u5217\u8868, \u6bcf\u4e2apair\u5143\u7ec4\u4e2d\u5206\u522b\u662f\u8bcd\u6c47\u53ca\u5176\u5bf9\u5e94\u7684\u8bcd\u6027, \u5177\u4f53\u8bcd\u6027\u542b\u4e49\u8bf7\u53c2\u7167[\u9644\u5f55: jieba\u8bcd\u6027\u5bf9\u7167\u8868]() \u5c0f\u8282\u603b\u7ed3 \u5b66\u4e60\u4e86\u4ec0\u4e48\u662f\u5206\u8bcd: \u5206\u8bcd\u5c31\u662f\u5c06\u8fde\u7eed\u7684\u5b57\u5e8f\u5217\u6309\u7167\u4e00\u5b9a\u7684\u89c4\u8303\u91cd\u65b0\u7ec4\u5408\u6210\u8bcd\u5e8f\u5217\u7684\u8fc7\u7a0b\u3002\u6211\u4eec\u77e5\u9053\uff0c\u5728\u82f1\u6587\u7684\u884c\u6587\u4e2d\uff0c\u5355\u8bcd\u4e4b\u95f4\u662f\u4ee5\u7a7a\u683c\u4f5c\u4e3a\u81ea\u7136\u5206\u754c\u7b26\u7684\uff0c\u800c\u4e2d\u6587\u53ea\u662f\u5b57\u3001\u53e5\u548c\u6bb5\u80fd\u901a\u8fc7\u660e\u663e\u7684\u5206\u754c\u7b26\u6765\u7b80\u5355\u5212\u754c\uff0c\u552f\u72ec\u8bcd\u6ca1\u6709\u4e00\u4e2a\u5f62\u5f0f\u4e0a\u7684\u5206\u754c\u7b26, \u5206\u8bcd\u8fc7\u7a0b\u5c31\u662f\u627e\u5230\u8fd9\u6837\u5206\u754c\u7b26\u7684\u8fc7\u7a0b. \u5b66\u4e60\u4e86\u5206\u8bcd\u7684\u4f5c\u7528: \u8bcd\u4f5c\u4e3a\u8bed\u8a00\u8bed\u4e49\u7406\u89e3\u7684\u6700\u5c0f\u5355\u5143, \u662f\u4eba\u7c7b\u7406\u89e3\u6587\u672c\u8bed\u8a00\u7684\u57fa\u7840. \u56e0\u6b64\u4e5f\u662fAI\u89e3\u51b3NLP\u9886\u57df\u9ad8\u9636\u4efb\u52a1, \u5982\u81ea\u52a8\u95ee\u7b54, \u673a\u5668\u7ffb\u8bd1, \u6587\u672c\u751f\u6210\u7684\u91cd\u8981\u57fa\u7840\u73af\u8282. \u5b66\u4e60\u4e86\u6d41\u884c\u4e2d\u6587\u5206\u8bcd\u5de5\u5177jieba: \u652f\u6301\u591a\u79cd\u5206\u8bcd\u6a21\u5f0f: \u7cbe\u786e\u6a21\u5f0f, \u5168\u6a21\u5f0f, \u641c\u7d22\u5f15\u64ce\u6a21\u5f0f \u652f\u6301\u4e2d\u6587\u7e41\u4f53\u5206\u8bcd \u652f\u6301\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178 \u5b66\u4e60\u4e86jieba\u5de5\u5177\u7684\u5b89\u88c5\u548c\u5206\u8bcd\u4f7f\u7528. \u5b66\u4e60\u4e86\u4ec0\u4e48\u662f\u547d\u540d\u5b9e\u4f53\u8bc6\u522b: \u547d\u540d\u5b9e\u4f53: \u901a\u5e38\u6211\u4eec\u5c06\u4eba\u540d, \u5730\u540d, \u673a\u6784\u540d\u7b49\u4e13\u6709\u540d\u8bcd\u7edf\u79f0\u547d\u540d\u5b9e\u4f53. \u5982: \u5468\u6770\u4f26, \u9ed1\u5c71\u53bf, \u5b54\u5b50\u5b66\u9662, 24\u8f8a\u65b9\u94a2\u77eb\u76f4\u673a. \u987e\u540d\u601d\u4e49, \u547d\u540d\u5b9e\u4f53\u8bc6\u522b(Named Entity Recognition\uff0c\u7b80\u79f0NER)\u5c31\u662f\u8bc6\u522b\u51fa\u4e00\u6bb5\u6587\u672c\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u547d\u540d\u5b9e\u4f53. \u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u7684\u4f5c\u7528: \u540c\u8bcd\u6c47\u4e00\u6837, \u547d\u540d\u5b9e\u4f53\u4e5f\u662f\u4eba\u7c7b\u7406\u89e3\u6587\u672c\u7684\u57fa\u7840\u5355\u5143, \u56e0\u6b64\u4e5f\u662fAI\u89e3\u51b3NLP\u9886\u57df\u9ad8\u9636\u4efb\u52a1\u7684\u91cd\u8981\u57fa\u7840\u73af\u8282. \u5b66\u4e60\u4e86\u4ec0\u4e48\u662f\u8bcd\u6027\u6807\u6ce8: \u8bcd\u6027: \u8bed\u8a00\u4e2d\u5bf9\u8bcd\u7684\u4e00\u79cd\u5206\u7c7b\u65b9\u6cd5\uff0c\u4ee5\u8bed\u6cd5\u7279\u5f81\u4e3a\u4e3b\u8981\u4f9d\u636e\u3001\u517c\u987e\u8bcd\u6c47\u610f\u4e49\u5bf9\u8bcd\u8fdb\u884c\u5212\u5206\u7684\u7ed3\u679c, \u5e38\u89c1\u7684\u8bcd\u6027\u670914\u79cd, \u5982: \u540d\u8bcd, \u52a8\u8bcd, \u5f62\u5bb9\u8bcd\u7b49. \u987e\u540d\u601d\u4e49, \u8bcd\u6027\u6807\u6ce8(Part-Of-Speech tagging, \u7b80\u79f0POS)\u5c31\u662f\u6807\u6ce8\u51fa\u4e00\u6bb5\u6587\u672c\u4e2d\u6bcf\u4e2a\u8bcd\u6c47\u7684\u8bcd\u6027. \u5b66\u4e60\u4e86\u8bcd\u6027\u6807\u6ce8\u7684\u4f5c\u7528: \u8bcd\u6027\u6807\u6ce8\u4ee5\u5206\u8bcd\u4e3a\u57fa\u7840, \u662f\u5bf9\u6587\u672c\u8bed\u8a00\u7684\u53e6\u4e00\u4e2a\u89d2\u5ea6\u7684\u7406\u89e3, \u56e0\u6b64\u4e5f\u5e38\u5e38\u6210\u4e3aAI\u89e3\u51b3NLP\u9886\u57df\u9ad8\u9636\u4efb\u52a1\u7684\u91cd\u8981\u57fa\u7840\u73af\u8282. \u5b66\u4e60\u4e86\u4f7f\u7528jieba\u8fdb\u884c\u8bcd\u6027\u6807\u6ce8. 1.3 \u6587\u672c\u5f20\u91cf\u8868\u793a\u65b9\u6cd5 \u5b66\u4e60\u76ee\u6807 \u4e86\u89e3\u4ec0\u4e48\u662f\u6587\u672c\u5f20\u91cf\u8868\u793a\u53ca\u5176\u4f5c\u7528. \u638c\u63e1\u6587\u672c\u5f20\u91cf\u8868\u793a\u7684\u51e0\u79cd\u65b9\u6cd5\u53ca\u5176\u5b9e\u73b0. \u4ec0\u4e48\u662f\u6587\u672c\u5f20\u91cf\u8868\u793a \u5c06\u4e00\u6bb5\u6587\u672c\u4f7f\u7528\u5f20\u91cf\u8fdb\u884c\u8868\u793a\uff0c\u5176\u4e2d\u4e00\u822c\u5c06\u8bcd\u6c47\u4e3a\u8868\u793a\u6210\u5411\u91cf\uff0c\u79f0\u4f5c\u8bcd\u5411\u91cf\uff0c\u518d\u7531\u5404\u4e2a\u8bcd\u5411\u91cf\u6309\u987a\u5e8f\u7ec4\u6210\u77e9\u9635\u5f62\u6210\u6587\u672c\u8868\u793a. \u4e3e\u4e2a\u6817\u5b50: [\"\u4eba\u751f\", \"\u8be5\", \"\u5982\u4f55\", \"\u8d77\u5934\"] ==> # \u6bcf\u4e2a\u8bcd\u5bf9\u5e94\u77e9\u9635\u4e2d\u7684\u4e00\u4e2a\u5411\u91cf [[1.32, 4,32, 0,32, 5.2], [3.1, 5.43, 0.34, 3.2], [3.21, 5.32, 2, 4.32], [2.54, 7.32, 5.12, 9.54]] \u6587\u672c\u5f20\u91cf\u8868\u793a\u7684\u4f5c\u7528: \u5c06\u6587\u672c\u8868\u793a\u6210\u5f20\u91cf\uff08\u77e9\u9635\uff09\u5f62\u5f0f\uff0c\u80fd\u591f\u4f7f\u8bed\u8a00\u6587\u672c\u53ef\u4ee5\u4f5c\u4e3a\u8ba1\u7b97\u673a\u5904\u7406\u7a0b\u5e8f\u7684\u8f93\u5165\uff0c\u8fdb\u884c\u63a5\u4e0b\u6765\u4e00\u7cfb\u5217\u7684\u89e3\u6790\u5de5\u4f5c. \u6587\u672c\u5f20\u91cf\u8868\u793a\u7684\u65b9\u6cd5: one-hot\u7f16\u7801 Word2vec Word Embedding \u4ec0\u4e48\u662fone-hot\u8bcd\u5411\u91cf\u8868\u793a \u53c8\u79f0\u72ec\u70ed\u7f16\u7801\uff0c\u5c06\u6bcf\u4e2a\u8bcd\u8868\u793a\u6210\u5177\u6709n\u4e2a\u5143\u7d20\u7684\u5411\u91cf\uff0c\u8fd9\u4e2a\u8bcd\u5411\u91cf\u4e2d\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u662f1\uff0c\u5176\u4ed6\u5143\u7d20\u90fd\u662f0\uff0c\u4e0d\u540c\u8bcd\u6c47\u5143\u7d20\u4e3a0\u7684\u4f4d\u7f6e\u4e0d\u540c\uff0c\u5176\u4e2dn\u7684\u5927\u5c0f\u662f\u6574\u4e2a\u8bed\u6599\u4e2d\u4e0d\u540c\u8bcd\u6c47\u7684\u603b\u6570. \u4e3e\u4e2a\u6817\u5b50: [\"\u6539\u53d8\", \"\u8981\", \"\u5982\u4f55\", \"\u8d77\u624b\"]` ==> [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]] onehot\u7f16\u7801\u5b9e\u73b0: \u8fdb\u884conehot\u7f16\u7801: # \u5bfc\u5165\u7528\u4e8e\u5bf9\u8c61\u4fdd\u5b58\u4e0e\u52a0\u8f7d\u7684joblib from sklearn.externals import joblib # \u5bfc\u5165keras\u4e2d\u7684\u8bcd\u6c47\u6620\u5c04\u5668Tokenizer from keras.preprocessing.text import Tokenizer # \u5047\u5b9avocab\u4e3a\u8bed\u6599\u96c6\u6240\u6709\u4e0d\u540c\u8bcd\u6c47\u96c6\u5408 vocab = { \"\u5468\u6770\u4f26\" , \"\u9648\u5955\u8fc5\" , \"\u738b\u529b\u5b8f\" , \"\u674e\u5b97\u76db\" , \"\u5434\u4ea6\u51e1\" , \"\u9e7f\u6657\" } # \u5b9e\u4f8b\u5316\u4e00\u4e2a\u8bcd\u6c47\u6620\u5c04\u5668\u5bf9\u8c61 t = Tokenizer ( num_words = None , char_level = False ) # \u4f7f\u7528\u6620\u5c04\u5668\u62df\u5408\u73b0\u6709\u6587\u672c\u6570\u636e t . fit_on_texts ( vocab ) for token in vocab : zero_list = [ 0 ] * len ( vocab ) # \u4f7f\u7528\u6620\u5c04\u5668\u8f6c\u5316\u73b0\u6709\u6587\u672c\u6570\u636e, \u6bcf\u4e2a\u8bcd\u6c47\u5bf9\u5e94\u4ece1\u5f00\u59cb\u7684\u81ea\u7136\u6570 # \u8fd4\u56de\u6837\u5f0f\u5982: [[2]], \u53d6\u51fa\u5176\u4e2d\u7684\u6570\u5b57\u9700\u8981\u4f7f\u7528[0][0] token_index = t . texts_to_sequences ([ token ])[ 0 ][ 0 ] - 1 zero_list [ token_index ] = 1 print ( token , \"\u7684one-hot\u7f16\u7801\u4e3a:\" , zero_list ) # \u4f7f\u7528joblib\u5de5\u5177\u4fdd\u5b58\u6620\u5c04\u5668, \u4ee5\u4fbf\u4e4b\u540e\u4f7f\u7528 tokenizer_path = \"./Tokenizer\" joblib . dump ( t , tokenizer_path ) \u8f93\u51fa\u6548\u679c: \u9e7f\u6657 \u7684one-hot\u7f16\u7801\u4e3a: [1, 0, 0, 0, 0, 0] \u738b\u529b\u5b8f \u7684one-hot\u7f16\u7801\u4e3a: [0, 1, 0, 0, 0, 0] \u674e\u5b97\u76db \u7684one-hot\u7f16\u7801\u4e3a: [0, 0, 1, 0, 0, 0] \u9648\u5955\u8fc5 \u7684one-hot\u7f16\u7801\u4e3a: [0, 0, 0, 1, 0, 0] \u5468\u6770\u4f26 \u7684one-hot\u7f16\u7801\u4e3a: [0, 0, 0, 0, 1, 0] \u5434\u4ea6\u51e1 \u7684one-hot\u7f16\u7801\u4e3a: [0, 0, 0, 0, 0, 1] # \u540c\u65f6\u5728\u5f53\u524d\u76ee\u5f55\u751f\u6210Tokenizer\u6587\u4ef6, \u4ee5\u4fbf\u4e4b\u540e\u4f7f\u7528 onehot\u7f16\u7801\u5668\u7684\u4f7f\u7528: # \u5bfc\u5165\u7528\u4e8e\u5bf9\u8c61\u4fdd\u5b58\u4e0e\u52a0\u8f7d\u7684joblib # from sklearn.externals import joblib # \u52a0\u8f7d\u4e4b\u524d\u4fdd\u5b58\u7684Tokenizer, \u5b9e\u4f8b\u5316\u4e00\u4e2at\u5bf9\u8c61 t = joblib . load ( tokenizer_path ) # \u7f16\u7801token\u4e3a\"\u674e\u5b97\u76db\" token = \"\u674e\u5b97\u76db\" # \u4f7f\u7528t\u83b7\u5f97token_index token_index = t . texts_to_sequences ([ token ])[ 0 ][ 0 ] - 1 # \u521d\u59cb\u5316\u4e00\u4e2azero_list zero_list = [ 0 ] * len ( vocab ) # \u4ee4zero_List\u7684\u5bf9\u5e94\u7d22\u5f15\u4e3a1 zero_list [ token_index ] = 1 print ( token , \"\u7684one-hot\u7f16\u7801\u4e3a:\" , zero_list ) \u8f93\u51fa\u6548\u679c: \u674e\u5b97\u76db \u7684one-hot\u7f16\u7801\u4e3a: [1, 0, 0, 0, 0, 0] one-hot\u7f16\u7801\u7684\u4f18\u52a3\u52bf\uff1a \u4f18\u52bf\uff1a\u64cd\u4f5c\u7b80\u5355\uff0c\u5bb9\u6613\u7406\u89e3. \u52a3\u52bf\uff1a\u5b8c\u5168\u5272\u88c2\u4e86\u8bcd\u4e0e\u8bcd\u4e4b\u95f4\u7684\u8054\u7cfb\uff0c\u800c\u4e14\u5728\u5927\u8bed\u6599\u96c6\u4e0b\uff0c\u6bcf\u4e2a\u5411\u91cf\u7684\u957f\u5ea6\u8fc7\u5927\uff0c\u5360\u636e\u5927\u91cf\u5185\u5b58. \u8bf4\u660e\uff1a \u6b63\u56e0\u4e3aone-hot\u7f16\u7801\u660e\u663e\u7684\u52a3\u52bf\uff0c\u8fd9\u79cd\u7f16\u7801\u65b9\u5f0f\u88ab\u5e94\u7528\u7684\u5730\u65b9\u8d8a\u6765\u8d8a\u5c11\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u5b66\u4e60\u7684\u7a20\u5bc6\u5411\u91cf\u7684\u8868\u793a\u65b9\u6cd5word2vec\u548cword embedding. \u4ec0\u4e48\u662fword2vec \u662f\u4e00\u79cd\u6d41\u884c\u7684\u5c06\u8bcd\u6c47\u8868\u793a\u6210\u5411\u91cf\u7684\u65e0\u76d1\u7763\u8bad\u7ec3\u65b9\u6cd5, \u8be5\u8fc7\u7a0b\u5c06\u6784\u5efa\u795e\u7ecf\u7f51\u7edc\u6a21\u578b, \u5c06\u7f51\u7edc\u53c2\u6570\u4f5c\u4e3a\u8bcd\u6c47\u7684\u5411\u91cf\u8868\u793a, \u5b83\u5305\u542bCBOW\u548cskipgram\u4e24\u79cd\u8bad\u7ec3\u6a21\u5f0f. CBOW(Continuous bag of words)\u6a21\u5f0f: \u7ed9\u5b9a\u4e00\u6bb5\u7528\u4e8e\u8bad\u7ec3\u7684\u6587\u672c\u8bed\u6599, \u518d\u9009\u5b9a\u67d0\u6bb5\u957f\u5ea6(\u7a97\u53e3)\u4f5c\u4e3a\u7814\u7a76\u5bf9\u8c61, \u4f7f\u7528\u4e0a\u4e0b\u6587\u8bcd\u6c47\u9884\u6d4b\u76ee\u6807\u8bcd\u6c47. \u5206\u6790: \u56fe\u4e2d\u7a97\u53e3\u5927\u5c0f\u4e3a9, \u4f7f\u7528\u524d\u540e4\u4e2a\u8bcd\u6c47\u5bf9\u76ee\u6807\u8bcd\u6c47\u8fdb\u884c\u9884\u6d4b. CBOW\u6a21\u5f0f\u4e0b\u7684word2vec\u8fc7\u7a0b\u8bf4\u660e: \u5047\u8bbe\u6211\u4eec\u7ed9\u5b9a\u7684\u8bad\u7ec3\u8bed\u6599\u53ea\u6709\u4e00\u53e5\u8bdd: Hope can set you free (\u613f\u4f60\u81ea\u7531\u6210\u957f)\uff0c\u7a97\u53e3\u5927\u5c0f\u4e3a3\uff0c\u56e0\u6b64\u6a21\u578b\u7684\u7b2c\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c\u6765\u81eaHope can set\uff0c\u56e0\u4e3a\u662fCBOW\u6a21\u5f0f\uff0c\u6240\u4ee5\u5c06\u4f7f\u7528Hope\u548cset\u4f5c\u4e3a\u8f93\u5165\uff0ccan\u4f5c\u4e3a\u8f93\u51fa\uff0c\u5728\u6a21\u578b\u8bad\u7ec3\u65f6\uff0c Hope\uff0ccan\uff0cset\u7b49\u8bcd\u6c47\u90fd\u4f7f\u7528\u5b83\u4eec\u7684one-hot\u7f16\u7801. \u5982\u56fe\u6240\u793a: \u6bcf\u4e2aone-hot\u7f16\u7801\u7684\u5355\u8bcd\u4e0e\u5404\u81ea\u7684\u53d8\u6362\u77e9\u9635(\u5373\u53c2\u6570\u77e9\u96353x5, \u8fd9\u91cc\u76843\u662f\u6307\u6700\u540e\u5f97\u5230\u7684\u8bcd\u5411\u91cf\u7ef4\u5ea6)\u76f8\u4e58\u4e4b\u540e\u518d\u76f8\u52a0, \u5f97\u5230\u4e0a\u4e0b\u6587\u8868\u793a\u77e9\u9635(3x1). \u63a5\u7740, \u5c06\u4e0a\u4e0b\u6587\u8868\u793a\u77e9\u9635\u4e0e\u53d8\u6362\u77e9\u9635(\u53c2\u6570\u77e9\u96355x3, \u6240\u6709\u7684\u53d8\u6362\u77e9\u9635\u5171\u4eab\u53c2\u6570)\u76f8\u4e58, \u5f97\u52305x1\u7684\u7ed3\u679c\u77e9\u9635, \u5b83\u5c06\u4e0e\u6211\u4eec\u771f\u6b63\u7684\u76ee\u6807\u77e9\u9635\u5373can\u7684one-hot\u7f16\u7801\u77e9\u9635(5x1)\u8fdb\u884c\u635f\u5931\u7684\u8ba1\u7b97, \u7136\u540e\u66f4\u65b0\u7f51\u7edc\u53c2\u6570\u5b8c\u6210\u4e00\u6b21\u6a21\u578b\u8fed\u4ee3. \u6700\u540e\u7a97\u53e3\u6309\u5e8f\u5411\u540e\u79fb\u52a8\uff0c\u91cd\u65b0\u66f4\u65b0\u53c2\u6570\uff0c\u76f4\u5230\u6240\u6709\u8bed\u6599\u88ab\u904d\u5386\u5b8c\u6210\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u53d8\u6362\u77e9\u9635(3x5)\uff0c\u8fd9\u4e2a\u53d8\u6362\u77e9\u9635\u4e0e\u6bcf\u4e2a\u8bcd\u6c47\u7684one-hot\u7f16\u7801(5x1)\u76f8\u4e58\uff0c\u5f97\u5230\u76843x1\u7684\u77e9\u9635\u5c31\u662f\u8be5\u8bcd\u6c47\u7684word2vec\u5f20\u91cf\u8868\u793a. skipgram\u6a21\u5f0f: \u7ed9\u5b9a\u4e00\u6bb5\u7528\u4e8e\u8bad\u7ec3\u7684\u6587\u672c\u8bed\u6599, \u518d\u9009\u5b9a\u67d0\u6bb5\u957f\u5ea6(\u7a97\u53e3)\u4f5c\u4e3a\u7814\u7a76\u5bf9\u8c61, \u4f7f\u7528\u76ee\u6807\u8bcd\u6c47\u9884\u6d4b\u4e0a\u4e0b\u6587\u8bcd\u6c47. \u5206\u6790: \u56fe\u4e2d\u7a97\u53e3\u5927\u5c0f\u4e3a9, \u4f7f\u7528\u76ee\u6807\u8bcd\u6c47\u5bf9\u524d\u540e\u56db\u4e2a\u8bcd\u6c47\u8fdb\u884c\u9884\u6d4b. skipgram\u6a21\u5f0f\u4e0b\u7684word2vec\u8fc7\u7a0b\u8bf4\u660e: \u5047\u8bbe\u6211\u4eec\u7ed9\u5b9a\u7684\u8bad\u7ec3\u8bed\u6599\u53ea\u6709\u4e00\u53e5\u8bdd: Hope can set you free (\u613f\u4f60\u81ea\u7531\u6210\u957f)\uff0c\u7a97\u53e3\u5927\u5c0f\u4e3a3\uff0c\u56e0\u6b64\u6a21\u578b\u7684\u7b2c\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c\u6765\u81eaHope can set\uff0c\u56e0\u4e3a\u662fskipgram\u6a21\u5f0f\uff0c\u6240\u4ee5\u5c06\u4f7f\u7528can\u4f5c\u4e3a\u8f93\u5165 \uff0cHope\u548cset\u4f5c\u4e3a\u8f93\u51fa\uff0c\u5728\u6a21\u578b\u8bad\u7ec3\u65f6\uff0c Hope\uff0ccan\uff0cset\u7b49\u8bcd\u6c47\u90fd\u4f7f\u7528\u5b83\u4eec\u7684one-hot\u7f16\u7801. \u5982\u56fe\u6240\u793a: \u5c06can\u7684one-hot\u7f16\u7801\u4e0e\u53d8\u6362\u77e9\u9635(\u5373\u53c2\u6570\u77e9\u96353x5, \u8fd9\u91cc\u76843\u662f\u6307\u6700\u540e\u5f97\u5230\u7684\u8bcd\u5411\u91cf\u7ef4\u5ea6)\u76f8\u4e58, \u5f97\u5230\u76ee\u6807\u8bcd\u6c47\u8868\u793a\u77e9\u9635(3x1). \u63a5\u7740, \u5c06\u76ee\u6807\u8bcd\u6c47\u8868\u793a\u77e9\u9635\u4e0e\u591a\u4e2a\u53d8\u6362\u77e9\u9635(\u53c2\u6570\u77e9\u96355x3)\u76f8\u4e58, \u5f97\u5230\u591a\u4e2a5x1\u7684\u7ed3\u679c\u77e9\u9635, \u5b83\u5c06\u4e0e\u6211\u4eecHope\u548cset\u5bf9\u5e94\u7684one-hot\u7f16\u7801\u77e9\u9635(5x1)\u8fdb\u884c\u635f\u5931\u7684\u8ba1\u7b97, \u7136\u540e\u66f4\u65b0\u7f51\u7edc\u53c2\u6570\u5b8c\u6210\u4e00\u6b21\u6a21 \u578b\u8fed\u4ee3. \u6700\u540e\u7a97\u53e3\u6309\u5e8f\u5411\u540e\u79fb\u52a8\uff0c\u91cd\u65b0\u66f4\u65b0\u53c2\u6570\uff0c\u76f4\u5230\u6240\u6709\u8bed\u6599\u88ab\u904d\u5386\u5b8c\u6210\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u53d8\u6362\u77e9\u9635\u5373\u53c2\u6570\u77e9\u9635(3x5)\uff0c\u8fd9\u4e2a\u53d8\u6362\u77e9\u9635\u4e0e\u6bcf\u4e2a\u8bcd\u6c47\u7684one-hot\u7f16\u7801(5x1)\u76f8\u4e58\uff0c\u5f97\u5230\u76843x1\u7684\u77e9\u9635\u5c31\u662f\u8be5\u8bcd\u6c47\u7684word2vec\u5f20\u91cf\u8868\u793a. \u4f7f\u7528fasttext\u5de5\u5177\u5b9e\u73b0word2vec\u7684\u8bad\u7ec3\u548c\u4f7f\u7528 \u7b2c\u4e00\u6b65: \u83b7\u53d6\u8bad\u7ec3\u6570\u636e \u7b2c\u4e8c\u6b65: \u8bad\u7ec3\u8bcd\u5411\u91cf \u7b2c\u4e09\u6b65: \u6a21\u578b\u8d85\u53c2\u6570\u8bbe\u5b9a \u7b2c\u56db\u6b65: \u6a21\u578b\u6548\u679c\u68c0\u9a8c \u7b2c\u4e94\u6b65: \u6a21\u578b\u7684\u4fdd\u5b58\u4e0e\u91cd\u52a0\u8f7d \u7b2c\u4e00\u6b65: \u83b7\u53d6\u8bad\u7ec3\u6570\u636e # \u5728\u8fd9\u91cc, \u6211\u4eec\u5c06\u7814\u7a76\u82f1\u8bed\u7ef4\u57fa\u767e\u79d1\u7684\u90e8\u5206\u7f51\u9875\u4fe1\u606f, \u5b83\u7684\u5927\u5c0f\u5728300M\u5de6\u53f3 # \u8fd9\u4e9b\u8bed\u6599\u5df2\u7ecf\u88ab\u51c6\u5907\u597d, \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Matt Mahoney\u7684\u7f51\u7ad9\u4e0b\u8f7d. # \u9996\u5148\u521b\u5efa\u4e00\u4e2a\u5b58\u50a8\u6570\u636e\u7684\u6587\u4ef6\u5939data $ mkdir data # \u4f7f\u7528wget\u4e0b\u8f7d\u6570\u636e\u7684zip\u538b\u7f29\u5305, \u5b83\u5c06\u5b58\u50a8\u5728data\u76ee\u5f55\u4e2d $ wget -c http://mattmahoney.net/dc/enwik9.zip -P data # \u4f7f\u7528unzip\u89e3\u538b, \u5982\u679c\u4f60\u7684\u670d\u52a1\u5668\u4e2d\u8fd8\u6ca1\u6709unzip\u547d\u4ee4, \u8bf7\u4f7f\u7528: yum install unzip -y # \u89e3\u538b\u540e\u5728data\u76ee\u5f55\u4e0b\u4f1a\u51fa\u73b0enwik9\u7684\u6587\u4ef6\u5939 $ unzip data/enwik9.zip -d data \u67e5\u770b\u539f\u59cb\u6570\u636e: $ head -10 data/enwik9 # \u539f\u59cb\u6570\u636e\u5c06\u8f93\u51fa\u5f88\u591a\u5305\u542bXML/HTML\u683c\u5f0f\u7684\u5185\u5bb9, \u8fd9\u4e9b\u5185\u5bb9\u5e76\u4e0d\u662f\u6211\u4eec\u9700\u8981\u7684 <mediawiki xmlns = \"http://www.mediawiki.org/xml/export-0.3/\" xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation = \"http://www.mediawiki.org/xml/export-0.3/ http://www.mediawiki.org/xml/export-0.3.xsd\" version = \"0.3\" xml:lang = \"en\" > <siteinfo> <sitename>Wikipedia</sitename> <base>http://en.wikipedia.org/wiki/Main_Page</base> <generator>MediaWiki 1 .6alpha</generator> < case >first-letter</case> <namespaces> <namespace key = \"-2\" >Media</namespace> <namespace key = \"-1\" >Special</namespace> <namespace key = \"0\" /> \u539f\u59cb\u6570\u636e\u5904\u7406: # \u4f7f\u7528wikifil.pl\u6587\u4ef6\u5904\u7406\u811a\u672c\u6765\u6e05\u9664XML/HTML\u683c\u5f0f\u7684\u5185\u5bb9 # \u6ce8: wikifil.pl\u6587\u4ef6\u5df2\u4e3a\u5927\u5bb6\u63d0\u4f9b $ perl wikifil.pl data/enwik9 > data/fil9 \u67e5\u770b\u9884\u5904\u7406\u540e\u7684\u6570\u636e: # \u67e5\u770b\u524d80\u4e2a\u5b57\u7b26 head -c 80 data/fil9 # \u8f93\u51fa\u7ed3\u679c\u4e3a\u7531\u7a7a\u683c\u5206\u5272\u7684\u5355\u8bcd anarchism originated as a term of abuse first used against early working class \u7b2c\u4e8c\u6b65: \u8bad\u7ec3\u8bcd\u5411\u91cf # \u4ee3\u7801\u8fd0\u884c\u5728python\u89e3\u91ca\u5668\u4e2d # \u5bfc\u5165fasttext >>> import fasttext # \u4f7f\u7528fasttext\u7684train_unsupervised(\u65e0\u76d1\u7763\u8bad\u7ec3\u65b9\u6cd5)\u8fdb\u884c\u8bcd\u5411\u91cf\u7684\u8bad\u7ec3 # \u5b83\u7684\u53c2\u6570\u662f\u6570\u636e\u96c6\u7684\u6301\u4e45\u5316\u6587\u4ef6\u8def\u5f84'data/fil9' >>> model = fasttext . train_unsupervised ( 'data/fil9' ) # \u6709\u6548\u8bad\u7ec3\u8bcd\u6c47\u91cf\u4e3a124M, \u5171218316\u4e2a\u5355\u8bcd Read 124 M words Number of words : 218316 Number of labels : 0 Progress : 100.0 % words / sec / thread : 53996 lr : 0.000000 loss : 0.734999 ETA : 0 h 0 m \u67e5\u770b\u5355\u8bcd\u5bf9\u5e94\u7684\u8bcd\u5411\u91cf: # \u901a\u8fc7get_word_vector\u65b9\u6cd5\u6765\u83b7\u5f97\u6307\u5b9a\u8bcd\u6c47\u7684\u8bcd\u5411\u91cf >>> model . get_word_vector ( \"the\" ) array ([ - 0.03087516 , 0.09221972 , 0.17660329 , 0.17308897 , 0.12863874 , 0.13912526 , - 0.09851588 , 0.00739991 , 0.37038437 , - 0.00845221 , ... - 0.21184735 , - 0.05048715 , - 0.34571868 , 0.23765688 , 0.23726143 ], dtype = float32 ) \u7b2c\u4e09\u6b65: \u6a21\u578b\u8d85\u53c2\u6570\u8bbe\u5b9a # \u5728\u8bad\u7ec3\u8bcd\u5411\u91cf\u8fc7\u7a0b\u4e2d, \u6211\u4eec\u53ef\u4ee5\u8bbe\u5b9a\u5f88\u591a\u5e38\u7528\u8d85\u53c2\u6570\u6765\u8c03\u8282\u6211\u4eec\u7684\u6a21\u578b\u6548\u679c, \u5982: # \u65e0\u76d1\u7763\u8bad\u7ec3\u6a21\u5f0f: 'skipgram' \u6216\u8005 'cbow', \u9ed8\u8ba4\u4e3a'skipgram', \u5728\u5b9e\u8df5\u4e2d\uff0cskipgram\u6a21\u5f0f\u5728\u5229\u7528\u5b50\u8bcd\u65b9\u9762\u6bd4cbow\u66f4\u597d. # \u8bcd\u5d4c\u5165\u7ef4\u5ea6dim: \u9ed8\u8ba4\u4e3a100, \u4f46\u968f\u7740\u8bed\u6599\u5e93\u7684\u589e\u5927, \u8bcd\u5d4c\u5165\u7684\u7ef4\u5ea6\u5f80\u5f80\u4e5f\u8981\u66f4\u5927. # \u6570\u636e\u5faa\u73af\u6b21\u6570epoch: \u9ed8\u8ba4\u4e3a5, \u4f46\u5f53\u4f60\u7684\u6570\u636e\u96c6\u8db3\u591f\u5927, \u53ef\u80fd\u4e0d\u9700\u8981\u90a3\u4e48\u591a\u6b21. # \u5b66\u4e60\u7387lr: \u9ed8\u8ba4\u4e3a0.05, \u6839\u636e\u7ecf\u9a8c, \u5efa\u8bae\u9009\u62e9[0.01\uff0c1]\u8303\u56f4\u5185. # \u4f7f\u7528\u7684\u7ebf\u7a0b\u6570thread: \u9ed8\u8ba4\u4e3a12\u4e2a\u7ebf\u7a0b, \u4e00\u822c\u5efa\u8bae\u548c\u4f60\u7684cpu\u6838\u6570\u76f8\u540c. >>> model = fasttext . train_unsupervised ( 'data/fil9' , \"cbow\" , dim = 300 , epoch = 1 , lr = 0.1 , thread = 8 ) Read 124 M words Number of words : 218316 Number of labels : 0 Progress : 100.0 % words / sec / thread : 49523 lr : 0.000000 avg . loss : 1.777205 ETA : 0 h 0 m 0 s \u7b2c\u56db\u6b65: \u6a21\u578b\u6548\u679c\u68c0\u9a8c # \u68c0\u67e5\u5355\u8bcd\u5411\u91cf\u8d28\u91cf\u7684\u4e00\u79cd\u7b80\u5355\u65b9\u6cd5\u5c31\u662f\u67e5\u770b\u5176\u90bb\u8fd1\u5355\u8bcd, \u901a\u8fc7\u6211\u4eec\u4e3b\u89c2\u6765\u5224\u65ad\u8fd9\u4e9b\u90bb\u8fd1\u5355\u8bcd\u662f\u5426\u4e0e\u76ee\u6807\u5355\u8bcd\u76f8\u5173\u6765\u7c97\u7565\u8bc4\u5b9a\u6a21\u578b\u6548\u679c\u597d\u574f. # \u67e5\u627e\"\u8fd0\u52a8\"\u7684\u90bb\u8fd1\u5355\u8bcd, \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\"\u4f53\u80b2\u7f51\", \"\u8fd0\u52a8\u6c7d\u8f66\", \"\u8fd0\u52a8\u670d\"\u7b49. >>> model . get_nearest_neighbors ( 'sports' ) [( 0.8414610624313354 , 'sportsnet' ), ( 0.8134572505950928 , 'sport' ), ( 0.8100415468215942 , 'sportscars' ), ( 0.8021156787872314 , 'sportsground' ), ( 0.7889881134033203 , 'sportswomen' ), ( 0.7863013744354248 , 'sportsplex' ), ( 0.7786710262298584 , 'sporty' ), ( 0.7696356177330017 , 'sportscar' ), ( 0.7619683146476746 , 'sportswear' ), ( 0.7600985765457153 , 'sportin' )] # \u67e5\u627e\"\u97f3\u4e50\"\u7684\u90bb\u8fd1\u5355\u8bcd, \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e0e\u97f3\u4e50\u6709\u5173\u7684\u8bcd\u6c47. >>> model . get_nearest_neighbors ( 'music' ) [( 0.8908010125160217 , 'emusic' ), ( 0.8464668393135071 , 'musicmoz' ), ( 0.8444250822067261 , 'musics' ), ( 0.8113634586334229 , 'allmusic' ), ( 0.8106718063354492 , 'musices' ), ( 0.8049437999725342 , 'musicam' ), ( 0.8004694581031799 , 'musicom' ), ( 0.7952923774719238 , 'muchmusic' ), ( 0.7852965593338013 , 'musicweb' ), ( 0.7767147421836853 , 'musico' )] # \u67e5\u627e\"\u5c0f\u72d7\"\u7684\u90bb\u8fd1\u5355\u8bcd, \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e0e\u5c0f\u72d7\u6709\u5173\u7684\u8bcd\u6c47. >>> model . get_nearest_neighbors ( 'dog' ) [( 0.8456876873970032 , 'catdog' ), ( 0.7480780482292175 , 'dogcow' ), ( 0.7289096117019653 , 'sleddog' ), ( 0.7269964218139648 , 'hotdog' ), ( 0.7114801406860352 , 'sheepdog' ), ( 0.6947550773620605 , 'dogo' ), ( 0.6897546648979187 , 'bodog' ), ( 0.6621081829071045 , 'maddog' ), ( 0.6605004072189331 , 'dogs' ), ( 0.6398137211799622 , 'dogpile' )] \u7b2c\u4e94\u6b65: \u6a21\u578b\u7684\u4fdd\u5b58\u4e0e\u91cd\u52a0\u8f7d # \u4f7f\u7528save_model\u4fdd\u5b58\u6a21\u578b >>> model . save_model ( \"fil9.bin\" ) # \u4f7f\u7528fasttext.load_model\u52a0\u8f7d\u6a21\u578b >>> model = fasttext . load_model ( \"fil9.bin\" ) >>> model . get_word_vector ( \"the\" ) array ([ - 0.03087516 , 0.09221972 , 0.17660329 , 0.17308897 , 0.12863874 , 0.13912526 , - 0.09851588 , 0.00739991 , 0.37038437 , - 0.00845221 , ... - 0.21184735 , - 0.05048715 , - 0.34571868 , 0.23765688 , 0.23726143 ], dtype = float32 ) \u4ec0\u4e48\u662fword embedding(\u8bcd\u5d4c\u5165) \u901a\u8fc7\u4e00\u5b9a\u7684\u65b9\u5f0f\u5c06\u8bcd\u6c47\u6620\u5c04\u5230\u6307\u5b9a\u7ef4\u5ea6(\u4e00\u822c\u662f\u66f4\u9ad8\u7ef4\u5ea6)\u7684\u7a7a\u95f4. \u5e7f\u4e49\u7684word embedding\u5305\u62ec\u6240\u6709\u5bc6\u96c6\u8bcd\u6c47\u5411\u91cf\u7684\u8868\u793a\u65b9\u6cd5\uff0c\u5982\u4e4b\u524d\u5b66\u4e60\u7684word2vec, \u5373\u53ef\u8ba4\u4e3a\u662fword embedding\u7684\u4e00\u79cd. \u72ed\u4e49\u7684word embedding\u662f\u6307\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u52a0\u5165\u7684embedding\u5c42, \u5bf9\u6574\u4e2a\u7f51\u7edc\u8fdb\u884c\u8bad\u7ec3\u7684\u540c\u65f6\u4ea7\u751f\u7684embedding\u77e9\u9635(embedding\u5c42\u7684\u53c2\u6570), \u8fd9\u4e2aembedding\u77e9\u9635\u5c31\u662f\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u6240\u6709\u8f93\u5165\u8bcd\u6c47\u7684\u5411\u91cf\u8868\u793a\u7ec4\u6210\u7684\u77e9\u9635. word embedding\u7684\u53ef\u89c6\u5316\u5206\u6790: \u901a\u8fc7\u4f7f\u7528tensorboard\u53ef\u89c6\u5316\u5d4c\u5165\u7684\u8bcd\u5411\u91cf. # \u5bfc\u5165torch\u548ctensorboard\u7684\u6458\u8981\u5199\u5165\u65b9\u6cd5 import torch import json import fileinput from torch.utils.tensorboard import SummaryWriter # \u5b9e\u4f8b\u5316\u4e00\u4e2a\u6458\u8981\u5199\u5165\u5bf9\u8c61 writer = SummaryWriter () # \u968f\u673a\u521d\u59cb\u5316\u4e00\u4e2a100x50\u7684\u77e9\u9635, \u8ba4\u4e3a\u5b83\u662f\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u7684\u8bcd\u5d4c\u5165\u77e9\u9635 # \u4ee3\u8868100\u4e2a\u8bcd\u6c47, \u6bcf\u4e2a\u8bcd\u6c47\u88ab\u8868\u793a\u621050\u7ef4\u7684\u5411\u91cf embedded = torch . randn ( 100 , 50 ) # \u5bfc\u5165\u4e8b\u5148\u51c6\u5907\u597d\u7684100\u4e2a\u4e2d\u6587\u8bcd\u6c47\u6587\u4ef6, \u5f62\u6210meta\u5217\u8868\u539f\u59cb\u8bcd\u6c47 meta = list ( map ( lambda x : x . strip (), fileinput . FileInput ( \"./vocab100.csv\" ))) writer . add_embedding ( embedded , metadata = meta ) writer . close () \u5728\u7ec8\u7aef\u542f\u52a8tensorboard\u670d\u52a1: $ tensorboard --logdir runs --host 0 .0.0.0 # \u901a\u8fc7http://0.0.0.0:6006\u8bbf\u95ee\u6d4f\u89c8\u5668\u53ef\u89c6\u5316\u9875\u9762 \u6d4f\u89c8\u5668\u5c55\u793a\u5e76\u53ef\u4ee5\u4f7f\u7528\u53f3\u4fa7\u8fd1\u90bb\u8bcd\u6c47\u529f\u80fd\u68c0\u9a8c\u6548\u679c: \u5c0f\u8282\u603b\u7ed3 \u5b66\u4e60\u4e86\u4ec0\u4e48\u662f\u6587\u672c\u5f20\u91cf\u8868\u793a: \u5c06\u4e00\u6bb5\u6587\u672c\u4f7f\u7528\u5f20\u91cf\u8fdb\u884c\u8868\u793a\uff0c\u5176\u4e2d\u4e00\u822c\u5c06\u8bcd\u6c47\u4e3a\u8868\u793a\u6210\u5411\u91cf\uff0c\u79f0\u4f5c\u8bcd\u5411\u91cf\uff0c\u518d\u7531\u5404\u4e2a\u8bcd\u5411\u91cf\u6309\u987a\u5e8f\u7ec4\u6210\u77e9\u9635\u5f62\u6210\u6587\u672c\u8868\u793a. \u5b66\u4e60\u4e86\u6587\u672c\u5f20\u91cf\u8868\u793a\u7684\u4f5c\u7528: \u5c06\u6587\u672c\u8868\u793a\u6210\u5f20\u91cf\uff08\u77e9\u9635\uff09\u5f62\u5f0f\uff0c\u80fd\u591f\u4f7f\u8bed\u8a00\u6587\u672c\u53ef\u4ee5\u4f5c\u4e3a\u8ba1\u7b97\u673a\u5904\u7406\u7a0b\u5e8f\u7684\u8f93\u5165\uff0c\u8fdb\u884c\u63a5\u4e0b\u6765\u4e00\u7cfb\u5217\u7684\u89e3\u6790\u5de5\u4f5c. \u5b66\u4e60\u4e86\u6587\u672c\u5f20\u91cf\u8868\u793a\u7684\u65b9\u6cd5: one-hot\u7f16\u7801 Word2vec Word Embedding \u4ec0\u4e48\u662fone-hot\u8bcd\u5411\u91cf\u8868\u793a: \u53c8\u79f0\u72ec\u70ed\u7f16\u7801\uff0c\u5c06\u6bcf\u4e2a\u8bcd\u8868\u793a\u6210\u5177\u6709n\u4e2a\u5143\u7d20\u7684\u5411\u91cf\uff0c\u8fd9\u4e2a\u8bcd\u5411\u91cf\u4e2d\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u662f1\uff0c\u5176\u4ed6\u5143\u7d20\u90fd\u662f0\uff0c\u4e0d\u540c\u8bcd\u6c47\u5143\u7d20\u4e3a0\u7684\u4f4d\u7f6e\u4e0d\u540c\uff0c\u5176\u4e2dn\u7684\u5927\u5c0f\u662f\u6574\u4e2a\u8bed\u6599\u4e2d\u4e0d\u540c\u8bcd\u6c47\u7684\u603b\u6570. \u5b66\u4e60\u4e86onehot\u7f16\u7801\u5b9e\u73b0. \u5b66\u4e60\u4e86one-hot\u7f16\u7801\u7684\u4f18\u52a3\u52bf\uff1a \u4f18\u52bf\uff1a\u64cd\u4f5c\u7b80\u5355\uff0c\u5bb9\u6613\u7406\u89e3. \u52a3\u52bf\uff1a\u5b8c\u5168\u5272\u88c2\u4e86\u8bcd\u4e0e\u8bcd\u4e4b\u95f4\u7684\u8054\u7cfb\uff0c\u800c\u4e14\u5728\u5927\u8bed\u6599\u96c6\u4e0b\uff0c\u6bcf\u4e2a\u5411\u91cf\u7684\u957f\u5ea6\u8fc7\u5927\uff0c\u5360\u636e\u5927\u91cf\u5185\u5b58. \u5b66\u4e60\u4e86\u4ec0\u4e48\u662fword2vec: \u662f\u4e00\u79cd\u6d41\u884c\u7684\u5c06\u8bcd\u6c47\u8868\u793a\u6210\u5411\u91cf\u7684\u65e0\u76d1\u7763\u8bad\u7ec3\u65b9\u6cd5, \u8be5\u8fc7\u7a0b\u5c06\u6784\u5efa\u795e\u7ecf\u7f51\u7edc\u6a21\u578b, \u5c06\u7f51\u7edc\u53c2\u6570\u4f5c\u4e3a\u8bcd\u6c47\u7684\u5411\u91cf\u8868\u793a, \u5b83\u5305\u542bCBOW\u548cskipgram\u4e24\u79cd\u8bad\u7ec3\u6a21\u5f0f. \u5b66\u4e60\u4e86CBOW(Continuous bag of words)\u6a21\u5f0f: \u7ed9\u5b9a\u4e00\u6bb5\u7528\u4e8e\u8bad\u7ec3\u7684\u6587\u672c\u8bed\u6599, \u518d\u9009\u5b9a\u67d0\u6bb5\u957f\u5ea6(\u7a97\u53e3)\u4f5c\u4e3a\u7814\u7a76\u5bf9\u8c61, \u4f7f\u7528\u4e0a\u4e0b\u6587\u8bcd\u6c47\u9884\u6d4b\u76ee\u6807\u8bcd\u6c47. \u5b66\u4e60\u4e86CBOW\u6a21\u5f0f\u4e0b\u7684word2vec\u8fc7\u7a0b\u8bf4\u660e: \u5047\u8bbe\u6211\u4eec\u7ed9\u5b9a\u7684\u8bad\u7ec3\u8bed\u6599\u53ea\u6709\u4e00\u53e5\u8bdd: Hope can set you free (\u613f\u4f60\u81ea\u7531\u6210\u957f)\uff0c\u7a97\u53e3\u5927\u5c0f\u4e3a3\uff0c\u56e0\u6b64\u6a21\u578b\u7684\u7b2c\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c\u6765\u81eaHope you set\uff0c\u56e0\u4e3a\u662fCBOW\u6a21\u5f0f\uff0c\u6240\u4ee5\u5c06\u4f7f\u7528Hope\u548cset\u4f5c\u4e3a\u8f93\u5165\uff0cyou\u4f5c\u4e3a\u8f93\u51fa\uff0c\u5728\u6a21\u578b\u8bad\u7ec3\u65f6\uff0c Hope\uff0cset\uff0cyou\u7b49\u8bcd\u6c47\u90fd\u4f7f\u7528\u5b83\u4eec\u7684one-hot\u7f16\u7801. \u5982\u56fe\u6240\u793a: \u6bcf\u4e2aone-hot\u7f16\u7801\u7684\u5355\u8bcd\u4e0e\u5404\u81ea\u7684\u53d8\u6362\u77e9\u9635(\u5373\u53c2\u6570\u77e9\u96353x5, \u8fd9\u91cc\u76843\u662f\u6307\u6700\u540e\u5f97\u5230\u7684\u8bcd\u5411\u91cf\u7ef4\u5ea6)\u76f8\u4e58\u4e4b\u540e\u518d\u76f8\u52a0, \u5f97\u5230\u4e0a\u4e0b\u6587\u8868\u793a\u77e9\u9635(3x1). \u63a5\u7740, \u5c06\u4e0a\u4e0b\u6587\u8868\u793a\u77e9\u9635\u4e0e\u53d8\u6362\u77e9\u9635(\u53c2\u6570\u77e9\u96355x3, \u6240\u6709\u7684\u53d8\u6362\u77e9\u9635\u5171\u4eab\u53c2\u6570)\u76f8\u4e58, \u5f97\u52305x1\u7684\u7ed3\u679c\u77e9\u9635, \u5b83\u5c06\u4e0e\u6211\u4eec\u771f\u6b63\u7684\u76ee\u6807\u77e9\u9635\u5373you\u7684one-hot\u7f16\u7801\u77e9\u9635(5x1)\u8fdb\u884c\u635f\u5931\u7684\u8ba1\u7b97, \u7136\u540e\u66f4\u65b0\u7f51\u7edc\u53c2\u6570\u5b8c\u6210\u4e00\u6b21\u6a21\u578b\u8fed\u4ee3. \u6700\u540e\u7a97\u53e3\u6309\u5e8f\u5411\u540e\u79fb\u52a8\uff0c\u91cd\u65b0\u66f4\u65b0\u53c2\u6570\uff0c\u76f4\u5230\u6240\u6709\u8bed\u6599\u88ab\u904d\u5386\u5b8c\u6210\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u53d8\u6362\u77e9\u9635(3x5)\uff0c\u8fd9\u4e2a\u53d8\u6362\u77e9\u9635\u4e0e\u6bcf\u4e2a\u8bcd\u6c47\u7684one-hot\u7f16\u7801(5x1)\u76f8\u4e58\uff0c\u5f97\u5230\u76843x1\u7684\u77e9\u9635\u5c31\u662f\u8be5\u8bcd\u6c47\u7684word2vec\u5f20\u91cf\u8868\u793a. \u5b66\u4e60\u4e86skipgram\u6a21\u5f0f: \u7ed9\u5b9a\u4e00\u6bb5\u7528\u4e8e\u8bad\u7ec3\u7684\u6587\u672c\u8bed\u6599, \u518d\u9009\u5b9a\u67d0\u6bb5\u957f\u5ea6(\u7a97\u53e3)\u4f5c\u4e3a\u7814\u7a76\u5bf9\u8c61, \u4f7f\u7528\u76ee\u6807\u8bcd\u6c47\u9884\u6d4b\u4e0a\u4e0b\u6587\u8bcd\u6c47. \u5b66\u4e60\u4e86skipgram\u6a21\u5f0f\u4e0b\u7684word2vec\u8fc7\u7a0b\u8bf4\u660e: \u5047\u8bbe\u6211\u4eec\u7ed9\u5b9a\u7684\u8bad\u7ec3\u8bed\u6599\u53ea\u6709\u4e00\u53e5\u8bdd: Hope can set you free (\u613f\u4f60\u81ea\u7531\u6210\u957f)\uff0c\u7a97\u53e3\u5927\u5c0f\u4e3a3\uff0c\u56e0\u6b64\u6a21\u578b\u7684\u7b2c\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c\u6765\u81eaHope you set\uff0c\u56e0\u4e3a\u662fskipgram\u6a21\u5f0f\uff0c\u6240\u4ee5\u5c06\u4f7f\u7528you\u4f5c\u4e3a\u8f93\u5165 \uff0chope\u548cset\u4f5c\u4e3a\u8f93\u51fa\uff0c\u5728\u6a21\u578b\u8bad\u7ec3\u65f6\uff0c Hope\uff0cset\uff0cyou\u7b49\u8bcd\u6c47\u90fd\u4f7f\u7528\u5b83\u4eec\u7684one-hot\u7f16\u7801. \u5982\u56fe\u6240\u793a: \u5c06you\u7684one-hot\u7f16\u7801\u4e0e\u53d8\u6362\u77e9\u9635(\u5373\u53c2\u6570\u77e9\u96353x5, \u8fd9\u91cc\u76843\u662f\u6307\u6700\u540e\u5f97\u5230\u7684\u8bcd\u5411\u91cf\u7ef4\u5ea6)\u76f8\u4e58, \u5f97\u5230\u76ee\u6807\u8bcd\u6c47\u8868\u793a\u77e9\u9635(3x1). \u63a5\u7740, \u5c06\u76ee\u6807\u8bcd\u6c47\u8868\u793a\u77e9\u9635\u4e0e\u591a\u4e2a\u53d8\u6362\u77e9\u9635(\u53c2\u6570\u77e9\u96355x3)\u76f8\u4e58, \u5f97\u5230\u591a\u4e2a5x1\u7684\u7ed3\u679c\u77e9\u9635, \u5b83\u5c06\u4e0e\u6211\u4eechope\u548cset\u5bf9\u5e94\u7684one-hot\u7f16\u7801\u77e9\u9635(5x1)\u8fdb\u884c\u635f\u5931\u7684\u8ba1\u7b97, \u7136\u540e\u66f4\u65b0\u7f51\u7edc\u53c2\u6570\u5b8c\u6210\u4e00\u6b21\u6a21 \u578b\u8fed\u4ee3. \u6700\u540e\u7a97\u53e3\u6309\u5e8f\u5411\u540e\u79fb\u52a8\uff0c\u91cd\u65b0\u66f4\u65b0\u53c2\u6570\uff0c\u76f4\u5230\u6240\u6709\u8bed\u6599\u88ab\u904d\u5386\u5b8c\u6210\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u53d8\u6362\u77e9\u9635\u5373\u53c2\u6570\u77e9\u9635(3x5)\uff0c\u8fd9\u4e2a\u53d8\u6362\u77e9\u9635\u4e0e\u6bcf\u4e2a\u8bcd\u6c47\u7684one-hot\u7f16\u7801(5x1)\u76f8\u4e58\uff0c\u5f97\u5230\u76843x1\u7684\u77e9\u9635\u5c31\u662f\u8be5\u8bcd\u6c47\u7684word2vec\u5f20\u91cf\u8868\u793a. \u5b66\u4e60\u4e86\u4f7f\u7528fasttext\u5de5\u5177\u5b9e\u73b0word2vec\u7684\u8bad\u7ec3\u548c\u4f7f\u7528: \u7b2c\u4e00\u6b65: \u83b7\u53d6\u8bad\u7ec3\u6570\u636e \u7b2c\u4e8c\u6b65: \u8bad\u7ec3\u8bcd\u5411\u91cf \u7b2c\u4e09\u6b65: \u6a21\u578b\u8d85\u53c2\u6570\u8bbe\u5b9a \u7b2c\u56db\u6b65: \u6a21\u578b\u6548\u679c\u68c0\u9a8c \u7b2c\u4e94\u6b65: \u6a21\u578b\u7684\u4fdd\u5b58\u4e0e\u91cd\u52a0\u8f7d \u5b66\u4e60\u4e86\u4ec0\u4e48\u662fword embedding(\u8bcd\u5d4c\u5165): \u901a\u8fc7\u4e00\u5b9a\u7684\u65b9\u5f0f\u5c06\u8bcd\u6c47\u6620\u5c04\u5230\u6307\u5b9a\u7ef4\u5ea6(\u4e00\u822c\u662f\u66f4\u9ad8\u7ef4\u5ea6)\u7684\u7a7a\u95f4. \u5e7f\u4e49\u7684word embedding\u5305\u62ec\u6240\u6709\u5bc6\u96c6\u8bcd\u6c47\u5411\u91cf\u7684\u8868\u793a\u65b9\u6cd5\uff0c\u5982\u4e4b\u524d\u5b66\u4e60\u7684word2vec, \u5373\u53ef\u8ba4\u4e3a\u662fword embedding\u7684\u4e00\u79cd. \u72ed\u4e49\u7684word embedding\u662f\u6307\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u52a0\u5165\u7684embedding\u5c42, \u5bf9\u6574\u4e2a\u7f51\u7edc\u8fdb\u884c\u8bad\u7ec3\u7684\u540c\u65f6\u4ea7\u751f\u7684embedding\u77e9\u9635(embedding\u5c42\u7684\u53c2\u6570), \u8fd9\u4e2aembedding\u77e9\u9635\u5c31\u662f\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u6240\u6709\u8f93\u5165\u8bcd\u6c47\u7684\u5411\u91cf\u8868\u793a\u7ec4\u6210\u7684\u77e9\u9635. \u5b66\u4e60\u4e86word embedding\u7684\u53ef\u89c6\u5316\u5206\u6790: \u901a\u8fc7\u4f7f\u7528tensorboard\u53ef\u89c6\u5316\u5d4c\u5165\u7684\u8bcd\u5411\u91cf. \u5728\u7ec8\u7aef\u542f\u52a8tensorboard\u670d\u52a1. \u6d4f\u89c8\u5668\u5c55\u793a\u5e76\u53ef\u4ee5\u4f7f\u7528\u53f3\u4fa7\u8fd1\u90bb\u8bcd\u6c47\u529f\u80fd\u68c0\u9a8c\u6548\u679c. 1.4 \u6587\u672c\u6570\u636e\u5206\u6790 \u5b66\u4e60\u76ee\u6807 \u4e86\u89e3\u6587\u672c\u6570\u636e\u5206\u6790\u7684\u4f5c\u7528. \u638c\u63e1\u5e38\u7528\u7684\u51e0\u79cd\u6587\u672c\u6570\u636e\u5206\u6790\u65b9\u6cd5. \u6587\u672c\u6570\u636e\u5206\u6790\u7684\u4f5c\u7528: \u6587\u672c\u6570\u636e\u5206\u6790\u80fd\u591f\u6709\u6548\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u6570\u636e\u8bed\u6599, \u5feb\u901f\u68c0\u67e5\u51fa\u8bed\u6599\u53ef\u80fd\u5b58\u5728\u7684\u95ee\u9898, \u5e76\u6307\u5bfc\u4e4b\u540e\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4e00\u4e9b\u8d85\u53c2\u6570\u7684\u9009\u62e9. \u5e38\u7528\u7684\u51e0\u79cd\u6587\u672c\u6570\u636e\u5206\u6790\u65b9\u6cd5: \u6807\u7b7e\u6570\u91cf\u5206\u5e03 \u53e5\u5b50\u957f\u5ea6\u5206\u5e03 \u8bcd\u9891\u7edf\u8ba1\u4e0e\u5173\u952e\u8bcd\u8bcd\u4e91 \u8bf4\u660e: \u6211\u4eec\u5c06\u57fa\u4e8e\u771f\u5b9e\u7684\u4e2d\u6587\u9152\u5e97\u8bc4\u8bba\u8bed\u6599\u6765\u8bb2\u89e3\u5e38\u7528\u7684\u51e0\u79cd\u6587\u672c\u6570\u636e\u5206\u6790\u65b9\u6cd5. \u4e2d\u6587\u9152\u5e97\u8bc4\u8bba\u8bed\u6599: \u5c5e\u4e8e\u4e8c\u5206\u7c7b\u7684\u4e2d\u6587\u60c5\u611f\u5206\u6790\u8bed\u6599, \u8be5\u8bed\u6599\u5b58\u653e\u5728\"./cn_data\"\u76ee\u5f55\u4e0b. \u5176\u4e2dtrain.tsv\u4ee3\u8868\u8bad\u7ec3\u96c6, dev.tsv\u4ee3\u8868\u9a8c\u8bc1\u96c6, \u4e8c\u8005\u6570\u636e\u6837\u5f0f\u76f8\u540c. train.tsv\u6570\u636e\u6837\u5f0f: sentence label \u65e9\u9910\u4e0d\u597d,\u670d\u52a1\u4e0d\u5230\u4f4d,\u665a\u9910\u65e0\u897f\u9910,\u65e9\u9910\u665a\u9910\u76f8\u540c,\u623f\u95f4\u6761\u4ef6\u4e0d\u597d,\u9910\u5385\u4e0d\u5206\u5438\u70df\u533a.\u623f\u95f4\u4e0d\u5206\u6709\u65e0\u70df\u623f. 0 \u53bb\u7684\u65f6\u5019 ,\u9152\u5e97\u5927\u5385\u548c\u9910\u5385\u5728\u88c5\u4fee,\u611f\u89c9\u5927\u5385\u6709\u70b9\u6324.\u7531\u4e8e\u9910\u5385\u88c5\u4fee\u672c\u6765\u8be5\u4eab\u53d7\u7684\u65e9\u996d,\u4e5f\u6ca1\u6709\u4eab\u53d7(\u4ed6\u4eec\u662f8\u70b9\u5f00\u59cb\u6bcf\u4e2a\u623f\u95f4\u9001,\u4f46\u662f\u6211\u65f6\u95f4\u6765\u4e0d\u53ca\u4e86)\u4e0d\u8fc7\u524d\u53f0\u670d\u52a1\u5458\u6001\u5ea6\u597d! 1 \u6709\u5f88\u957f\u65f6\u95f4\u6ca1\u6709\u5728\u897f\u85cf\u5927\u53a6\u4f4f\u4e86\uff0c\u4ee5\u524d\u53bb\u5317\u4eac\u5728\u8fd9\u91cc\u4f4f\u7684\u8f83\u591a\u3002\u8fd9\u6b21\u4f4f\u8fdb\u6765\u53d1\u73b0\u6362\u4e86\u6db2\u6676\u7535\u89c6\uff0c\u4f46\u7f51\u7edc\u4e0d\u662f\u5f88\u597d\uff0c\u4ed6\u4eec\u81ea\u5df1\u8bf4\u662f\u6536\u8d39\u7684\u539f\u56e0\u9020\u6210\u7684\u3002\u5176\u5b83\u8fd8\u597d\u3002 1 \u975e\u5e38\u597d\u7684\u5730\u7406\u4f4d\u7f6e\uff0c\u4f4f\u7684\u662f\u8c6a\u534e\u6d77\u666f\u623f\uff0c\u6253\u5f00\u7a97\u6237\u5c31\u53ef\u4ee5\u770b\u89c1\u6808\u6865\u548c\u6d77\u666f\u3002\u8bb0\u5f97\u5f88\u65e9\u4ee5\u524d\u4e5f\u4f4f\u8fc7\uff0c\u73b0\u5728\u91cd\u65b0\u88c5\u4fee\u4e86\u3002\u603b\u7684\u6765\u8bf4\u6bd4\u8f83\u6ee1\u610f\uff0c\u4ee5\u540e\u8fd8\u4f1a\u4f4f 1 \u4ea4\u901a\u5f88\u65b9\u4fbf\uff0c\u623f\u95f4\u5c0f\u4e86\u4e00\u70b9\uff0c\u4f46\u662f\u5e72\u51c0\u6574\u6d01\uff0c\u5f88\u6709\u9999\u6e2f\u7684\u7279\u8272\uff0c\u6027\u4ef7\u6bd4\u8f83\u9ad8\uff0c\u63a8\u8350\u4e00\u4e0b\u54e6 1 \u9152\u5e97\u7684\u88c5\u4fee\u6bd4\u8f83\u9648\u65e7\uff0c\u623f\u95f4\u7684\u9694\u97f3\uff0c\u4e3b\u8981\u662f\u536b\u751f\u95f4\u7684\u9694\u97f3\u975e\u5e38\u5dee\uff0c\u53ea\u80fd\u7b97\u662f\u4e00\u822c\u7684 0 \u9152\u5e97\u6709\u70b9\u65e7\uff0c\u623f\u95f4\u6bd4\u8f83\u5c0f\uff0c\u4f46\u9152\u5e97\u7684\u4f4d\u5b50\u4e0d\u9519\uff0c\u5c31\u5728\u6d77\u8fb9\uff0c\u53ef\u4ee5\u76f4\u63a5\u53bb\u6e38\u6cf3\u30028\u697c\u7684\u6d77\u666f\u6253\u5f00\u7a97\u6237\u5c31\u662f\u6d77\u3002\u5982\u679c\u60f3\u4f4f\u5728\u70ed\u95f9\u7684\u5730\u5e26\uff0c\u8fd9\u91cc\u4e0d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\uff0c\u4e0d\u8fc7\u5a01\u6d77\u57ce\u5e02\u771f\u7684\u6bd4\u8f83\u5c0f\uff0c\u6253\u8f66\u8fd8\u662f\u76f8\u5f53\u4fbf\u5b9c\u7684\u3002\u665a\u4e0a\u9152\u5e97\u95e8\u53e3\u51fa\u79df\u8f66\u6bd4\u8f83\u5c11\u3002 1 \u4f4d\u7f6e\u5f88\u597d\uff0c\u8d70\u8def\u5230\u6587\u5e99\u3001\u6e05\u51c9\u5bfa5\u5206\u949f\u90fd\u7528\u4e0d\u4e86\uff0c\u5468\u8fb9\u516c\u4ea4\u8f66\u5f88\u591a\u5f88\u65b9\u4fbf\uff0c\u5c31\u662f\u51fa\u79df\u8f66\u4e0d\u592a\u7231\u53bb\uff08\u8001\u57ce\u533a\u8def\u7a84\u7231\u5835\u8f66\uff09\uff0c\u56e0\u4e3a\u662f\u8001\u5bbe\u9986\u6240\u4ee5\u8bbe\u65bd\u8981\u9648\u65e7\u4e9b\uff0c 1 \u9152\u5e97\u8bbe\u5907\u4e00\u822c\uff0c\u5957\u623f\u91cc\u5367\u5ba4\u7684\u4e0d\u80fd\u4e0a\u7f51\uff0c\u8981\u5230\u5ba2\u5385\u53bb\u3002 0 train.tsv\u6570\u636e\u6837\u5f0f\u8bf4\u660e: train.tsv\u4e2d\u7684\u6570\u636e\u5185\u5bb9\u5171\u5206\u4e3a2\u5217, \u7b2c\u4e00\u5217\u6570\u636e\u4ee3\u8868\u5177\u6709\u611f\u60c5\u8272\u5f69\u7684\u8bc4\u8bba\u6587\u672c; \u7b2c\u4e8c\u5217\u6570\u636e, 0\u62161, \u4ee3\u8868\u6bcf\u6761\u6587\u672c\u6570\u636e\u662f\u79ef\u6781\u6216\u8005\u6d88\u6781\u7684\u8bc4\u8bba, 0\u4ee3\u8868\u6d88\u6781, 1\u4ee3\u8868\u79ef\u6781. \u83b7\u5f97\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u7684\u6807\u7b7e\u6570\u91cf\u5206\u5e03 # \u5bfc\u5165\u5fc5\u5907\u5de5\u5177\u5305 import seaborn as sns import pandas as pd import matplotlib.pyplot as plt # \u8bbe\u7f6e\u663e\u793a\u98ce\u683c plt . style . use ( 'fivethirtyeight' ) # \u5206\u522b\u8bfb\u53d6\u8bad\u7ec3tsv\u548c\u9a8c\u8bc1tsv train_data = pd . read_csv ( \"./cn_data/train.tsv\" , sep = \" \\t \" ) valid_data = pd . read_csv ( \"./cn_data/dev.tsv\" , sep = \" \\t \" ) # \u83b7\u5f97\u8bad\u7ec3\u6570\u636e\u6807\u7b7e\u6570\u91cf\u5206\u5e03 sns . countplot ( \"label\" , data = train_data ) plt . title ( \"train_data\" ) plt . show () # \u83b7\u53d6\u9a8c\u8bc1\u6570\u636e\u6807\u7b7e\u6570\u91cf\u5206\u5e03 sns . countplot ( \"label\" , data = valid_data ) plt . title ( \"valid_data\" ) plt . show () \u8bad\u7ec3\u96c6\u6807\u7b7e\u6570\u91cf\u5206\u5e03: \u9a8c\u8bc1\u96c6\u6807\u7b7e\u6570\u91cf\u5206\u5e03: \u5206\u6790: \u5728\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u8bc4\u4f30\u4e2d, \u6211\u4eec\u4e00\u822c\u4f7f\u7528ACC\u4f5c\u4e3a\u8bc4\u4f30\u6307\u6807, \u82e5\u60f3\u5c06ACC\u7684\u57fa\u7ebf\u5b9a\u4e49\u572850%\u5de6\u53f3, \u5219\u9700\u8981\u6211\u4eec\u7684\u6b63\u8d1f\u6837\u672c\u6bd4\u4f8b\u7ef4\u6301\u57281:1\u5de6\u53f3, \u5426\u5219\u5c31\u8981\u8fdb\u884c\u5fc5\u8981\u7684\u6570\u636e\u589e\u5f3a\u6216\u6570\u636e\u5220\u51cf. \u4e0a\u56fe\u4e2d\u8bad\u7ec3\u548c\u9a8c\u8bc1\u96c6\u6b63\u8d1f\u6837\u672c\u90fd\u7a0d\u6709\u4e0d\u5747\u8861, \u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u6570\u636e\u589e\u5f3a. \u83b7\u53d6\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u7684\u53e5\u5b50\u957f\u5ea6\u5206\u5e03 # \u5728\u8bad\u7ec3\u6570\u636e\u4e2d\u6dfb\u52a0\u65b0\u7684\u53e5\u5b50\u957f\u5ea6\u5217, \u6bcf\u4e2a\u5143\u7d20\u7684\u503c\u90fd\u662f\u5bf9\u5e94\u7684\u53e5\u5b50\u5217\u7684\u957f\u5ea6 train_data [ \"sentence_length\" ] = list ( map ( lambda x : len ( x ), train_data [ \"sentence\" ])) # \u7ed8\u5236\u53e5\u5b50\u957f\u5ea6\u5217\u7684\u6570\u91cf\u5206\u5e03\u56fe sns . countplot ( \"sentence_length\" , data = train_data ) # \u4e3b\u8981\u5173\u6ce8count\u957f\u5ea6\u5206\u5e03\u7684\u7eb5\u5750\u6807, \u4e0d\u9700\u8981\u7ed8\u5236\u6a2a\u5750\u6807, \u6a2a\u5750\u6807\u8303\u56f4\u901a\u8fc7dist\u56fe\u8fdb\u884c\u67e5\u770b plt . xticks ([]) plt . show () # \u7ed8\u5236dist\u957f\u5ea6\u5206\u5e03\u56fe sns . distplot ( train_data [ \"sentence_length\" ]) # \u4e3b\u8981\u5173\u6ce8dist\u957f\u5ea6\u5206\u5e03\u6a2a\u5750\u6807, \u4e0d\u9700\u8981\u7ed8\u5236\u7eb5\u5750\u6807 plt . yticks ([]) plt . show () # \u5728\u9a8c\u8bc1\u6570\u636e\u4e2d\u6dfb\u52a0\u65b0\u7684\u53e5\u5b50\u957f\u5ea6\u5217, \u6bcf\u4e2a\u5143\u7d20\u7684\u503c\u90fd\u662f\u5bf9\u5e94\u7684\u53e5\u5b50\u5217\u7684\u957f\u5ea6 valid_data [ \"sentence_length\" ] = list ( map ( lambda x : len ( x ), valid_data [ \"sentence\" ])) # \u7ed8\u5236\u53e5\u5b50\u957f\u5ea6\u5217\u7684\u6570\u91cf\u5206\u5e03\u56fe sns . countplot ( \"sentence_length\" , data = valid_data ) # \u4e3b\u8981\u5173\u6ce8count\u957f\u5ea6\u5206\u5e03\u7684\u7eb5\u5750\u6807, \u4e0d\u9700\u8981\u7ed8\u5236\u6a2a\u5750\u6807, \u6a2a\u5750\u6807\u8303\u56f4\u901a\u8fc7dist\u56fe\u8fdb\u884c\u67e5\u770b plt . xticks ([]) plt . show () # \u7ed8\u5236dist\u957f\u5ea6\u5206\u5e03\u56fe sns . distplot ( valid_data [ \"sentence_length\" ]) # \u4e3b\u8981\u5173\u6ce8dist\u957f\u5ea6\u5206\u5e03\u6a2a\u5750\u6807, \u4e0d\u9700\u8981\u7ed8\u5236\u7eb5\u5750\u6807 plt . yticks ([]) plt . show () \u8bad\u7ec3\u96c6\u53e5\u5b50\u957f\u5ea6\u5206\u5e03: \u9a8c\u8bc1\u96c6\u53e5\u5b50\u957f\u5ea6\u5206\u5e03: \u5206\u6790: \u901a\u8fc7\u7ed8\u5236\u53e5\u5b50\u957f\u5ea6\u5206\u5e03\u56fe, \u53ef\u4ee5\u5f97\u77e5\u6211\u4eec\u7684\u8bed\u6599\u4e2d\u5927\u90e8\u5206\u53e5\u5b50\u957f\u5ea6\u7684\u5206\u5e03\u8303\u56f4, \u56e0\u4e3a\u6a21\u578b\u7684\u8f93\u5165\u8981\u6c42\u4e3a\u56fa\u5b9a\u5c3a\u5bf8\u7684\u5f20\u91cf\uff0c\u5408\u7406\u7684\u957f\u5ea6\u8303\u56f4\u5bf9\u4e4b\u540e\u8fdb\u884c\u53e5\u5b50\u622a\u65ad\u8865\u9f50(\u89c4\u8303\u957f\u5ea6)\u8d77\u5230\u5173\u952e\u7684\u6307\u5bfc\u4f5c\u7528. \u4e0a\u56fe\u4e2d\u5927\u90e8\u5206\u53e5\u5b50\u957f\u5ea6\u7684\u8303\u56f4\u5927\u81f4\u4e3a20-250\u4e4b\u95f4. \u83b7\u53d6\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u7684\u6b63\u8d1f\u6837\u672c\u957f\u5ea6\u6563\u70b9\u5206\u5e03 # \u7ed8\u5236\u8bad\u7ec3\u96c6\u957f\u5ea6\u5206\u5e03\u7684\u6563\u70b9\u56fe sns . stripplot ( y = 'sentence_length' , x = 'label' , data = train_data ) plt . show () # \u7ed8\u5236\u9a8c\u8bc1\u96c6\u957f\u5ea6\u5206\u5e03\u7684\u6563\u70b9\u56fe sns . stripplot ( y = 'sentence_length' , x = 'label' , data = valid_data ) plt . show () \u8bad\u7ec3\u96c6\u4e0a\u6b63\u8d1f\u6837\u672c\u7684\u957f\u5ea6\u6563\u70b9\u5206\u5e03: \u9a8c\u8bc1\u96c6\u4e0a\u6b63\u8d1f\u6837\u672c\u7684\u957f\u5ea6\u6563\u70b9\u5206\u5e03: \u5206\u6790: \u901a\u8fc7\u67e5\u770b\u6b63\u8d1f\u6837\u672c\u957f\u5ea6\u6563\u70b9\u56fe, \u53ef\u4ee5\u6709\u6548\u5b9a\u4f4d\u5f02\u5e38\u70b9\u7684\u51fa\u73b0\u4f4d\u7f6e, \u5e2e\u52a9\u6211\u4eec\u66f4\u51c6\u786e\u8fdb\u884c\u4eba\u5de5\u8bed\u6599\u5ba1\u67e5. \u4e0a\u56fe\u4e2d\u5728\u8bad\u7ec3\u96c6\u6b63\u6837\u672c\u4e2d\u51fa\u73b0\u4e86\u5f02\u5e38\u70b9, \u5b83\u7684\u53e5\u5b50\u957f\u5ea6\u8fd13500\u5de6\u53f3, \u9700\u8981\u6211\u4eec\u4eba\u5de5\u5ba1\u67e5. \u83b7\u5f97\u8bad\u7ec3\u96c6\u4e0e\u9a8c\u8bc1\u96c6\u4e0d\u540c\u8bcd\u6c47\u603b\u6570\u7edf\u8ba1 # \u5bfc\u5165jieba\u7528\u4e8e\u5206\u8bcd # \u5bfc\u5165chain\u65b9\u6cd5\u7528\u4e8e\u6241\u5e73\u5316\u5217\u8868 import jieba from itertools import chain # \u8fdb\u884c\u8bad\u7ec3\u96c6\u7684\u53e5\u5b50\u8fdb\u884c\u5206\u8bcd, \u5e76\u7edf\u8ba1\u51fa\u4e0d\u540c\u8bcd\u6c47\u7684\u603b\u6570 train_vocab = set ( chain ( * map ( lambda x : jieba . lcut ( x ), train_data [ \"sentence\" ]))) print ( \"\u8bad\u7ec3\u96c6\u5171\u5305\u542b\u4e0d\u540c\u8bcd\u6c47\u603b\u6570\u4e3a\uff1a\" , len ( train_vocab )) # \u8fdb\u884c\u9a8c\u8bc1\u96c6\u7684\u53e5\u5b50\u8fdb\u884c\u5206\u8bcd, \u5e76\u7edf\u8ba1\u51fa\u4e0d\u540c\u8bcd\u6c47\u7684\u603b\u6570 valid_vocab = set ( chain ( * map ( lambda x : jieba . lcut ( x ), valid_data [ \"sentence\" ]))) print ( \"\u8bad\u7ec3\u96c6\u5171\u5305\u542b\u4e0d\u540c\u8bcd\u6c47\u603b\u6570\u4e3a\uff1a\" , len ( valid_vocab )) \u8f93\u51fa\u6548\u679c: \u8bad\u7ec3\u96c6\u5171\u5305\u542b\u4e0d\u540c\u8bcd\u6c47\u603b\u6570\u4e3a\uff1a 12147 \u8bad\u7ec3\u96c6\u5171\u5305\u542b\u4e0d\u540c\u8bcd\u6c47\u603b\u6570\u4e3a\uff1a 6857 \u83b7\u5f97\u8bad\u7ec3\u96c6\u4e0a\u6b63\u8d1f\u7684\u6837\u672c\u7684\u9ad8\u9891\u5f62\u5bb9\u8bcd\u8bcd\u4e91 # \u4f7f\u7528jieba\u4e2d\u7684\u8bcd\u6027\u6807\u6ce8\u529f\u80fd import jieba.posseg as pseg def get_a_list ( text ): \"\"\"\u7528\u4e8e\u83b7\u53d6\u5f62\u5bb9\u8bcd\u5217\u8868\"\"\" # \u4f7f\u7528jieba\u7684\u8bcd\u6027\u6807\u6ce8\u65b9\u6cd5\u5207\u5206\u6587\u672c,\u83b7\u5f97\u5177\u6709\u8bcd\u6027\u5c5e\u6027flag\u548c\u8bcd\u6c47\u5c5e\u6027word\u7684\u5bf9\u8c61, # \u4ece\u800c\u5224\u65adflag\u662f\u5426\u4e3a\u5f62\u5bb9\u8bcd,\u6765\u8fd4\u56de\u5bf9\u5e94\u7684\u8bcd\u6c47 r = [] for g in pseg . lcut ( text ): if g . flag == \"a\" : r . append ( g . word ) return r # \u5bfc\u5165\u7ed8\u5236\u8bcd\u4e91\u7684\u5de5\u5177\u5305 from wordcloud import WordCloud def get_word_cloud ( keywords_list ): # \u5b9e\u4f8b\u5316\u7ed8\u5236\u8bcd\u4e91\u7684\u7c7b, \u5176\u4e2d\u53c2\u6570font_path\u662f\u5b57\u4f53\u8def\u5f84, \u4e3a\u4e86\u80fd\u591f\u663e\u793a\u4e2d\u6587, # max_words\u6307\u8bcd\u4e91\u56fe\u50cf\u6700\u591a\u663e\u793a\u591a\u5c11\u4e2a\u8bcd, background_color\u4e3a\u80cc\u666f\u989c\u8272 wordcloud = WordCloud ( font_path = \"./SimHei.ttf\" , max_words = 100 , background_color = \"white\" ) # \u5c06\u4f20\u5165\u7684\u5217\u8868\u8f6c\u5316\u6210\u8bcd\u4e91\u751f\u6210\u5668\u9700\u8981\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f keywords_string = \" \" . join ( keywords_list ) # \u751f\u6210\u8bcd\u4e91 wordcloud . generate ( keywords_string ) # \u7ed8\u5236\u56fe\u50cf\u5e76\u663e\u793a plt . figure () plt . imshow ( wordcloud , interpolation = \"bilinear\" ) plt . axis ( \"off\" ) plt . show () # \u83b7\u5f97\u8bad\u7ec3\u96c6\u4e0a\u6b63\u6837\u672c p_train_data = train_data [ train_data [ \"label\" ] == 1 ][ \"sentence\" ] # \u5bf9\u6b63\u6837\u672c\u7684\u6bcf\u4e2a\u53e5\u5b50\u7684\u5f62\u5bb9\u8bcd train_p_a_vocab = chain ( * map ( lambda x : get_a_list ( x ), p_train_data )) #print(train_p_n_vocab) # \u83b7\u5f97\u8bad\u7ec3\u96c6\u4e0a\u8d1f\u6837\u672c n_train_data = train_data [ train_data [ \"label\" ] == 0 ][ \"sentence\" ] # \u83b7\u53d6\u8d1f\u6837\u672c\u7684\u6bcf\u4e2a\u53e5\u5b50\u7684\u5f62\u5bb9\u8bcd train_n_a_vocab = chain ( * map ( lambda x : get_a_list ( x ), n_train_data )) # \u8c03\u7528\u7ed8\u5236\u8bcd\u4e91\u51fd\u6570 get_word_cloud ( train_p_a_vocab ) get_word_cloud ( train_n_a_vocab ) \u8bad\u7ec3\u96c6\u6b63\u6837\u672c\u5f62\u5bb9\u8bcd\u8bcd\u4e91: \u8bad\u7ec3\u96c6\u8d1f\u6837\u672c\u5f62\u5bb9\u8bcd\u8bcd\u4e91: \u83b7\u5f97\u9a8c\u8bc1\u96c6\u4e0a\u6b63\u8d1f\u7684\u6837\u672c\u7684\u5f62\u5bb9\u8bcd\u8bcd\u4e91 # \u83b7\u5f97\u9a8c\u8bc1\u96c6\u4e0a\u6b63\u6837\u672c p_valid_data = valid_data [ valid_data [ \"label\" ] == 1 ][ \"sentence\" ] # \u5bf9\u6b63\u6837\u672c\u7684\u6bcf\u4e2a\u53e5\u5b50\u7684\u5f62\u5bb9\u8bcd valid_p_a_vocab = chain ( * map ( lambda x : get_a_list ( x ), p_valid_data )) #print(train_p_n_vocab) # \u83b7\u5f97\u9a8c\u8bc1\u96c6\u4e0a\u8d1f\u6837\u672c n_valid_data = valid_data [ valid_data [ \"label\" ] == 0 ][ \"sentence\" ] # \u83b7\u53d6\u8d1f\u6837\u672c\u7684\u6bcf\u4e2a\u53e5\u5b50\u7684\u5f62\u5bb9\u8bcd valid_n_a_vocab = chain ( * map ( lambda x : get_a_list ( x ), n_valid_data )) # \u8c03\u7528\u7ed8\u5236\u8bcd\u4e91\u51fd\u6570 get_word_cloud ( valid_p_a_vocab ) get_word_cloud ( valid_n_a_vocab ) \u9a8c\u8bc1\u96c6\u6b63\u6837\u672c\u5f62\u5bb9\u8bcd\u8bcd\u4e91: \u9a8c\u8bc1\u96c6\u8d1f\u6837\u672c\u5f62\u5bb9\u8bcd\u8bcd\u4e91: \u5206\u6790: \u6839\u636e\u9ad8\u9891\u5f62\u5bb9\u8bcd\u8bcd\u4e91\u663e\u793a, \u6211\u4eec\u53ef\u4ee5\u5bf9\u5f53\u524d\u8bed\u6599\u8d28\u91cf\u8fdb\u884c\u7b80\u5355\u8bc4\u4f30, \u540c\u65f6\u5bf9\u8fdd\u53cd\u8bed\u6599\u6807\u7b7e\u542b\u4e49\u7684\u8bcd\u6c47\u8fdb\u884c\u4eba\u5de5\u5ba1\u67e5\u548c\u4fee\u6b63, \u6765\u4fdd\u8bc1\u7edd\u5927\u591a\u6570\u8bed\u6599\u7b26\u5408\u8bad\u7ec3\u6807\u51c6. \u4e0a\u56fe\u4e2d\u7684\u6b63\u6837\u672c\u5927\u591a\u6570\u662f\u8912\u4e49\u8bcd, \u800c\u8d1f\u6837\u672c\u5927\u591a\u6570\u662f\u8d2c\u4e49\u8bcd, \u57fa\u672c\u7b26\u5408\u8981\u6c42, \u4f46\u662f\u8d1f\u6837\u672c\u8bcd\u4e91\u4e2d\u4e5f\u5b58\u5728\"\u4fbf\u5229\"\u8fd9\u6837\u7684\u8912\u4e49\u8bcd, \u56e0\u6b64\u53ef\u4ee5\u4eba\u5de5\u8fdb\u884c\u5ba1\u67e5. \u5c0f\u8282\u603b\u7ed3 \u5b66\u4e60\u4e86\u6587\u672c\u6570\u636e\u5206\u6790\u7684\u4f5c\u7528: \u6587\u672c\u6570\u636e\u5206\u6790\u80fd\u591f\u6709\u6548\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u6570\u636e\u8bed\u6599, \u5feb\u901f\u68c0\u67e5\u51fa\u8bed\u6599\u53ef\u80fd\u5b58\u5728\u7684\u95ee\u9898, \u5e76\u6307\u5bfc\u4e4b\u540e\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4e00\u4e9b\u8d85\u53c2\u6570\u7684\u9009\u62e9. \u5b66\u4e60\u4e86\u5e38\u7528\u7684\u51e0\u79cd\u6587\u672c\u6570\u636e\u5206\u6790\u65b9\u6cd5: \u6807\u7b7e\u6570\u91cf\u5206\u5e03 \u53e5\u5b50\u957f\u5ea6\u5206\u5e03 \u8bcd\u9891\u7edf\u8ba1\u4e0e\u5173\u952e\u8bcd\u8bcd\u4e91 \u5b66\u4e60\u4e86\u57fa\u4e8e\u771f\u5b9e\u7684\u4e2d\u6587\u9152\u5e97\u8bc4\u8bba\u8bed\u6599\u8fdb\u884c\u51e0\u79cd\u6587\u672c\u6570\u636e\u5206\u6790\u65b9\u6cd5. \u83b7\u5f97\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u7684\u6807\u7b7e\u6570\u91cf\u5206\u5e03 \u83b7\u53d6\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u7684\u53e5\u5b50\u957f\u5ea6\u5206\u5e03 \u83b7\u53d6\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u7684\u6b63\u8d1f\u6837\u672c\u957f\u5ea6\u6563\u70b9\u5206\u5e03 \u83b7\u5f97\u8bad\u7ec3\u96c6\u4e0e\u9a8c\u8bc1\u96c6\u4e0d\u540c\u8bcd\u6c47\u603b\u6570\u7edf\u8ba1 \u83b7\u5f97\u8bad\u7ec3\u96c6\u4e0a\u6b63\u8d1f\u7684\u6837\u672c\u7684\u9ad8\u9891\u5f62\u5bb9\u8bcd\u8bcd\u4e91 1.5 \u6587\u672c\u7279\u5f81\u5904\u7406 \u5b66\u4e60\u76ee\u6807 \u4e86\u89e3\u6587\u672c\u7279\u5f81\u5904\u7406\u7684\u4f5c\u7528. \u638c\u63e1\u5b9e\u73b0\u5e38\u89c1\u7684\u6587\u672c\u7279\u5f81\u5904\u7406\u7684\u5177\u4f53\u65b9\u6cd5. \u6587\u672c\u7279\u5f81\u5904\u7406\u7684\u4f5c\u7528: \u6587\u672c\u7279\u5f81\u5904\u7406\u5305\u62ec\u4e3a\u8bed\u6599\u6dfb\u52a0\u5177\u6709\u666e\u9002\u6027\u7684\u6587\u672c\u7279\u5f81, \u5982:n-gram\u7279\u5f81, \u4ee5\u53ca\u5bf9\u52a0\u5165\u7279\u5f81\u4e4b\u540e\u7684\u6587\u672c\u8bed\u6599\u8fdb\u884c\u5fc5\u8981\u7684\u5904\u7406, \u5982: \u957f\u5ea6\u89c4\u8303. \u8fd9\u4e9b\u7279\u5f81\u5904\u7406\u5de5\u4f5c\u80fd\u591f\u6709\u6548\u7684\u5c06\u91cd\u8981\u7684\u6587\u672c\u7279\u5f81\u52a0\u5165\u6a21\u578b\u8bad\u7ec3\u4e2d, \u589e\u5f3a\u6a21\u578b\u8bc4\u4f30\u6307\u6807. \u5e38\u89c1\u7684\u6587\u672c\u7279\u5f81\u5904\u7406\u65b9\u6cd5: \u6dfb\u52a0n-gram\u7279\u5f81 \u6587\u672c\u957f\u5ea6\u89c4\u8303 \u4ec0\u4e48\u662fn-gram\u7279\u5f81 \u7ed9\u5b9a\u4e00\u6bb5\u6587\u672c\u5e8f\u5217, \u5176\u4e2dn\u4e2a\u8bcd\u6216\u5b57\u7684\u76f8\u90bb\u5171\u73b0\u7279\u5f81\u5373n-gram\u7279\u5f81, \u5e38\u7528\u7684n-gram\u7279\u5f81\u662fbi-gram\u548ctri-gram\u7279\u5f81, \u5206\u522b\u5bf9\u5e94n\u4e3a2\u548c3. \u4e3e\u4e2a\u6817\u5b50: \u5047\u8bbe\u7ed9\u5b9a\u5206\u8bcd\u5217\u8868: [\"\u662f\u8c01\", \"\u6572\u52a8\", \"\u6211\u5fc3\"] \u5bf9\u5e94\u7684\u6570\u503c\u6620\u5c04\u5217\u8868\u4e3a: [1, 34, 21] \u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u6570\u503c\u6620\u5c04\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57\u662f\u8bcd\u6c47\u7279\u5f81. \u9664\u6b64\u4e4b\u5916, \u6211\u4eec\u8fd8\u53ef\u4ee5\u628a\"\u662f\u8c01\"\u548c\"\u6572\u52a8\"\u4e24\u4e2a\u8bcd\u5171\u540c\u51fa\u73b0\u4e14\u76f8\u90bb\u4e5f\u4f5c\u4e3a\u4e00\u79cd\u7279\u5f81\u52a0\u5165\u5230\u5e8f\u5217\u5217\u8868\u4e2d, \u5047\u8bbe1000\u5c31\u4ee3\u8868\"\u662f\u8c01\"\u548c\"\u6572\u52a8\"\u5171\u540c\u51fa\u73b0\u4e14\u76f8\u90bb \u6b64\u65f6\u6570\u503c\u6620\u5c04\u5217\u8868\u5c31\u53d8\u6210\u4e86\u5305\u542b2-gram\u7279\u5f81\u7684\u7279\u5f81\u5217\u8868: [1, 34, 21, 1000] \u8fd9\u91cc\u7684\"\u662f\u8c01\"\u548c\"\u6572\u52a8\"\u5171\u540c\u51fa\u73b0\u4e14\u76f8\u90bb\u5c31\u662fbi-gram\u7279\u5f81\u4e2d\u7684\u4e00\u4e2a. \"\u6572\u52a8\"\u548c\"\u6211\u5fc3\"\u4e5f\u662f\u5171\u73b0\u4e14\u76f8\u90bb\u7684\u4e24\u4e2a\u8bcd\u6c47, \u56e0\u6b64\u5b83\u4eec\u4e5f\u662fbi-gram\u7279\u5f81. \u5047\u8bbe1001\u4ee3\u8868\"\u6572\u52a8\"\u548c\"\u6211\u5fc3\"\u5171\u540c\u51fa\u73b0\u4e14\u76f8\u90bb \u90a3\u4e48, \u6700\u540e\u539f\u59cb\u7684\u6570\u503c\u6620\u5c04\u5217\u8868 [1, 34, 21] \u6dfb\u52a0\u4e86bi-gram\u7279\u5f81\u4e4b\u540e\u5c31\u53d8\u6210\u4e86 [1, 34, 21, 1000, 1001] \u63d0\u53d6n-gram\u7279\u5f81: # \u4e00\u822cn-gram\u4e2d\u7684n\u53d62\u6216\u80053, \u8fd9\u91cc\u53d62\u4e3a\u4f8b ngram_range = 2 def create_ngram_set ( input_list ): \"\"\" description: \u4ece\u6570\u503c\u5217\u8868\u4e2d\u63d0\u53d6\u6240\u6709\u7684n-gram\u7279\u5f81 :param input_list: \u8f93\u5165\u7684\u6570\u503c\u5217\u8868, \u53ef\u4ee5\u770b\u4f5c\u662f\u8bcd\u6c47\u6620\u5c04\u540e\u7684\u5217\u8868, \u91cc\u9762\u6bcf\u4e2a\u6570\u5b57\u7684\u53d6\u503c\u8303\u56f4\u4e3a[1, 25000] :return: n-gram\u7279\u5f81\u7ec4\u6210\u7684\u96c6\u5408 eg: >>> create_ngram_set([1, 4, 9, 4, 1, 4]) {(4, 9), (4, 1), (1, 4), (9, 4)} \"\"\" return set ( zip ( * [ input_list [ i :] for i in range ( ngram_range )])) \u8c03\u7528: input_list = [1, 3, 2, 1, 5, 3] res = create_ngram_set(input_list) print(res) \u8f93\u51fa\u6548\u679c: # \u8be5\u8f93\u5165\u5217\u8868\u7684\u6240\u6709bi-gram\u7279\u5f81 {(3, 2), (1, 3), (2, 1), (1, 5), (5, 3)} \u6587\u672c\u957f\u5ea6\u89c4\u8303\u53ca\u5176\u4f5c\u7528 \u4e00\u822c\u6a21\u578b\u7684\u8f93\u5165\u9700\u8981\u7b49\u5c3a\u5bf8\u5927\u5c0f\u7684\u77e9\u9635, \u56e0\u6b64\u5728\u8fdb\u5165\u6a21\u578b\u524d\u9700\u8981\u5bf9\u6bcf\u6761\u6587\u672c\u6570\u503c\u6620\u5c04\u540e\u7684\u957f\u5ea6\u8fdb\u884c\u89c4\u8303, \u6b64\u65f6\u5c06\u6839\u636e\u53e5\u5b50\u957f\u5ea6\u5206\u5e03\u5206\u6790\u51fa\u8986\u76d6\u7edd\u5927\u591a\u6570\u6587\u672c\u7684\u5408\u7406\u957f\u5ea6, \u5bf9\u8d85\u957f\u6587\u672c\u8fdb\u884c\u622a\u65ad, \u5bf9\u4e0d\u8db3\u6587\u672c\u8fdb\u884c\u8865\u9f50(\u4e00\u822c\u4f7f\u7528\u6570\u5b570), \u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662f\u6587\u672c\u957f\u5ea6\u89c4\u8303. \u6587\u672c\u957f\u5ea6\u89c4\u8303\u7684\u5b9e\u73b0: from keras.preprocessing import sequence # cutlen\u6839\u636e\u6570\u636e\u5206\u6790\u4e2d\u53e5\u5b50\u957f\u5ea6\u5206\u5e03\uff0c\u8986\u76d690%\u5de6\u53f3\u8bed\u6599\u7684\u6700\u77ed\u957f\u5ea6. # \u8fd9\u91cc\u5047\u5b9acutlen\u4e3a10 cutlen = 10 def padding ( x_train ): \"\"\" description: \u5bf9\u8f93\u5165\u6587\u672c\u5f20\u91cf\u8fdb\u884c\u957f\u5ea6\u89c4\u8303 :param x_train: \u6587\u672c\u7684\u5f20\u91cf\u8868\u793a, \u5f62\u5982: [[1, 32, 32, 61], [2, 54, 21, 7, 19]] :return: \u8fdb\u884c\u622a\u65ad\u8865\u9f50\u540e\u7684\u6587\u672c\u5f20\u91cf\u8868\u793a \"\"\" # \u4f7f\u7528sequence.pad_sequences\u5373\u53ef\u5b8c\u6210 return sequence . pad_sequences ( x_train , cutlen ) \u8c03\u7528: # \u5047\u5b9ax_train\u91cc\u9762\u6709\u4e24\u6761\u6587\u672c, \u4e00\u6761\u957f\u5ea6\u5927\u4e8e10, \u4e00\u5929\u5c0f\u4e8e10 x_train = [[ 1 , 23 , 5 , 32 , 55 , 63 , 2 , 21 , 78 , 32 , 23 , 1 ], [ 2 , 32 , 1 , 23 , 1 ]] res = padding ( x_train ) print ( res ) \u8f93\u51fa\u6548\u679c: [[ 5 32 55 63 2 21 78 32 23 1] [ 0 0 0 0 0 2 32 1 23 1]] \u5c0f\u8282\u603b\u7ed3 \u5b66\u4e60\u4e86\u6587\u672c\u7279\u5f81\u5904\u7406\u7684\u4f5c\u7528: \u6587\u672c\u7279\u5f81\u5904\u7406\u5305\u62ec\u4e3a\u8bed\u6599\u6dfb\u52a0\u5177\u6709\u666e\u9002\u6027\u7684\u6587\u672c\u7279\u5f81, \u5982:n-gram\u7279\u5f81, \u4ee5\u53ca\u5bf9\u52a0\u5165\u7279\u5f81\u4e4b\u540e\u7684\u6587\u672c\u8bed\u6599\u8fdb\u884c\u5fc5\u8981\u7684\u5904\u7406, \u5982: \u957f\u5ea6\u89c4\u8303. \u8fd9\u4e9b\u7279\u5f81\u5904\u7406\u5de5\u4f5c\u80fd\u591f\u6709\u6548\u7684\u5c06\u91cd\u8981\u7684\u6587\u672c\u7279\u5f81\u52a0\u5165\u6a21\u578b\u8bad\u7ec3\u4e2d, \u589e\u5f3a\u6a21\u578b\u8bc4\u4f30\u6307\u6807. \u5b66\u4e60\u4e86\u5e38\u89c1\u7684\u6587\u672c\u7279\u5f81\u5904\u7406\u65b9\u6cd5: \u6dfb\u52a0n-gram\u7279\u5f81 \u6587\u672c\u957f\u5ea6\u89c4\u8303 \u5b66\u4e60\u4e86\u4ec0\u4e48\u662fn-gram\u7279\u5f81: \u7ed9\u5b9a\u4e00\u6bb5\u6587\u672c\u5e8f\u5217, \u5176\u4e2dn\u4e2a\u8bcd\u6216\u5b57\u7684\u76f8\u90bb\u5171\u73b0\u7279\u5f81\u5373n-gram\u7279\u5f81, \u5e38\u7528\u7684n-gram\u7279\u5f81\u662fbi-gram\u548ctri-gram\u7279\u5f81, \u5206\u522b\u5bf9\u5e94n\u4e3a2\u548c3. \u5b66\u4e60\u4e86\u63d0\u53d6n-gram\u7279\u5f81\u7684\u51fd\u6570: create_ngram_set \u5b66\u4e60\u4e86\u6587\u672c\u957f\u5ea6\u89c4\u8303\u53ca\u5176\u4f5c\u7528: \u4e00\u822c\u6a21\u578b\u7684\u8f93\u5165\u9700\u8981\u7b49\u5c3a\u5bf8\u5927\u5c0f\u7684\u77e9\u9635, \u56e0\u6b64\u5728\u8fdb\u5165\u6a21\u578b\u524d\u9700\u8981\u5bf9\u6bcf\u6761\u6587\u672c\u6570\u503c\u6620\u5c04\u540e\u7684\u957f\u5ea6\u8fdb\u884c\u89c4\u8303, \u6b64\u65f6\u5c06\u6839\u636e\u53e5\u5b50\u957f\u5ea6\u5206\u5e03\u5206\u6790\u51fa\u8986\u76d6\u7edd\u5927\u591a\u6570\u6587\u672c\u7684\u5408\u7406\u957f\u5ea6, \u5bf9\u8d85\u957f\u6587\u672c\u8fdb\u884c\u622a\u65ad, \u5bf9\u4e0d\u8db3\u6587\u672c\u8fdb\u884c\u8865\u9f50(\u4e00\u822c\u4f7f\u7528\u6570\u5b570), \u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662f\u6587\u672c\u957f\u5ea6\u89c4\u8303. \u5b66\u4e60\u4e86\u6587\u672c\u957f\u5ea6\u89c4\u8303\u7684\u5b9e\u73b0\u51fd\u6570: padding 1.6 \u6587\u672c\u6570\u636e\u589e\u5f3a \u5b66\u4e60\u76ee\u6807 \u4e86\u89e3\u6587\u672c\u6570\u636e\u589e\u5f3a\u7684\u4f5c\u7528. \u638c\u63e1\u5b9e\u73b0\u5e38\u89c1\u7684\u6587\u672c\u6570\u636e\u589e\u5f3a\u7684\u5177\u4f53\u65b9\u6cd5. \u5e38\u89c1\u7684\u6587\u672c\u6570\u636e\u589e\u5f3a\u65b9\u6cd5: \u56de\u8bd1\u6570\u636e\u589e\u5f3a\u6cd5 \u4ec0\u4e48\u662f\u56de\u8bd1\u6570\u636e\u589e\u5f3a\u6cd5 \u56de\u8bd1\u6570\u636e\u589e\u5f3a\u76ee\u524d\u662f\u6587\u672c\u6570\u636e\u589e\u5f3a\u65b9\u9762\u6548\u679c\u8f83\u597d\u7684\u589e\u5f3a\u65b9\u6cd5, \u4e00\u822c\u57fa\u4e8egoogle\u7ffb\u8bd1\u63a5\u53e3, \u5c06\u6587\u672c\u6570\u636e\u7ffb\u8bd1\u6210\u53e6\u5916\u4e00\u79cd\u8bed\u8a00(\u4e00\u822c\u9009\u62e9\u5c0f\u8bed\u79cd),\u4e4b\u540e\u518d\u7ffb\u8bd1\u56de\u539f\u8bed\u8a00, \u5373\u53ef\u8ba4\u4e3a\u5f97\u5230\u4e0e\u4e0e\u539f\u8bed\u6599\u540c\u6807\u7b7e\u7684\u65b0\u8bed\u6599, \u65b0\u8bed\u6599\u52a0\u5165\u5230\u539f\u6570\u636e\u96c6\u4e2d\u5373\u53ef\u8ba4\u4e3a\u662f\u5bf9\u539f\u6570\u636e\u96c6\u6570\u636e\u589e\u5f3a. \u56de\u8bd1\u6570\u636e\u589e\u5f3a\u4f18\u52bf: \u64cd\u4f5c\u7b80\u4fbf, \u83b7\u5f97\u65b0\u8bed\u6599\u8d28\u91cf\u9ad8. \u56de\u8bd1\u6570\u636e\u589e\u5f3a\u5b58\u5728\u7684\u95ee\u9898: \u5728\u77ed\u6587\u672c\u56de\u8bd1\u8fc7\u7a0b\u4e2d, \u65b0\u8bed\u6599\u4e0e\u539f\u8bed\u6599\u53ef\u80fd\u5b58\u5728\u5f88\u9ad8\u7684\u91cd\u590d\u7387, \u5e76\u4e0d\u80fd\u6709\u6548\u589e\u5927\u6837\u672c\u7684\u7279\u5f81\u7a7a\u95f4. \u9ad8\u91cd\u590d\u7387\u89e3\u51b3\u529e\u6cd5: \u8fdb\u884c\u8fde\u7eed\u7684\u591a\u8bed\u8a00\u7ffb\u8bd1, \u5982: \u4e2d\u6587-->\u97e9\u6587-->\u65e5\u8bed-->\u82f1\u6587-->\u4e2d\u6587, \u6839\u636e\u7ecf\u9a8c, \u6700\u591a\u53ea\u91c7\u75283\u6b21\u8fde\u7eed\u7ffb\u8bd1, \u66f4\u591a\u7684\u7ffb\u8bd1\u6b21\u6570\u5c06\u4ea7\u751f\u6548\u7387\u4f4e\u4e0b, \u8bed\u4e49\u5931\u771f\u7b49\u95ee\u9898. \u56de\u8bd1\u6570\u636e\u589e\u5f3a\u5b9e\u73b0: # pip install google_trans_new\u5b89\u88c5\u4e00\u4e0b \u8c37\u6b4c\u63a5\u53e3\u53d1\u751f\u4e86\u53d8\u5316 from google_trans_new import google_translator # \u5b9e\u4f8b\u5316\u7ffb\u8bd1\u5bf9\u8c61 translator = google_translator () # \u8fdb\u884c\u7b2c\u4e00\u6b21\u6279\u91cf\u7ffb\u8bd1, \u7ffb\u8bd1\u76ee\u6807\u662f\u97e9\u8bed text = [ \"\u8fd9\u5bb6\u4ef7\u683c\u5f88\u4fbf\u5b9c\" , \"\u8fd9\u5bb6\u4ef7\u683c\u5f88\u4fbf\u5b9c\" ] ko_res = translator . translate ( text , lang_src = \"zh-cn\" , lang_tgt = \"ko\" ) # \u6253\u5370\u7ed3\u679c print ( \"\u4e2d\u95f4\u7ffb\u8bd1\u7ed3\u679c:\" ) print ( ko_res ) # # \u6700\u540e\u5728\u7ffb\u8bd1\u56de\u4e2d\u6587, \u5b8c\u6210\u56de\u8bd1\u5168\u90e8\u6d41\u7a0b cn_res = translator . translate ( ko_res , lang_src = 'ko' , lang_tgt = 'zh-cn' ) print ( \"\u56de\u8bd1\u5f97\u5230\u7684\u589e\u5f3a\u6570\u636e:\" ) print ( cn_res ) \u8f93\u51fa\u6548\u679c: \u4e2d\u95f4\u7ffb\u8bd1\u7ed3\u679c: [\"\uc774 \uac00\uaca9\uc740 \ub9e4\uc6b0 \uc2fc \", \"\uc774 \uac00\uaca9\uc740 \ub9e4\uc6b0 \uc2fc\"] \u56de\u8bd1\u5f97\u5230\u7684\u589e\u5f3a\u6570\u636e: [\"\u8fd9\u4e2a\u4ef7\u683c\u975e\u5e38\u4fbf\u5b9c\"\uff0c\"\u8fd9\u4e2a\u4ef7\u683c\u5f88\u4fbf\u5b9c\"] \u6ce8\u610f \u5982\u679c\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u62a5:json.decoder.JSONDecodeError: Extra data: line 1 column 1962 (char 1961)\u9519\u8bef \u4fee\u6539\u5730\u5740\u53c2\u8003:https://github.com/lushan88a/google_trans_new/issues/36 \u6e29\u99a8\u63d0\u793a: \u7ffb\u8bd1\u63a5\u53e3\u5728\u5b9e\u65f6\u8fdb\u884c\u4fee\u6539, \u6240\u4ee5\u4ee5\u540e\u5728\u4f7f\u7528\u7b2c\u4e09\u65b9\u63a5\u53e3\u7684\u65f6\u5019\u8981\u5173\u6ce8\u63a5\u53e3\u662f\u5426\u53d1\u751f\u53d8\u5316 \u5c0f\u8282\u603b\u7ed3 \u5b66\u4e60\u4e86\u5e38\u89c1\u7684\u6587\u672c\u6570\u636e\u589e\u5f3a\u65b9\u6cd5: \u56de\u8bd1\u6570\u636e\u589e\u5f3a\u6cd5 \u5b66\u4e60\u4e86\u4ec0\u4e48\u662f\u56de\u8bd1\u6570\u636e\u589e\u5f3a\u6cd5: \u56de\u8bd1\u6570\u636e\u589e\u5f3a\u76ee\u524d\u662f\u6587\u672c\u6570\u636e\u589e\u5f3a\u65b9\u9762\u6548\u679c\u8f83\u597d\u7684\u589e\u5f3a\u65b9\u6cd5, \u4e00\u822c\u57fa\u4e8egoogle\u7ffb\u8bd1\u63a5\u53e3, \u5c06\u6587\u672c\u6570\u636e\u7ffb\u8bd1\u6210\u53e6\u5916\u4e00\u79cd\u8bed\u8a00(\u4e00\u822c\u9009\u62e9\u5c0f\u8bed\u79cd),\u4e4b\u540e\u518d\u7ffb\u8bd1\u56de\u539f\u8bed\u8a00, \u5373\u53ef\u8ba4\u4e3a\u5f97\u5230\u4e0e\u4e0e\u539f\u8bed\u6599\u540c\u6807\u7b7e\u7684\u65b0\u8bed\u6599, \u65b0\u8bed\u6599\u52a0\u5165\u5230\u539f\u6570\u636e\u96c6\u4e2d\u5373\u53ef\u8ba4\u4e3a\u662f\u5bf9\u539f\u6570\u636e\u96c6\u6570\u636e\u589e\u5f3a. \u5b66\u4e60\u4e86\u56de\u8bd1\u6570\u636e\u589e\u5f3a\u4f18\u52bf: \u64cd\u4f5c\u7b80\u4fbf, \u83b7\u5f97\u65b0\u8bed\u6599\u8d28\u91cf\u9ad8. \u5b66\u4e60\u4e86\u56de\u8bd1\u6570\u636e\u589e\u5f3a\u5b58\u5728\u7684\u95ee\u9898: \u5728\u77ed\u6587\u672c\u56de\u8bd1\u8fc7\u7a0b\u4e2d, \u65b0\u8bed\u6599\u4e0e\u539f\u8bed\u6599\u53ef\u80fd\u5b58\u5728\u5f88\u9ad8\u7684\u91cd\u590d\u7387, \u5e76\u4e0d\u80fd\u6709\u6548\u589e\u5927\u6837\u672c\u7684\u7279\u5f81\u7a7a\u95f4. \u5b66\u4e60\u4e86\u9ad8\u91cd\u590d\u7387\u89e3\u51b3\u529e\u6cd5: \u8fdb\u884c\u8fde\u7eed\u7684\u591a\u8bed\u8a00\u7ffb\u8bd1, \u5982: \u4e2d\u6587-->\u97e9\u6587-->\u65e5\u8bed-->\u82f1\u6587-->\u4e2d\u6587, \u6839\u636e\u7ecf\u9a8c, \u6700\u591a\u53ea\u91c7\u75283\u6b21\u8fde\u7eed\u7ffb\u8bd1, \u66f4\u591a\u7684\u7ffb\u8bd1\u6b21\u6570\u5c06\u4ea7\u751f\u6548\u7387\u4f4e\u4e0b, \u8bed\u4e49\u5931\u771f\u7b49\u95ee\u9898. \u5b66\u4e60\u4e86\u56de\u8bd1\u6570\u636e\u589e\u5f3a\u5b9e\u73b0. \u9644\u5f55 jieba\u8bcd\u6027\u5bf9\u7167\u8868: - a \u5f62\u5bb9\u8bcd - ad \u526f\u5f62\u8bcd - ag \u5f62\u5bb9\u8bcd\u6027\u8bed\u7d20 - an \u540d\u5f62\u8bcd - b \u533a\u522b\u8bcd - c \u8fde\u8bcd - d \u526f\u8bcd - df - dg \u526f\u8bed\u7d20 - e \u53f9\u8bcd - f \u65b9\u4f4d\u8bcd - g \u8bed\u7d20 - h \u524d\u63a5\u6210\u5206 - i \u6210\u8bed - j \u7b80\u79f0\u7565\u79f0 - k \u540e\u63a5\u6210\u5206 - l \u4e60\u7528\u8bed - m \u6570\u8bcd - mg - mq \u6570\u91cf\u8bcd - n \u540d\u8bcd - ng \u540d\u8bcd\u6027\u8bed\u7d20 - nr \u4eba\u540d - nrfg - nrt - ns \u5730\u540d - nt \u673a\u6784\u56e2\u4f53\u540d - nz \u5176\u4ed6\u4e13\u540d - o \u62df\u58f0\u8bcd - p \u4ecb\u8bcd - q \u91cf\u8bcd - r \u4ee3\u8bcd - rg \u4ee3\u8bcd\u6027\u8bed\u7d20 - rr \u4eba\u79f0\u4ee3\u8bcd - rz \u6307\u793a\u4ee3\u8bcd - s \u5904\u6240\u8bcd - t \u65f6\u95f4\u8bcd - tg \u65f6\u8bed\u7d20 - u \u52a9\u8bcd - ud \u7ed3\u6784\u52a9\u8bcd \u5f97 - ug \u65f6\u6001\u52a9\u8bcd - uj \u7ed3\u6784\u52a9\u8bcd \u7684 - ul \u65f6\u6001\u52a9\u8bcd \u4e86 - uv \u7ed3\u6784\u52a9\u8bcd \u5730 - uz \u65f6\u6001\u52a9\u8bcd \u7740 - v \u52a8\u8bcd - vd \u526f\u52a8\u8bcd - vg \u52a8\u8bcd\u6027\u8bed\u7d20 - vi \u4e0d\u53ca\u7269\u52a8\u8bcd - vn \u540d\u52a8\u8bcd - vq - x \u975e\u8bed\u7d20\u8bcd - y \u8bed\u6c14\u8bcd - z \u72b6\u6001\u8bcd - zg hanlp\u8bcd\u6027\u5bf9\u7167\u8868: \u3010Proper Noun\u2014\u2014NR\uff0c\u4e13\u6709\u540d\u8bcd\u3011 \u3010Temporal Noun\u2014\u2014NT\uff0c\u65f6\u95f4\u540d\u8bcd\u3011 \u3010Localizer\u2014\u2014LC\uff0c\u5b9a\u4f4d\u8bcd\u3011\u5982\u201c\u5185\u201d\uff0c\u201c\u5de6\u53f3\u201d \u3010Pronoun\u2014\u2014PN\uff0c\u4ee3\u8bcd\u3011 \u3010Determiner\u2014\u2014DT\uff0c\u9650\u5b9a\u8bcd\u3011\u5982\u201c\u8fd9\u201d\uff0c\u201c\u5168\u4f53\u201d \u3010Cardinal Number\u2014\u2014CD\uff0c\u91cf\u8bcd\u3011 \u3010Ordinal Number\u2014\u2014OD\uff0c\u6b21\u5e8f\u8bcd\u3011\u5982\u201c\u7b2c\u4e09\u5341\u4e00\u201d \u3010Measure word\u2014\u2014M\uff0c\u5355\u4f4d\u8bcd\u3011\u5982\u201c\u676f\u201d \u3010Verb\uff1aVA\uff0cVC\uff0cVE\uff0cVV\uff0c\u52a8\u8bcd\u3011 \u3010Adverb\uff1aAD\uff0c\u526f\u8bcd\u3011\u5982\u201c\u8fd1\u201d\uff0c\u201c\u6781\u5927\u201d \u3010Preposition\uff1aP\uff0c\u4ecb\u8bcd\u3011\u5982\u201c\u968f\u7740\u201d \u3010Subordinating conjunctions\uff1aCS\uff0c\u4ece\u5c5e\u8fde\u8bcd\u3011 \u3010Conjuctions\uff1aCC\uff0c\u8fde\u8bcd\u3011\u5982\u201c\u548c\u201d \u3010Particle\uff1aDEC,DEG,DEV,DER,AS,SP,ETC,MSP\uff0c\u5c0f\u54c1\u8bcd\u3011\u5982\u201c\u7684\u8bdd\u201d \u3010Interjections\uff1aIJ\uff0c\u611f\u53f9\u8bcd\u3011\u5982\u201c\u54c8\u201d \u3010onomatopoeia\uff1aON\uff0c\u62df\u58f0\u8bcd\u3011\u5982\u201c\u54d7\u5566\u5566\u201d \u3010Other Noun-modifier\uff1aJJ\u3011\u5982\u201c\u53d1\u7a3f/JJ \u65f6\u95f4/NN\u201d \u3010Punctuation\uff1aPU\uff0c\u6807\u70b9\u7b26\u53f7\u3011 \u3010Foreign word\uff1aFW\uff0c\u5916\u56fd\u8bcd\u8bed\u3011\u5982\u201cOK","title":"\u7b2c\u4e00\u7ae0:\u6587\u672c\u9884\u5904\u7406"},{"location":"1.html#11","text":"","title":"1.1 \u8ba4\u8bc6\u6587\u672c\u9884\u5904\u7406"},{"location":"1.html#_1","text":"","title":"\u5b66\u4e60\u76ee\u6807"},{"location":"1.html#_2","text":"\u6587\u672c\u8bed\u6599\u5728\u8f93\u9001\u7ed9\u6a21\u578b\u524d\u4e00\u822c\u9700\u8981\u4e00\u7cfb\u5217\u7684\u9884\u5904\u7406\u5de5\u4f5c, \u624d\u80fd\u7b26\u5408\u6a21\u578b\u8f93\u5165\u7684\u8981\u6c42, \u5982: \u5c06\u6587\u672c\u8f6c\u5316\u6210\u6a21\u578b\u9700\u8981\u7684\u5f20\u91cf, \u89c4\u8303\u5f20\u91cf\u7684\u5c3a\u5bf8\u7b49, \u800c\u4e14\u79d1\u5b66\u7684\u6587\u672c\u9884\u5904\u7406\u73af\u8282\u8fd8\u5c06\u6709\u6548\u6307\u5bfc\u6a21\u578b\u8d85\u53c2\u6570\u7684\u9009\u62e9, \u63d0\u5347\u6a21\u578b\u7684\u8bc4\u4f30\u6307\u6807.","title":"\u6587\u672c\u9884\u5904\u7406\u53ca\u5176\u4f5c\u7528"},{"location":"1.html#_3","text":"\u6587\u672c\u5904\u7406\u7684\u57fa\u672c\u65b9\u6cd5 \u6587\u672c\u5f20\u91cf\u8868\u793a\u65b9\u6cd5 \u6587\u672c\u8bed\u6599\u7684\u6570\u636e\u5206\u6790 \u6587\u672c\u7279\u5f81\u5904\u7406 \u6570\u636e\u589e\u5f3a\u65b9\u6cd5","title":"\u6587\u672c\u9884\u5904\u7406\u4e2d\u5305\u542b\u7684\u4e3b\u8981\u73af\u8282"},{"location":"1.html#_4","text":"\u5206\u8bcd \u8bcd\u6027\u6807\u6ce8 \u547d\u540d\u5b9e\u4f53\u8bc6\u522b","title":"\u6587\u672c\u5904\u7406\u7684\u57fa\u672c\u65b9\u6cd5"},{"location":"1.html#_5","text":"one-hot\u7f16\u7801 Word2vec Word Embedding","title":"\u6587\u672c\u5f20\u91cf\u8868\u793a\u65b9\u6cd5"},{"location":"1.html#_6","text":"\u6807\u7b7e\u6570\u91cf\u5206\u5e03 \u53e5\u5b50\u957f\u5ea6\u5206\u5e03 \u8bcd\u9891\u7edf\u8ba1\u4e0e\u5173\u952e\u8bcd\u8bcd\u4e91","title":"\u6587\u672c\u8bed\u6599\u7684\u6570\u636e\u5206\u6790"},{"location":"1.html#_7","text":"\u6dfb\u52a0n-gram\u7279\u5f81 \u6587\u672c\u957f\u5ea6\u89c4\u8303","title":"\u6587\u672c\u7279\u5f81\u5904\u7406"},{"location":"1.html#_8","text":"\u56de\u8bd1\u6570\u636e\u589e\u5f3a\u6cd5","title":"\u6570\u636e\u589e\u5f3a\u65b9\u6cd5"},{"location":"1.html#_9","text":"\u5728\u5b9e\u9645\u751f\u4ea7\u5e94\u7528\u4e2d, \u6211\u4eec\u6700\u5e38\u4f7f\u7528\u7684\u4e24\u79cd\u8bed\u8a00\u662f\u4e2d\u6587\u548c\u82f1\u6587, \u56e0\u6b64, \u6587\u672c\u9884\u5904\u7406\u90e8\u5206\u7684\u5185\u5bb9\u90fd\u5c06\u9488\u5bf9\u8fd9\u4e24\u79cd\u8bed\u8a00\u8fdb\u884c\u8bb2\u89e3.","title":"\u91cd\u8981\u8bf4\u660e"},{"location":"1.html#12","text":"","title":"1.2 \u6587\u672c\u5904\u7406\u7684\u57fa\u672c\u65b9\u6cd5"},{"location":"1.html#_10","text":"\u4e86\u89e3\u4ec0\u4e48\u662f\u5206\u8bcd, \u8bcd\u6027\u6807\u6ce8, \u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u53ca\u5176\u5b83\u4eec\u7684\u4f5c\u7528. \u638c\u63e1\u5206\u8bcd, \u8bcd\u6027\u6807\u6ce8, \u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u6d41\u884c\u5de5\u5177\u7684\u4f7f\u7528\u65b9\u6cd5.","title":"\u5b66\u4e60\u76ee\u6807"},{"location":"1.html#_11","text":"\u5206\u8bcd\u5c31\u662f\u5c06\u8fde\u7eed\u7684\u5b57\u5e8f\u5217\u6309\u7167\u4e00\u5b9a\u7684\u89c4\u8303\u91cd\u65b0\u7ec4\u5408\u6210\u8bcd\u5e8f\u5217\u7684\u8fc7\u7a0b\u3002\u6211\u4eec\u77e5\u9053\uff0c\u5728\u82f1\u6587\u7684\u884c\u6587\u4e2d\uff0c\u5355\u8bcd\u4e4b\u95f4\u662f\u4ee5\u7a7a\u683c\u4f5c\u4e3a\u81ea\u7136\u5206\u754c\u7b26\u7684\uff0c\u800c\u4e2d\u6587\u53ea\u662f\u5b57\u3001\u53e5\u548c\u6bb5\u80fd\u901a\u8fc7\u660e\u663e\u7684\u5206\u754c\u7b26\u6765\u7b80\u5355\u5212\u754c\uff0c\u552f\u72ec\u8bcd\u6ca1\u6709\u4e00\u4e2a\u5f62\u5f0f\u4e0a\u7684\u5206\u754c\u7b26, \u5206\u8bcd\u8fc7\u7a0b\u5c31\u662f\u627e\u5230\u8fd9\u6837\u5206\u754c\u7b26\u7684\u8fc7\u7a0b. \u4e3e\u4e2a\u6817\u5b50: \u5de5\u4fe1\u5904\u5973\u5e72\u4e8b\u6bcf\u6708\u7ecf\u8fc7\u4e0b\u5c5e\u79d1\u5ba4\u90fd\u8981\u4eb2\u53e3\u4ea4\u4ee324\u53e3\u4ea4\u6362\u673a\u7b49\u6280\u672f\u6027\u5668\u4ef6\u7684\u5b89\u88c5\u5de5\u4f5c ==> ['\u5de5\u4fe1\u5904', '\u5973\u5e72\u4e8b', '\u6bcf\u6708', '\u7ecf\u8fc7', '\u4e0b\u5c5e', '\u79d1\u5ba4', '\u90fd', '\u8981', '\u4eb2\u53e3', '\u4ea4\u4ee3', '24', '\u53e3', '\u4ea4\u6362\u673a', '\u7b49', '\u6280\u672f\u6027', '\u5668\u4ef6', '\u7684', '\u5b89\u88c5', '\u5de5\u4f5c'] \u5206\u8bcd\u7684\u4f5c\u7528: \u8bcd\u4f5c\u4e3a\u8bed\u8a00\u8bed\u4e49\u7406\u89e3\u7684\u6700\u5c0f\u5355\u5143, \u662f\u4eba\u7c7b\u7406\u89e3\u6587\u672c\u8bed\u8a00\u7684\u57fa\u7840. \u56e0\u6b64\u4e5f\u662fAI\u89e3\u51b3NLP\u9886\u57df\u9ad8\u9636\u4efb\u52a1, \u5982\u81ea\u52a8\u95ee\u7b54, \u673a\u5668\u7ffb\u8bd1, \u6587\u672c\u751f\u6210\u7684\u91cd\u8981\u57fa\u7840\u73af\u8282. \u6d41\u884c\u4e2d\u6587\u5206\u8bcd\u5de5\u5177jieba: \u613f\u666f: \u201c\u7ed3\u5df4\u201d\u4e2d\u6587\u5206\u8bcd, \u505a\u6700\u597d\u7684 Python \u4e2d\u6587\u5206\u8bcd\u7ec4\u4ef6. jieba\u7684\u7279\u6027: \u652f\u6301\u591a\u79cd\u5206\u8bcd\u6a21\u5f0f \u7cbe\u786e\u6a21\u5f0f \u5168\u6a21\u5f0f \u641c\u7d22\u5f15\u64ce\u6a21\u5f0f \u652f\u6301\u4e2d\u6587\u7e41\u4f53\u5206\u8bcd \u652f\u6301\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178 jieba\u7684\u5b89\u88c5: pip install jieba jieba\u7684\u4f7f\u7528: \u7cbe\u786e\u6a21\u5f0f\u5206\u8bcd: \u8bd5\u56fe\u5c06\u53e5\u5b50\u6700\u7cbe\u786e\u5730\u5207\u5f00\uff0c\u9002\u5408\u6587\u672c\u5206\u6790. >>> import jieba >>> content = \"\u5de5\u4fe1\u5904\u5973\u5e72\u4e8b\u6bcf\u6708\u7ecf\u8fc7\u4e0b\u5c5e\u79d1\u5ba4\u90fd\u8981\u4eb2\u53e3\u4ea4\u4ee324\u53e3\u4ea4\u6362\u673a\u7b49\u6280\u672f\u6027\u5668\u4ef6\u7684\u5b89\u88c5\u5de5\u4f5c\" >>> jieba . cut ( content , cut_all = False ) # cut_all\u9ed8\u8ba4\u4e3aFalse # \u5c06\u8fd4\u56de\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61 < generator object Tokenizer . cut at 0x7f065c19e318 > # \u82e5\u9700\u76f4\u63a5\u8fd4\u56de\u5217\u8868\u5185\u5bb9, \u4f7f\u7528jieba.lcut\u5373\u53ef >>> jieba . lcut ( content , cut_all = False ) [ '\u5de5\u4fe1\u5904' , '\u5973\u5e72\u4e8b' , '\u6bcf\u6708' , '\u7ecf\u8fc7' , '\u4e0b\u5c5e' , '\u79d1\u5ba4' , '\u90fd' , '\u8981' , '\u4eb2\u53e3' , '\u4ea4\u4ee3' , '24' , '\u53e3' , '\u4ea4\u6362\u673a' , '\u7b49' , '\u6280\u672f\u6027' , '\u5668\u4ef6' , '\u7684' , '\u5b89\u88c5' , '\u5de5\u4f5c' ] \u5168\u6a21\u5f0f\u5206\u8bcd: \u628a\u53e5\u5b50\u4e2d\u6240\u6709\u7684\u53ef\u4ee5\u6210\u8bcd\u7684\u8bcd\u8bed\u90fd\u626b\u63cf\u51fa\u6765, \u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u4f46\u662f\u4e0d\u80fd\u6d88\u9664 \u6b67\u4e49. >>> import jieba >>> content = \"\u5de5\u4fe1\u5904\u5973\u5e72\u4e8b\u6bcf\u6708\u7ecf\u8fc7\u4e0b\u5c5e\u79d1\u5ba4\u90fd\u8981\u4eb2\u53e3\u4ea4\u4ee324\u53e3\u4ea4\u6362\u673a\u7b49\u6280\u672f\u6027\u5668\u4ef6\u7684\u5b89\u88c5\u5de5\u4f5c\" >>> jieba . cut ( content , cut_all = True ) # cut_all\u9ed8\u8ba4\u4e3aFalse # \u5c06\u8fd4\u56de\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61 < generator object Tokenizer . cut at 0x7f065c19e318 > # \u82e5\u9700\u76f4\u63a5\u8fd4\u56de\u5217\u8868\u5185\u5bb9, \u4f7f\u7528jieba.lcut\u5373\u53ef >>> jieba . lcut ( content , cut_all = True ) [ '\u5de5\u4fe1\u5904' , '\u5904\u5973' , '\u5973\u5e72\u4e8b' , '\u5e72\u4e8b' , '\u6bcf\u6708' , '\u6708\u7ecf' , '\u7ecf\u8fc7' , '\u4e0b\u5c5e' , '\u79d1\u5ba4' , '\u90fd' , '\u8981' , '\u4eb2\u53e3' , '\u53e3\u4ea4' , '\u4ea4\u4ee3' , '24' , '\u53e3\u4ea4' , '\u4ea4\u6362' , '\u4ea4\u6362\u673a' , '\u6362\u673a' , '\u7b49' , '\u6280\u672f' , '\u6280\u672f\u6027' , '\u6027\u5668' , '\u5668\u4ef6' , '\u7684' , '\u5b89\u88c5' , '\u5b89\u88c5\u5de5' , '\u88c5\u5de5' , '\u5de5\u4f5c' ] \u641c\u7d22\u5f15\u64ce\u6a21\u5f0f\u5206\u8bcd: \u5728\u7cbe\u786e\u6a21\u5f0f\u7684\u57fa\u7840\u4e0a\uff0c\u5bf9\u957f\u8bcd\u518d\u6b21\u5207\u5206\uff0c\u63d0\u9ad8\u53ec\u56de\u7387\uff0c\u9002\u5408\u7528\u4e8e\u641c\u7d22\u5f15\u64ce\u5206\u8bcd. >>> import jieba >>> content = \"\u5de5\u4fe1\u5904\u5973\u5e72\u4e8b\u6bcf\u6708\u7ecf\u8fc7\u4e0b\u5c5e\u79d1\u5ba4\u90fd\u8981\u4eb2\u53e3\u4ea4\u4ee324\u53e3\u4ea4\u6362\u673a\u7b49\u6280\u672f\u6027\u5668\u4ef6\u7684\u5b89\u88c5\u5de5\u4f5c\" >>> jieba . cut_for_search ( content ) # \u5c06\u8fd4\u56de\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61 < generator object Tokenizer . cut at 0x7f065c19e318 > # \u82e5\u9700\u76f4\u63a5\u8fd4\u56de\u5217\u8868\u5185\u5bb9, \u4f7f\u7528jieba.lcut_for_search\u5373\u53ef >>> jieba . lcut_for_search ( content ) [ '\u5de5\u4fe1\u5904' , '\u5e72\u4e8b' , '\u5973\u5e72\u4e8b' , '\u6bcf\u6708' , '\u7ecf\u8fc7' , '\u4e0b\u5c5e' , '\u79d1\u5ba4' , '\u90fd' , '\u8981' , '\u4eb2\u53e3' , '\u4ea4\u4ee3' , '24' , '\u53e3' , '\u4ea4\u6362' , '\u6362\u673a' , '\u4ea4\u6362\u673a' , '\u7b49' , '\u6280\u672f' , '\u6280\u672f\u6027' , '\u5668\u4ef6' , '\u7684' , '\u5b89\u88c5' , '\u5de5\u4f5c' ] # \u5bf9'\u5973\u5e72\u4e8b', '\u4ea4\u6362\u673a'\u7b49\u8f83\u957f\u8bcd\u6c47\u90fd\u8fdb\u884c\u4e86\u518d\u6b21\u5206\u8bcd. \u4e2d\u6587\u7e41\u4f53\u5206\u8bcd: \u9488\u5bf9\u4e2d\u56fd\u9999\u6e2f, \u53f0\u6e7e\u5730\u533a\u7684\u7e41\u4f53\u6587\u672c\u8fdb\u884c\u5206\u8bcd. >>> import jieba >>> content = \"\u7169\u60f1\u5373\u662f\u83e9\u63d0\uff0c\u6211\u66ab\u4e14\u4e0d\u63d0\" >>> jieba . lcut ( content ) [ '\u7169\u60f1' , '\u5373' , '\u662f' , '\u83e9\u63d0' , '\uff0c' , '\u6211' , '\u66ab\u4e14' , '\u4e0d' , '\u63d0' ] \u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178: \u6dfb\u52a0\u81ea\u5b9a\u4e49\u8bcd\u5178\u540e, jieba\u80fd\u591f\u51c6\u786e\u8bc6\u522b\u8bcd\u5178\u4e2d\u51fa\u73b0\u7684\u8bcd\u6c47\uff0c\u63d0\u5347\u6574\u4f53\u7684\u8bc6\u522b\u51c6\u786e\u7387. \u8bcd\u5178\u683c\u5f0f: \u6bcf\u4e00\u884c\u5206\u4e09\u90e8\u5206\uff1a\u8bcd\u8bed\u3001\u8bcd\u9891\uff08\u53ef\u7701\u7565\uff09\u3001\u8bcd\u6027\uff08\u53ef\u7701\u7565\uff09\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u987a\u5e8f\u4e0d\u53ef\u98a0\u5012. \u8bcd\u5178\u6837\u5f0f\u5982\u4e0b, \u5177\u4f53\u8bcd\u6027\u542b\u4e49\u8bf7\u53c2\u7167 \u9644\u5f55: jieba\u8bcd\u6027\u5bf9\u7167\u8868 , \u5c06\u8be5\u8bcd\u5178\u5b58\u4e3auserdict.txt, \u65b9\u4fbf\u4e4b\u540e\u52a0\u8f7d\u4f7f\u7528. \u4e91\u8ba1\u7b97 5 n \u674e\u5c0f\u798f 2 nr easy_install 3 eng \u597d\u7528 300 \u97e9\u7389\u8d4f\u9274 3 nz \u516b\u4e00\u53cc\u9e7f 3 nz >>> import jieba >>> jieba . lcut ( \"\u516b\u4e00\u53cc\u9e7f\u66f4\u540d\u4e3a\u516b\u4e00\u5357\u660c\u7bee\u7403\u961f\uff01\" ) # \u6ca1\u6709\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178\u524d\u7684\u7ed3\u679c: >>> [ '\u516b' , '\u4e00\u53cc' , '\u9e7f' , '\u66f4\u540d' , '\u4e3a' , '\u516b\u4e00' , '\u5357\u660c' , '\u7bee\u7403\u961f' , '\uff01' ] >>> jieba . load_userdict ( \"./userdict.txt\" ) # \u4f7f\u7528\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178\u540e\u7684\u7ed3\u679c: [ '\u516b\u4e00\u53cc\u9e7f' , '\u66f4\u540d' , '\u4e3a' , '\u516b\u4e00' , '\u5357\u660c' , '\u7bee\u7403\u961f' , '\uff01' ]","title":"\u4ec0\u4e48\u662f\u5206\u8bcd"},{"location":"1.html#_12","text":"\u547d\u540d\u5b9e\u4f53: \u901a\u5e38\u6211\u4eec\u5c06\u4eba\u540d, \u5730\u540d, \u673a\u6784\u540d\u7b49\u4e13\u6709\u540d\u8bcd\u7edf\u79f0\u547d\u540d\u5b9e\u4f53. \u5982: \u5468\u6770\u4f26, \u9ed1\u5c71\u53bf, \u5b54\u5b50\u5b66\u9662, 24\u8f8a\u65b9\u94a2\u77eb\u76f4\u673a. \u987e\u540d\u601d\u4e49, \u547d\u540d\u5b9e\u4f53\u8bc6\u522b(Named Entity Recognition\uff0c\u7b80\u79f0NER)\u5c31\u662f\u8bc6\u522b\u51fa\u4e00\u6bb5\u6587\u672c\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u547d\u540d\u5b9e\u4f53. \u4e3e\u4e2a\u6817\u5b50: \u9c81\u8fc5, \u6d59\u6c5f\u7ecd\u5174\u4eba, \u4e94\u56db\u65b0\u6587\u5316\u8fd0\u52a8\u7684\u91cd\u8981\u53c2\u4e0e\u8005, \u4ee3\u8868\u4f5c\u671d\u82b1\u5915\u62fe. ==> \u9c81\u8fc5(\u4eba\u540d) / \u6d59\u6c5f\u7ecd\u5174(\u5730\u540d)\u4eba / \u4e94\u56db\u65b0\u6587\u5316\u8fd0\u52a8(\u4e13\u6709\u540d\u8bcd) / \u91cd\u8981\u53c2\u4e0e\u8005 / \u4ee3\u8868\u4f5c / \u671d\u82b1\u5915\u62fe(\u4e13\u6709\u540d\u8bcd) \u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u7684\u4f5c\u7528: \u540c\u8bcd\u6c47\u4e00\u6837, \u547d\u540d\u5b9e\u4f53\u4e5f\u662f\u4eba\u7c7b\u7406\u89e3\u6587\u672c\u7684\u57fa\u7840\u5355\u5143, \u56e0\u6b64\u4e5f\u662fAI\u89e3\u51b3NLP\u9886\u57df\u9ad8\u9636\u4efb\u52a1\u7684\u91cd\u8981\u57fa\u7840\u73af\u8282.","title":"\u4ec0\u4e48\u662f\u547d\u540d\u5b9e\u4f53\u8bc6\u522b"},{"location":"1.html#_13","text":"\u8bcd\u6027: \u8bed\u8a00\u4e2d\u5bf9\u8bcd\u7684\u4e00\u79cd\u5206\u7c7b\u65b9\u6cd5\uff0c\u4ee5\u8bed\u6cd5\u7279\u5f81\u4e3a\u4e3b\u8981\u4f9d\u636e\u3001\u517c\u987e\u8bcd\u6c47\u610f\u4e49\u5bf9\u8bcd\u8fdb\u884c\u5212\u5206\u7684\u7ed3\u679c, \u5e38\u89c1\u7684\u8bcd\u6027\u670914\u79cd, \u5982: \u540d\u8bcd, \u52a8\u8bcd, \u5f62\u5bb9\u8bcd\u7b49. \u987e\u540d\u601d\u4e49, \u8bcd\u6027\u6807\u6ce8(Part-Of-Speech tagging, \u7b80\u79f0POS)\u5c31\u662f\u6807\u6ce8\u51fa\u4e00\u6bb5\u6587\u672c\u4e2d\u6bcf\u4e2a\u8bcd\u6c47\u7684\u8bcd\u6027. \u4e3e\u4e2a\u6817\u5b50: \u6211\u7231\u81ea\u7136\u8bed\u8a00\u5904\u7406 ==> \u6211/rr, \u7231/v, \u81ea\u7136\u8bed\u8a00/n, \u5904\u7406/vn rr: \u4eba\u79f0\u4ee3\u8bcd v: \u52a8\u8bcd n: \u540d\u8bcd vn: \u52a8\u540d\u8bcd \u8bcd\u6027\u6807\u6ce8\u7684\u4f5c\u7528: \u8bcd\u6027\u6807\u6ce8\u4ee5\u5206\u8bcd\u4e3a\u57fa\u7840, \u662f\u5bf9\u6587\u672c\u8bed\u8a00\u7684\u53e6\u4e00\u4e2a\u89d2\u5ea6\u7684\u7406\u89e3, \u56e0\u6b64\u4e5f\u5e38\u5e38\u6210\u4e3aAI\u89e3\u51b3NLP\u9886\u57df\u9ad8\u9636\u4efb\u52a1\u7684\u91cd\u8981\u57fa\u7840\u73af\u8282. \u4f7f\u7528jieba\u8fdb\u884c\u4e2d\u6587\u8bcd\u6027\u6807\u6ce8: >>> import jieba.posseg as pseg >>> pseg . lcut ( \"\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8\" ) [ pair ( '\u6211' , 'r' ), pair ( '\u7231' , 'v' ), pair ( '\u5317\u4eac' , 'ns' ), pair ( '\u5929\u5b89\u95e8' , 'ns' )] # \u7ed3\u679c\u8fd4\u56de\u4e00\u4e2a\u88c5\u6709pair\u5143\u7ec4\u7684\u5217\u8868, \u6bcf\u4e2apair\u5143\u7ec4\u4e2d\u5206\u522b\u662f\u8bcd\u6c47\u53ca\u5176\u5bf9\u5e94\u7684\u8bcd\u6027, \u5177\u4f53\u8bcd\u6027\u542b\u4e49\u8bf7\u53c2\u7167[\u9644\u5f55: jieba\u8bcd\u6027\u5bf9\u7167\u8868]()","title":"\u4ec0\u4e48\u662f\u8bcd\u6027\u6807\u6ce8"},{"location":"1.html#_14","text":"\u5b66\u4e60\u4e86\u4ec0\u4e48\u662f\u5206\u8bcd: \u5206\u8bcd\u5c31\u662f\u5c06\u8fde\u7eed\u7684\u5b57\u5e8f\u5217\u6309\u7167\u4e00\u5b9a\u7684\u89c4\u8303\u91cd\u65b0\u7ec4\u5408\u6210\u8bcd\u5e8f\u5217\u7684\u8fc7\u7a0b\u3002\u6211\u4eec\u77e5\u9053\uff0c\u5728\u82f1\u6587\u7684\u884c\u6587\u4e2d\uff0c\u5355\u8bcd\u4e4b\u95f4\u662f\u4ee5\u7a7a\u683c\u4f5c\u4e3a\u81ea\u7136\u5206\u754c\u7b26\u7684\uff0c\u800c\u4e2d\u6587\u53ea\u662f\u5b57\u3001\u53e5\u548c\u6bb5\u80fd\u901a\u8fc7\u660e\u663e\u7684\u5206\u754c\u7b26\u6765\u7b80\u5355\u5212\u754c\uff0c\u552f\u72ec\u8bcd\u6ca1\u6709\u4e00\u4e2a\u5f62\u5f0f\u4e0a\u7684\u5206\u754c\u7b26, \u5206\u8bcd\u8fc7\u7a0b\u5c31\u662f\u627e\u5230\u8fd9\u6837\u5206\u754c\u7b26\u7684\u8fc7\u7a0b. \u5b66\u4e60\u4e86\u5206\u8bcd\u7684\u4f5c\u7528: \u8bcd\u4f5c\u4e3a\u8bed\u8a00\u8bed\u4e49\u7406\u89e3\u7684\u6700\u5c0f\u5355\u5143, \u662f\u4eba\u7c7b\u7406\u89e3\u6587\u672c\u8bed\u8a00\u7684\u57fa\u7840. \u56e0\u6b64\u4e5f\u662fAI\u89e3\u51b3NLP\u9886\u57df\u9ad8\u9636\u4efb\u52a1, \u5982\u81ea\u52a8\u95ee\u7b54, \u673a\u5668\u7ffb\u8bd1, \u6587\u672c\u751f\u6210\u7684\u91cd\u8981\u57fa\u7840\u73af\u8282. \u5b66\u4e60\u4e86\u6d41\u884c\u4e2d\u6587\u5206\u8bcd\u5de5\u5177jieba: \u652f\u6301\u591a\u79cd\u5206\u8bcd\u6a21\u5f0f: \u7cbe\u786e\u6a21\u5f0f, \u5168\u6a21\u5f0f, \u641c\u7d22\u5f15\u64ce\u6a21\u5f0f \u652f\u6301\u4e2d\u6587\u7e41\u4f53\u5206\u8bcd \u652f\u6301\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178 \u5b66\u4e60\u4e86jieba\u5de5\u5177\u7684\u5b89\u88c5\u548c\u5206\u8bcd\u4f7f\u7528. \u5b66\u4e60\u4e86\u4ec0\u4e48\u662f\u547d\u540d\u5b9e\u4f53\u8bc6\u522b: \u547d\u540d\u5b9e\u4f53: \u901a\u5e38\u6211\u4eec\u5c06\u4eba\u540d, \u5730\u540d, \u673a\u6784\u540d\u7b49\u4e13\u6709\u540d\u8bcd\u7edf\u79f0\u547d\u540d\u5b9e\u4f53. \u5982: \u5468\u6770\u4f26, \u9ed1\u5c71\u53bf, \u5b54\u5b50\u5b66\u9662, 24\u8f8a\u65b9\u94a2\u77eb\u76f4\u673a. \u987e\u540d\u601d\u4e49, \u547d\u540d\u5b9e\u4f53\u8bc6\u522b(Named Entity Recognition\uff0c\u7b80\u79f0NER)\u5c31\u662f\u8bc6\u522b\u51fa\u4e00\u6bb5\u6587\u672c\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u547d\u540d\u5b9e\u4f53. \u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u7684\u4f5c\u7528: \u540c\u8bcd\u6c47\u4e00\u6837, \u547d\u540d\u5b9e\u4f53\u4e5f\u662f\u4eba\u7c7b\u7406\u89e3\u6587\u672c\u7684\u57fa\u7840\u5355\u5143, \u56e0\u6b64\u4e5f\u662fAI\u89e3\u51b3NLP\u9886\u57df\u9ad8\u9636\u4efb\u52a1\u7684\u91cd\u8981\u57fa\u7840\u73af\u8282. \u5b66\u4e60\u4e86\u4ec0\u4e48\u662f\u8bcd\u6027\u6807\u6ce8: \u8bcd\u6027: \u8bed\u8a00\u4e2d\u5bf9\u8bcd\u7684\u4e00\u79cd\u5206\u7c7b\u65b9\u6cd5\uff0c\u4ee5\u8bed\u6cd5\u7279\u5f81\u4e3a\u4e3b\u8981\u4f9d\u636e\u3001\u517c\u987e\u8bcd\u6c47\u610f\u4e49\u5bf9\u8bcd\u8fdb\u884c\u5212\u5206\u7684\u7ed3\u679c, \u5e38\u89c1\u7684\u8bcd\u6027\u670914\u79cd, \u5982: \u540d\u8bcd, \u52a8\u8bcd, \u5f62\u5bb9\u8bcd\u7b49. \u987e\u540d\u601d\u4e49, \u8bcd\u6027\u6807\u6ce8(Part-Of-Speech tagging, \u7b80\u79f0POS)\u5c31\u662f\u6807\u6ce8\u51fa\u4e00\u6bb5\u6587\u672c\u4e2d\u6bcf\u4e2a\u8bcd\u6c47\u7684\u8bcd\u6027. \u5b66\u4e60\u4e86\u8bcd\u6027\u6807\u6ce8\u7684\u4f5c\u7528: \u8bcd\u6027\u6807\u6ce8\u4ee5\u5206\u8bcd\u4e3a\u57fa\u7840, \u662f\u5bf9\u6587\u672c\u8bed\u8a00\u7684\u53e6\u4e00\u4e2a\u89d2\u5ea6\u7684\u7406\u89e3, \u56e0\u6b64\u4e5f\u5e38\u5e38\u6210\u4e3aAI\u89e3\u51b3NLP\u9886\u57df\u9ad8\u9636\u4efb\u52a1\u7684\u91cd\u8981\u57fa\u7840\u73af\u8282. \u5b66\u4e60\u4e86\u4f7f\u7528jieba\u8fdb\u884c\u8bcd\u6027\u6807\u6ce8.","title":"\u5c0f\u8282\u603b\u7ed3"},{"location":"1.html#13","text":"","title":"1.3 \u6587\u672c\u5f20\u91cf\u8868\u793a\u65b9\u6cd5"},{"location":"1.html#_15","text":"\u4e86\u89e3\u4ec0\u4e48\u662f\u6587\u672c\u5f20\u91cf\u8868\u793a\u53ca\u5176\u4f5c\u7528. \u638c\u63e1\u6587\u672c\u5f20\u91cf\u8868\u793a\u7684\u51e0\u79cd\u65b9\u6cd5\u53ca\u5176\u5b9e\u73b0.","title":"\u5b66\u4e60\u76ee\u6807"},{"location":"1.html#_16","text":"\u5c06\u4e00\u6bb5\u6587\u672c\u4f7f\u7528\u5f20\u91cf\u8fdb\u884c\u8868\u793a\uff0c\u5176\u4e2d\u4e00\u822c\u5c06\u8bcd\u6c47\u4e3a\u8868\u793a\u6210\u5411\u91cf\uff0c\u79f0\u4f5c\u8bcd\u5411\u91cf\uff0c\u518d\u7531\u5404\u4e2a\u8bcd\u5411\u91cf\u6309\u987a\u5e8f\u7ec4\u6210\u77e9\u9635\u5f62\u6210\u6587\u672c\u8868\u793a. \u4e3e\u4e2a\u6817\u5b50: [\"\u4eba\u751f\", \"\u8be5\", \"\u5982\u4f55\", \"\u8d77\u5934\"] ==> # \u6bcf\u4e2a\u8bcd\u5bf9\u5e94\u77e9\u9635\u4e2d\u7684\u4e00\u4e2a\u5411\u91cf [[1.32, 4,32, 0,32, 5.2], [3.1, 5.43, 0.34, 3.2], [3.21, 5.32, 2, 4.32], [2.54, 7.32, 5.12, 9.54]] \u6587\u672c\u5f20\u91cf\u8868\u793a\u7684\u4f5c\u7528: \u5c06\u6587\u672c\u8868\u793a\u6210\u5f20\u91cf\uff08\u77e9\u9635\uff09\u5f62\u5f0f\uff0c\u80fd\u591f\u4f7f\u8bed\u8a00\u6587\u672c\u53ef\u4ee5\u4f5c\u4e3a\u8ba1\u7b97\u673a\u5904\u7406\u7a0b\u5e8f\u7684\u8f93\u5165\uff0c\u8fdb\u884c\u63a5\u4e0b\u6765\u4e00\u7cfb\u5217\u7684\u89e3\u6790\u5de5\u4f5c. \u6587\u672c\u5f20\u91cf\u8868\u793a\u7684\u65b9\u6cd5: one-hot\u7f16\u7801 Word2vec Word Embedding","title":"\u4ec0\u4e48\u662f\u6587\u672c\u5f20\u91cf\u8868\u793a"},{"location":"1.html#one-hot","text":"\u53c8\u79f0\u72ec\u70ed\u7f16\u7801\uff0c\u5c06\u6bcf\u4e2a\u8bcd\u8868\u793a\u6210\u5177\u6709n\u4e2a\u5143\u7d20\u7684\u5411\u91cf\uff0c\u8fd9\u4e2a\u8bcd\u5411\u91cf\u4e2d\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u662f1\uff0c\u5176\u4ed6\u5143\u7d20\u90fd\u662f0\uff0c\u4e0d\u540c\u8bcd\u6c47\u5143\u7d20\u4e3a0\u7684\u4f4d\u7f6e\u4e0d\u540c\uff0c\u5176\u4e2dn\u7684\u5927\u5c0f\u662f\u6574\u4e2a\u8bed\u6599\u4e2d\u4e0d\u540c\u8bcd\u6c47\u7684\u603b\u6570. \u4e3e\u4e2a\u6817\u5b50: [\"\u6539\u53d8\", \"\u8981\", \"\u5982\u4f55\", \"\u8d77\u624b\"]` ==> [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]] onehot\u7f16\u7801\u5b9e\u73b0: \u8fdb\u884conehot\u7f16\u7801: # \u5bfc\u5165\u7528\u4e8e\u5bf9\u8c61\u4fdd\u5b58\u4e0e\u52a0\u8f7d\u7684joblib from sklearn.externals import joblib # \u5bfc\u5165keras\u4e2d\u7684\u8bcd\u6c47\u6620\u5c04\u5668Tokenizer from keras.preprocessing.text import Tokenizer # \u5047\u5b9avocab\u4e3a\u8bed\u6599\u96c6\u6240\u6709\u4e0d\u540c\u8bcd\u6c47\u96c6\u5408 vocab = { \"\u5468\u6770\u4f26\" , \"\u9648\u5955\u8fc5\" , \"\u738b\u529b\u5b8f\" , \"\u674e\u5b97\u76db\" , \"\u5434\u4ea6\u51e1\" , \"\u9e7f\u6657\" } # \u5b9e\u4f8b\u5316\u4e00\u4e2a\u8bcd\u6c47\u6620\u5c04\u5668\u5bf9\u8c61 t = Tokenizer ( num_words = None , char_level = False ) # \u4f7f\u7528\u6620\u5c04\u5668\u62df\u5408\u73b0\u6709\u6587\u672c\u6570\u636e t . fit_on_texts ( vocab ) for token in vocab : zero_list = [ 0 ] * len ( vocab ) # \u4f7f\u7528\u6620\u5c04\u5668\u8f6c\u5316\u73b0\u6709\u6587\u672c\u6570\u636e, \u6bcf\u4e2a\u8bcd\u6c47\u5bf9\u5e94\u4ece1\u5f00\u59cb\u7684\u81ea\u7136\u6570 # \u8fd4\u56de\u6837\u5f0f\u5982: [[2]], \u53d6\u51fa\u5176\u4e2d\u7684\u6570\u5b57\u9700\u8981\u4f7f\u7528[0][0] token_index = t . texts_to_sequences ([ token ])[ 0 ][ 0 ] - 1 zero_list [ token_index ] = 1 print ( token , \"\u7684one-hot\u7f16\u7801\u4e3a:\" , zero_list ) # \u4f7f\u7528joblib\u5de5\u5177\u4fdd\u5b58\u6620\u5c04\u5668, \u4ee5\u4fbf\u4e4b\u540e\u4f7f\u7528 tokenizer_path = \"./Tokenizer\" joblib . dump ( t , tokenizer_path ) \u8f93\u51fa\u6548\u679c: \u9e7f\u6657 \u7684one-hot\u7f16\u7801\u4e3a: [1, 0, 0, 0, 0, 0] \u738b\u529b\u5b8f \u7684one-hot\u7f16\u7801\u4e3a: [0, 1, 0, 0, 0, 0] \u674e\u5b97\u76db \u7684one-hot\u7f16\u7801\u4e3a: [0, 0, 1, 0, 0, 0] \u9648\u5955\u8fc5 \u7684one-hot\u7f16\u7801\u4e3a: [0, 0, 0, 1, 0, 0] \u5468\u6770\u4f26 \u7684one-hot\u7f16\u7801\u4e3a: [0, 0, 0, 0, 1, 0] \u5434\u4ea6\u51e1 \u7684one-hot\u7f16\u7801\u4e3a: [0, 0, 0, 0, 0, 1] # \u540c\u65f6\u5728\u5f53\u524d\u76ee\u5f55\u751f\u6210Tokenizer\u6587\u4ef6, \u4ee5\u4fbf\u4e4b\u540e\u4f7f\u7528 onehot\u7f16\u7801\u5668\u7684\u4f7f\u7528: # \u5bfc\u5165\u7528\u4e8e\u5bf9\u8c61\u4fdd\u5b58\u4e0e\u52a0\u8f7d\u7684joblib # from sklearn.externals import joblib # \u52a0\u8f7d\u4e4b\u524d\u4fdd\u5b58\u7684Tokenizer, \u5b9e\u4f8b\u5316\u4e00\u4e2at\u5bf9\u8c61 t = joblib . load ( tokenizer_path ) # \u7f16\u7801token\u4e3a\"\u674e\u5b97\u76db\" token = \"\u674e\u5b97\u76db\" # \u4f7f\u7528t\u83b7\u5f97token_index token_index = t . texts_to_sequences ([ token ])[ 0 ][ 0 ] - 1 # \u521d\u59cb\u5316\u4e00\u4e2azero_list zero_list = [ 0 ] * len ( vocab ) # \u4ee4zero_List\u7684\u5bf9\u5e94\u7d22\u5f15\u4e3a1 zero_list [ token_index ] = 1 print ( token , \"\u7684one-hot\u7f16\u7801\u4e3a:\" , zero_list ) \u8f93\u51fa\u6548\u679c: \u674e\u5b97\u76db \u7684one-hot\u7f16\u7801\u4e3a: [1, 0, 0, 0, 0, 0] one-hot\u7f16\u7801\u7684\u4f18\u52a3\u52bf\uff1a \u4f18\u52bf\uff1a\u64cd\u4f5c\u7b80\u5355\uff0c\u5bb9\u6613\u7406\u89e3. \u52a3\u52bf\uff1a\u5b8c\u5168\u5272\u88c2\u4e86\u8bcd\u4e0e\u8bcd\u4e4b\u95f4\u7684\u8054\u7cfb\uff0c\u800c\u4e14\u5728\u5927\u8bed\u6599\u96c6\u4e0b\uff0c\u6bcf\u4e2a\u5411\u91cf\u7684\u957f\u5ea6\u8fc7\u5927\uff0c\u5360\u636e\u5927\u91cf\u5185\u5b58. \u8bf4\u660e\uff1a \u6b63\u56e0\u4e3aone-hot\u7f16\u7801\u660e\u663e\u7684\u52a3\u52bf\uff0c\u8fd9\u79cd\u7f16\u7801\u65b9\u5f0f\u88ab\u5e94\u7528\u7684\u5730\u65b9\u8d8a\u6765\u8d8a\u5c11\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u5b66\u4e60\u7684\u7a20\u5bc6\u5411\u91cf\u7684\u8868\u793a\u65b9\u6cd5word2vec\u548cword embedding.","title":"\u4ec0\u4e48\u662fone-hot\u8bcd\u5411\u91cf\u8868\u793a"},{"location":"1.html#word2vec","text":"\u662f\u4e00\u79cd\u6d41\u884c\u7684\u5c06\u8bcd\u6c47\u8868\u793a\u6210\u5411\u91cf\u7684\u65e0\u76d1\u7763\u8bad\u7ec3\u65b9\u6cd5, \u8be5\u8fc7\u7a0b\u5c06\u6784\u5efa\u795e\u7ecf\u7f51\u7edc\u6a21\u578b, \u5c06\u7f51\u7edc\u53c2\u6570\u4f5c\u4e3a\u8bcd\u6c47\u7684\u5411\u91cf\u8868\u793a, \u5b83\u5305\u542bCBOW\u548cskipgram\u4e24\u79cd\u8bad\u7ec3\u6a21\u5f0f. CBOW(Continuous bag of words)\u6a21\u5f0f: \u7ed9\u5b9a\u4e00\u6bb5\u7528\u4e8e\u8bad\u7ec3\u7684\u6587\u672c\u8bed\u6599, \u518d\u9009\u5b9a\u67d0\u6bb5\u957f\u5ea6(\u7a97\u53e3)\u4f5c\u4e3a\u7814\u7a76\u5bf9\u8c61, \u4f7f\u7528\u4e0a\u4e0b\u6587\u8bcd\u6c47\u9884\u6d4b\u76ee\u6807\u8bcd\u6c47. \u5206\u6790: \u56fe\u4e2d\u7a97\u53e3\u5927\u5c0f\u4e3a9, \u4f7f\u7528\u524d\u540e4\u4e2a\u8bcd\u6c47\u5bf9\u76ee\u6807\u8bcd\u6c47\u8fdb\u884c\u9884\u6d4b. CBOW\u6a21\u5f0f\u4e0b\u7684word2vec\u8fc7\u7a0b\u8bf4\u660e: \u5047\u8bbe\u6211\u4eec\u7ed9\u5b9a\u7684\u8bad\u7ec3\u8bed\u6599\u53ea\u6709\u4e00\u53e5\u8bdd: Hope can set you free (\u613f\u4f60\u81ea\u7531\u6210\u957f)\uff0c\u7a97\u53e3\u5927\u5c0f\u4e3a3\uff0c\u56e0\u6b64\u6a21\u578b\u7684\u7b2c\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c\u6765\u81eaHope can set\uff0c\u56e0\u4e3a\u662fCBOW\u6a21\u5f0f\uff0c\u6240\u4ee5\u5c06\u4f7f\u7528Hope\u548cset\u4f5c\u4e3a\u8f93\u5165\uff0ccan\u4f5c\u4e3a\u8f93\u51fa\uff0c\u5728\u6a21\u578b\u8bad\u7ec3\u65f6\uff0c Hope\uff0ccan\uff0cset\u7b49\u8bcd\u6c47\u90fd\u4f7f\u7528\u5b83\u4eec\u7684one-hot\u7f16\u7801. \u5982\u56fe\u6240\u793a: \u6bcf\u4e2aone-hot\u7f16\u7801\u7684\u5355\u8bcd\u4e0e\u5404\u81ea\u7684\u53d8\u6362\u77e9\u9635(\u5373\u53c2\u6570\u77e9\u96353x5, \u8fd9\u91cc\u76843\u662f\u6307\u6700\u540e\u5f97\u5230\u7684\u8bcd\u5411\u91cf\u7ef4\u5ea6)\u76f8\u4e58\u4e4b\u540e\u518d\u76f8\u52a0, \u5f97\u5230\u4e0a\u4e0b\u6587\u8868\u793a\u77e9\u9635(3x1). \u63a5\u7740, \u5c06\u4e0a\u4e0b\u6587\u8868\u793a\u77e9\u9635\u4e0e\u53d8\u6362\u77e9\u9635(\u53c2\u6570\u77e9\u96355x3, \u6240\u6709\u7684\u53d8\u6362\u77e9\u9635\u5171\u4eab\u53c2\u6570)\u76f8\u4e58, \u5f97\u52305x1\u7684\u7ed3\u679c\u77e9\u9635, \u5b83\u5c06\u4e0e\u6211\u4eec\u771f\u6b63\u7684\u76ee\u6807\u77e9\u9635\u5373can\u7684one-hot\u7f16\u7801\u77e9\u9635(5x1)\u8fdb\u884c\u635f\u5931\u7684\u8ba1\u7b97, \u7136\u540e\u66f4\u65b0\u7f51\u7edc\u53c2\u6570\u5b8c\u6210\u4e00\u6b21\u6a21\u578b\u8fed\u4ee3. \u6700\u540e\u7a97\u53e3\u6309\u5e8f\u5411\u540e\u79fb\u52a8\uff0c\u91cd\u65b0\u66f4\u65b0\u53c2\u6570\uff0c\u76f4\u5230\u6240\u6709\u8bed\u6599\u88ab\u904d\u5386\u5b8c\u6210\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u53d8\u6362\u77e9\u9635(3x5)\uff0c\u8fd9\u4e2a\u53d8\u6362\u77e9\u9635\u4e0e\u6bcf\u4e2a\u8bcd\u6c47\u7684one-hot\u7f16\u7801(5x1)\u76f8\u4e58\uff0c\u5f97\u5230\u76843x1\u7684\u77e9\u9635\u5c31\u662f\u8be5\u8bcd\u6c47\u7684word2vec\u5f20\u91cf\u8868\u793a. skipgram\u6a21\u5f0f: \u7ed9\u5b9a\u4e00\u6bb5\u7528\u4e8e\u8bad\u7ec3\u7684\u6587\u672c\u8bed\u6599, \u518d\u9009\u5b9a\u67d0\u6bb5\u957f\u5ea6(\u7a97\u53e3)\u4f5c\u4e3a\u7814\u7a76\u5bf9\u8c61, \u4f7f\u7528\u76ee\u6807\u8bcd\u6c47\u9884\u6d4b\u4e0a\u4e0b\u6587\u8bcd\u6c47. \u5206\u6790: \u56fe\u4e2d\u7a97\u53e3\u5927\u5c0f\u4e3a9, \u4f7f\u7528\u76ee\u6807\u8bcd\u6c47\u5bf9\u524d\u540e\u56db\u4e2a\u8bcd\u6c47\u8fdb\u884c\u9884\u6d4b. skipgram\u6a21\u5f0f\u4e0b\u7684word2vec\u8fc7\u7a0b\u8bf4\u660e: \u5047\u8bbe\u6211\u4eec\u7ed9\u5b9a\u7684\u8bad\u7ec3\u8bed\u6599\u53ea\u6709\u4e00\u53e5\u8bdd: Hope can set you free (\u613f\u4f60\u81ea\u7531\u6210\u957f)\uff0c\u7a97\u53e3\u5927\u5c0f\u4e3a3\uff0c\u56e0\u6b64\u6a21\u578b\u7684\u7b2c\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c\u6765\u81eaHope can set\uff0c\u56e0\u4e3a\u662fskipgram\u6a21\u5f0f\uff0c\u6240\u4ee5\u5c06\u4f7f\u7528can\u4f5c\u4e3a\u8f93\u5165 \uff0cHope\u548cset\u4f5c\u4e3a\u8f93\u51fa\uff0c\u5728\u6a21\u578b\u8bad\u7ec3\u65f6\uff0c Hope\uff0ccan\uff0cset\u7b49\u8bcd\u6c47\u90fd\u4f7f\u7528\u5b83\u4eec\u7684one-hot\u7f16\u7801. \u5982\u56fe\u6240\u793a: \u5c06can\u7684one-hot\u7f16\u7801\u4e0e\u53d8\u6362\u77e9\u9635(\u5373\u53c2\u6570\u77e9\u96353x5, \u8fd9\u91cc\u76843\u662f\u6307\u6700\u540e\u5f97\u5230\u7684\u8bcd\u5411\u91cf\u7ef4\u5ea6)\u76f8\u4e58, \u5f97\u5230\u76ee\u6807\u8bcd\u6c47\u8868\u793a\u77e9\u9635(3x1). \u63a5\u7740, \u5c06\u76ee\u6807\u8bcd\u6c47\u8868\u793a\u77e9\u9635\u4e0e\u591a\u4e2a\u53d8\u6362\u77e9\u9635(\u53c2\u6570\u77e9\u96355x3)\u76f8\u4e58, \u5f97\u5230\u591a\u4e2a5x1\u7684\u7ed3\u679c\u77e9\u9635, \u5b83\u5c06\u4e0e\u6211\u4eecHope\u548cset\u5bf9\u5e94\u7684one-hot\u7f16\u7801\u77e9\u9635(5x1)\u8fdb\u884c\u635f\u5931\u7684\u8ba1\u7b97, \u7136\u540e\u66f4\u65b0\u7f51\u7edc\u53c2\u6570\u5b8c\u6210\u4e00\u6b21\u6a21 \u578b\u8fed\u4ee3. \u6700\u540e\u7a97\u53e3\u6309\u5e8f\u5411\u540e\u79fb\u52a8\uff0c\u91cd\u65b0\u66f4\u65b0\u53c2\u6570\uff0c\u76f4\u5230\u6240\u6709\u8bed\u6599\u88ab\u904d\u5386\u5b8c\u6210\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u53d8\u6362\u77e9\u9635\u5373\u53c2\u6570\u77e9\u9635(3x5)\uff0c\u8fd9\u4e2a\u53d8\u6362\u77e9\u9635\u4e0e\u6bcf\u4e2a\u8bcd\u6c47\u7684one-hot\u7f16\u7801(5x1)\u76f8\u4e58\uff0c\u5f97\u5230\u76843x1\u7684\u77e9\u9635\u5c31\u662f\u8be5\u8bcd\u6c47\u7684word2vec\u5f20\u91cf\u8868\u793a.","title":"\u4ec0\u4e48\u662fword2vec"},{"location":"1.html#fasttextword2vec","text":"\u7b2c\u4e00\u6b65: \u83b7\u53d6\u8bad\u7ec3\u6570\u636e \u7b2c\u4e8c\u6b65: \u8bad\u7ec3\u8bcd\u5411\u91cf \u7b2c\u4e09\u6b65: \u6a21\u578b\u8d85\u53c2\u6570\u8bbe\u5b9a \u7b2c\u56db\u6b65: \u6a21\u578b\u6548\u679c\u68c0\u9a8c \u7b2c\u4e94\u6b65: \u6a21\u578b\u7684\u4fdd\u5b58\u4e0e\u91cd\u52a0\u8f7d \u7b2c\u4e00\u6b65: \u83b7\u53d6\u8bad\u7ec3\u6570\u636e # \u5728\u8fd9\u91cc, \u6211\u4eec\u5c06\u7814\u7a76\u82f1\u8bed\u7ef4\u57fa\u767e\u79d1\u7684\u90e8\u5206\u7f51\u9875\u4fe1\u606f, \u5b83\u7684\u5927\u5c0f\u5728300M\u5de6\u53f3 # \u8fd9\u4e9b\u8bed\u6599\u5df2\u7ecf\u88ab\u51c6\u5907\u597d, \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Matt Mahoney\u7684\u7f51\u7ad9\u4e0b\u8f7d. # \u9996\u5148\u521b\u5efa\u4e00\u4e2a\u5b58\u50a8\u6570\u636e\u7684\u6587\u4ef6\u5939data $ mkdir data # \u4f7f\u7528wget\u4e0b\u8f7d\u6570\u636e\u7684zip\u538b\u7f29\u5305, \u5b83\u5c06\u5b58\u50a8\u5728data\u76ee\u5f55\u4e2d $ wget -c http://mattmahoney.net/dc/enwik9.zip -P data # \u4f7f\u7528unzip\u89e3\u538b, \u5982\u679c\u4f60\u7684\u670d\u52a1\u5668\u4e2d\u8fd8\u6ca1\u6709unzip\u547d\u4ee4, \u8bf7\u4f7f\u7528: yum install unzip -y # \u89e3\u538b\u540e\u5728data\u76ee\u5f55\u4e0b\u4f1a\u51fa\u73b0enwik9\u7684\u6587\u4ef6\u5939 $ unzip data/enwik9.zip -d data \u67e5\u770b\u539f\u59cb\u6570\u636e: $ head -10 data/enwik9 # \u539f\u59cb\u6570\u636e\u5c06\u8f93\u51fa\u5f88\u591a\u5305\u542bXML/HTML\u683c\u5f0f\u7684\u5185\u5bb9, \u8fd9\u4e9b\u5185\u5bb9\u5e76\u4e0d\u662f\u6211\u4eec\u9700\u8981\u7684 <mediawiki xmlns = \"http://www.mediawiki.org/xml/export-0.3/\" xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation = \"http://www.mediawiki.org/xml/export-0.3/ http://www.mediawiki.org/xml/export-0.3.xsd\" version = \"0.3\" xml:lang = \"en\" > <siteinfo> <sitename>Wikipedia</sitename> <base>http://en.wikipedia.org/wiki/Main_Page</base> <generator>MediaWiki 1 .6alpha</generator> < case >first-letter</case> <namespaces> <namespace key = \"-2\" >Media</namespace> <namespace key = \"-1\" >Special</namespace> <namespace key = \"0\" /> \u539f\u59cb\u6570\u636e\u5904\u7406: # \u4f7f\u7528wikifil.pl\u6587\u4ef6\u5904\u7406\u811a\u672c\u6765\u6e05\u9664XML/HTML\u683c\u5f0f\u7684\u5185\u5bb9 # \u6ce8: wikifil.pl\u6587\u4ef6\u5df2\u4e3a\u5927\u5bb6\u63d0\u4f9b $ perl wikifil.pl data/enwik9 > data/fil9 \u67e5\u770b\u9884\u5904\u7406\u540e\u7684\u6570\u636e: # \u67e5\u770b\u524d80\u4e2a\u5b57\u7b26 head -c 80 data/fil9 # \u8f93\u51fa\u7ed3\u679c\u4e3a\u7531\u7a7a\u683c\u5206\u5272\u7684\u5355\u8bcd anarchism originated as a term of abuse first used against early working class \u7b2c\u4e8c\u6b65: \u8bad\u7ec3\u8bcd\u5411\u91cf # \u4ee3\u7801\u8fd0\u884c\u5728python\u89e3\u91ca\u5668\u4e2d # \u5bfc\u5165fasttext >>> import fasttext # \u4f7f\u7528fasttext\u7684train_unsupervised(\u65e0\u76d1\u7763\u8bad\u7ec3\u65b9\u6cd5)\u8fdb\u884c\u8bcd\u5411\u91cf\u7684\u8bad\u7ec3 # \u5b83\u7684\u53c2\u6570\u662f\u6570\u636e\u96c6\u7684\u6301\u4e45\u5316\u6587\u4ef6\u8def\u5f84'data/fil9' >>> model = fasttext . train_unsupervised ( 'data/fil9' ) # \u6709\u6548\u8bad\u7ec3\u8bcd\u6c47\u91cf\u4e3a124M, \u5171218316\u4e2a\u5355\u8bcd Read 124 M words Number of words : 218316 Number of labels : 0 Progress : 100.0 % words / sec / thread : 53996 lr : 0.000000 loss : 0.734999 ETA : 0 h 0 m \u67e5\u770b\u5355\u8bcd\u5bf9\u5e94\u7684\u8bcd\u5411\u91cf: # \u901a\u8fc7get_word_vector\u65b9\u6cd5\u6765\u83b7\u5f97\u6307\u5b9a\u8bcd\u6c47\u7684\u8bcd\u5411\u91cf >>> model . get_word_vector ( \"the\" ) array ([ - 0.03087516 , 0.09221972 , 0.17660329 , 0.17308897 , 0.12863874 , 0.13912526 , - 0.09851588 , 0.00739991 , 0.37038437 , - 0.00845221 , ... - 0.21184735 , - 0.05048715 , - 0.34571868 , 0.23765688 , 0.23726143 ], dtype = float32 ) \u7b2c\u4e09\u6b65: \u6a21\u578b\u8d85\u53c2\u6570\u8bbe\u5b9a # \u5728\u8bad\u7ec3\u8bcd\u5411\u91cf\u8fc7\u7a0b\u4e2d, \u6211\u4eec\u53ef\u4ee5\u8bbe\u5b9a\u5f88\u591a\u5e38\u7528\u8d85\u53c2\u6570\u6765\u8c03\u8282\u6211\u4eec\u7684\u6a21\u578b\u6548\u679c, \u5982: # \u65e0\u76d1\u7763\u8bad\u7ec3\u6a21\u5f0f: 'skipgram' \u6216\u8005 'cbow', \u9ed8\u8ba4\u4e3a'skipgram', \u5728\u5b9e\u8df5\u4e2d\uff0cskipgram\u6a21\u5f0f\u5728\u5229\u7528\u5b50\u8bcd\u65b9\u9762\u6bd4cbow\u66f4\u597d. # \u8bcd\u5d4c\u5165\u7ef4\u5ea6dim: \u9ed8\u8ba4\u4e3a100, \u4f46\u968f\u7740\u8bed\u6599\u5e93\u7684\u589e\u5927, \u8bcd\u5d4c\u5165\u7684\u7ef4\u5ea6\u5f80\u5f80\u4e5f\u8981\u66f4\u5927. # \u6570\u636e\u5faa\u73af\u6b21\u6570epoch: \u9ed8\u8ba4\u4e3a5, \u4f46\u5f53\u4f60\u7684\u6570\u636e\u96c6\u8db3\u591f\u5927, \u53ef\u80fd\u4e0d\u9700\u8981\u90a3\u4e48\u591a\u6b21. # \u5b66\u4e60\u7387lr: \u9ed8\u8ba4\u4e3a0.05, \u6839\u636e\u7ecf\u9a8c, \u5efa\u8bae\u9009\u62e9[0.01\uff0c1]\u8303\u56f4\u5185. # \u4f7f\u7528\u7684\u7ebf\u7a0b\u6570thread: \u9ed8\u8ba4\u4e3a12\u4e2a\u7ebf\u7a0b, \u4e00\u822c\u5efa\u8bae\u548c\u4f60\u7684cpu\u6838\u6570\u76f8\u540c. >>> model = fasttext . train_unsupervised ( 'data/fil9' , \"cbow\" , dim = 300 , epoch = 1 , lr = 0.1 , thread = 8 ) Read 124 M words Number of words : 218316 Number of labels : 0 Progress : 100.0 % words / sec / thread : 49523 lr : 0.000000 avg . loss : 1.777205 ETA : 0 h 0 m 0 s \u7b2c\u56db\u6b65: \u6a21\u578b\u6548\u679c\u68c0\u9a8c # \u68c0\u67e5\u5355\u8bcd\u5411\u91cf\u8d28\u91cf\u7684\u4e00\u79cd\u7b80\u5355\u65b9\u6cd5\u5c31\u662f\u67e5\u770b\u5176\u90bb\u8fd1\u5355\u8bcd, \u901a\u8fc7\u6211\u4eec\u4e3b\u89c2\u6765\u5224\u65ad\u8fd9\u4e9b\u90bb\u8fd1\u5355\u8bcd\u662f\u5426\u4e0e\u76ee\u6807\u5355\u8bcd\u76f8\u5173\u6765\u7c97\u7565\u8bc4\u5b9a\u6a21\u578b\u6548\u679c\u597d\u574f. # \u67e5\u627e\"\u8fd0\u52a8\"\u7684\u90bb\u8fd1\u5355\u8bcd, \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\"\u4f53\u80b2\u7f51\", \"\u8fd0\u52a8\u6c7d\u8f66\", \"\u8fd0\u52a8\u670d\"\u7b49. >>> model . get_nearest_neighbors ( 'sports' ) [( 0.8414610624313354 , 'sportsnet' ), ( 0.8134572505950928 , 'sport' ), ( 0.8100415468215942 , 'sportscars' ), ( 0.8021156787872314 , 'sportsground' ), ( 0.7889881134033203 , 'sportswomen' ), ( 0.7863013744354248 , 'sportsplex' ), ( 0.7786710262298584 , 'sporty' ), ( 0.7696356177330017 , 'sportscar' ), ( 0.7619683146476746 , 'sportswear' ), ( 0.7600985765457153 , 'sportin' )] # \u67e5\u627e\"\u97f3\u4e50\"\u7684\u90bb\u8fd1\u5355\u8bcd, \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e0e\u97f3\u4e50\u6709\u5173\u7684\u8bcd\u6c47. >>> model . get_nearest_neighbors ( 'music' ) [( 0.8908010125160217 , 'emusic' ), ( 0.8464668393135071 , 'musicmoz' ), ( 0.8444250822067261 , 'musics' ), ( 0.8113634586334229 , 'allmusic' ), ( 0.8106718063354492 , 'musices' ), ( 0.8049437999725342 , 'musicam' ), ( 0.8004694581031799 , 'musicom' ), ( 0.7952923774719238 , 'muchmusic' ), ( 0.7852965593338013 , 'musicweb' ), ( 0.7767147421836853 , 'musico' )] # \u67e5\u627e\"\u5c0f\u72d7\"\u7684\u90bb\u8fd1\u5355\u8bcd, \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e0e\u5c0f\u72d7\u6709\u5173\u7684\u8bcd\u6c47. >>> model . get_nearest_neighbors ( 'dog' ) [( 0.8456876873970032 , 'catdog' ), ( 0.7480780482292175 , 'dogcow' ), ( 0.7289096117019653 , 'sleddog' ), ( 0.7269964218139648 , 'hotdog' ), ( 0.7114801406860352 , 'sheepdog' ), ( 0.6947550773620605 , 'dogo' ), ( 0.6897546648979187 , 'bodog' ), ( 0.6621081829071045 , 'maddog' ), ( 0.6605004072189331 , 'dogs' ), ( 0.6398137211799622 , 'dogpile' )] \u7b2c\u4e94\u6b65: \u6a21\u578b\u7684\u4fdd\u5b58\u4e0e\u91cd\u52a0\u8f7d # \u4f7f\u7528save_model\u4fdd\u5b58\u6a21\u578b >>> model . save_model ( \"fil9.bin\" ) # \u4f7f\u7528fasttext.load_model\u52a0\u8f7d\u6a21\u578b >>> model = fasttext . load_model ( \"fil9.bin\" ) >>> model . get_word_vector ( \"the\" ) array ([ - 0.03087516 , 0.09221972 , 0.17660329 , 0.17308897 , 0.12863874 , 0.13912526 , - 0.09851588 , 0.00739991 , 0.37038437 , - 0.00845221 , ... - 0.21184735 , - 0.05048715 , - 0.34571868 , 0.23765688 , 0.23726143 ], dtype = float32 )","title":"\u4f7f\u7528fasttext\u5de5\u5177\u5b9e\u73b0word2vec\u7684\u8bad\u7ec3\u548c\u4f7f\u7528"},{"location":"1.html#word-embedding","text":"\u901a\u8fc7\u4e00\u5b9a\u7684\u65b9\u5f0f\u5c06\u8bcd\u6c47\u6620\u5c04\u5230\u6307\u5b9a\u7ef4\u5ea6(\u4e00\u822c\u662f\u66f4\u9ad8\u7ef4\u5ea6)\u7684\u7a7a\u95f4. \u5e7f\u4e49\u7684word embedding\u5305\u62ec\u6240\u6709\u5bc6\u96c6\u8bcd\u6c47\u5411\u91cf\u7684\u8868\u793a\u65b9\u6cd5\uff0c\u5982\u4e4b\u524d\u5b66\u4e60\u7684word2vec, \u5373\u53ef\u8ba4\u4e3a\u662fword embedding\u7684\u4e00\u79cd. \u72ed\u4e49\u7684word embedding\u662f\u6307\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u52a0\u5165\u7684embedding\u5c42, \u5bf9\u6574\u4e2a\u7f51\u7edc\u8fdb\u884c\u8bad\u7ec3\u7684\u540c\u65f6\u4ea7\u751f\u7684embedding\u77e9\u9635(embedding\u5c42\u7684\u53c2\u6570), \u8fd9\u4e2aembedding\u77e9\u9635\u5c31\u662f\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u6240\u6709\u8f93\u5165\u8bcd\u6c47\u7684\u5411\u91cf\u8868\u793a\u7ec4\u6210\u7684\u77e9\u9635. word embedding\u7684\u53ef\u89c6\u5316\u5206\u6790: \u901a\u8fc7\u4f7f\u7528tensorboard\u53ef\u89c6\u5316\u5d4c\u5165\u7684\u8bcd\u5411\u91cf. # \u5bfc\u5165torch\u548ctensorboard\u7684\u6458\u8981\u5199\u5165\u65b9\u6cd5 import torch import json import fileinput from torch.utils.tensorboard import SummaryWriter # \u5b9e\u4f8b\u5316\u4e00\u4e2a\u6458\u8981\u5199\u5165\u5bf9\u8c61 writer = SummaryWriter () # \u968f\u673a\u521d\u59cb\u5316\u4e00\u4e2a100x50\u7684\u77e9\u9635, \u8ba4\u4e3a\u5b83\u662f\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u7684\u8bcd\u5d4c\u5165\u77e9\u9635 # \u4ee3\u8868100\u4e2a\u8bcd\u6c47, \u6bcf\u4e2a\u8bcd\u6c47\u88ab\u8868\u793a\u621050\u7ef4\u7684\u5411\u91cf embedded = torch . randn ( 100 , 50 ) # \u5bfc\u5165\u4e8b\u5148\u51c6\u5907\u597d\u7684100\u4e2a\u4e2d\u6587\u8bcd\u6c47\u6587\u4ef6, \u5f62\u6210meta\u5217\u8868\u539f\u59cb\u8bcd\u6c47 meta = list ( map ( lambda x : x . strip (), fileinput . FileInput ( \"./vocab100.csv\" ))) writer . add_embedding ( embedded , metadata = meta ) writer . close () \u5728\u7ec8\u7aef\u542f\u52a8tensorboard\u670d\u52a1: $ tensorboard --logdir runs --host 0 .0.0.0 # \u901a\u8fc7http://0.0.0.0:6006\u8bbf\u95ee\u6d4f\u89c8\u5668\u53ef\u89c6\u5316\u9875\u9762 \u6d4f\u89c8\u5668\u5c55\u793a\u5e76\u53ef\u4ee5\u4f7f\u7528\u53f3\u4fa7\u8fd1\u90bb\u8bcd\u6c47\u529f\u80fd\u68c0\u9a8c\u6548\u679c:","title":"\u4ec0\u4e48\u662fword embedding(\u8bcd\u5d4c\u5165)"},{"location":"1.html#_17","text":"\u5b66\u4e60\u4e86\u4ec0\u4e48\u662f\u6587\u672c\u5f20\u91cf\u8868\u793a: \u5c06\u4e00\u6bb5\u6587\u672c\u4f7f\u7528\u5f20\u91cf\u8fdb\u884c\u8868\u793a\uff0c\u5176\u4e2d\u4e00\u822c\u5c06\u8bcd\u6c47\u4e3a\u8868\u793a\u6210\u5411\u91cf\uff0c\u79f0\u4f5c\u8bcd\u5411\u91cf\uff0c\u518d\u7531\u5404\u4e2a\u8bcd\u5411\u91cf\u6309\u987a\u5e8f\u7ec4\u6210\u77e9\u9635\u5f62\u6210\u6587\u672c\u8868\u793a. \u5b66\u4e60\u4e86\u6587\u672c\u5f20\u91cf\u8868\u793a\u7684\u4f5c\u7528: \u5c06\u6587\u672c\u8868\u793a\u6210\u5f20\u91cf\uff08\u77e9\u9635\uff09\u5f62\u5f0f\uff0c\u80fd\u591f\u4f7f\u8bed\u8a00\u6587\u672c\u53ef\u4ee5\u4f5c\u4e3a\u8ba1\u7b97\u673a\u5904\u7406\u7a0b\u5e8f\u7684\u8f93\u5165\uff0c\u8fdb\u884c\u63a5\u4e0b\u6765\u4e00\u7cfb\u5217\u7684\u89e3\u6790\u5de5\u4f5c. \u5b66\u4e60\u4e86\u6587\u672c\u5f20\u91cf\u8868\u793a\u7684\u65b9\u6cd5: one-hot\u7f16\u7801 Word2vec Word Embedding \u4ec0\u4e48\u662fone-hot\u8bcd\u5411\u91cf\u8868\u793a: \u53c8\u79f0\u72ec\u70ed\u7f16\u7801\uff0c\u5c06\u6bcf\u4e2a\u8bcd\u8868\u793a\u6210\u5177\u6709n\u4e2a\u5143\u7d20\u7684\u5411\u91cf\uff0c\u8fd9\u4e2a\u8bcd\u5411\u91cf\u4e2d\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u662f1\uff0c\u5176\u4ed6\u5143\u7d20\u90fd\u662f0\uff0c\u4e0d\u540c\u8bcd\u6c47\u5143\u7d20\u4e3a0\u7684\u4f4d\u7f6e\u4e0d\u540c\uff0c\u5176\u4e2dn\u7684\u5927\u5c0f\u662f\u6574\u4e2a\u8bed\u6599\u4e2d\u4e0d\u540c\u8bcd\u6c47\u7684\u603b\u6570. \u5b66\u4e60\u4e86onehot\u7f16\u7801\u5b9e\u73b0. \u5b66\u4e60\u4e86one-hot\u7f16\u7801\u7684\u4f18\u52a3\u52bf\uff1a \u4f18\u52bf\uff1a\u64cd\u4f5c\u7b80\u5355\uff0c\u5bb9\u6613\u7406\u89e3. \u52a3\u52bf\uff1a\u5b8c\u5168\u5272\u88c2\u4e86\u8bcd\u4e0e\u8bcd\u4e4b\u95f4\u7684\u8054\u7cfb\uff0c\u800c\u4e14\u5728\u5927\u8bed\u6599\u96c6\u4e0b\uff0c\u6bcf\u4e2a\u5411\u91cf\u7684\u957f\u5ea6\u8fc7\u5927\uff0c\u5360\u636e\u5927\u91cf\u5185\u5b58. \u5b66\u4e60\u4e86\u4ec0\u4e48\u662fword2vec: \u662f\u4e00\u79cd\u6d41\u884c\u7684\u5c06\u8bcd\u6c47\u8868\u793a\u6210\u5411\u91cf\u7684\u65e0\u76d1\u7763\u8bad\u7ec3\u65b9\u6cd5, \u8be5\u8fc7\u7a0b\u5c06\u6784\u5efa\u795e\u7ecf\u7f51\u7edc\u6a21\u578b, \u5c06\u7f51\u7edc\u53c2\u6570\u4f5c\u4e3a\u8bcd\u6c47\u7684\u5411\u91cf\u8868\u793a, \u5b83\u5305\u542bCBOW\u548cskipgram\u4e24\u79cd\u8bad\u7ec3\u6a21\u5f0f. \u5b66\u4e60\u4e86CBOW(Continuous bag of words)\u6a21\u5f0f: \u7ed9\u5b9a\u4e00\u6bb5\u7528\u4e8e\u8bad\u7ec3\u7684\u6587\u672c\u8bed\u6599, \u518d\u9009\u5b9a\u67d0\u6bb5\u957f\u5ea6(\u7a97\u53e3)\u4f5c\u4e3a\u7814\u7a76\u5bf9\u8c61, \u4f7f\u7528\u4e0a\u4e0b\u6587\u8bcd\u6c47\u9884\u6d4b\u76ee\u6807\u8bcd\u6c47. \u5b66\u4e60\u4e86CBOW\u6a21\u5f0f\u4e0b\u7684word2vec\u8fc7\u7a0b\u8bf4\u660e: \u5047\u8bbe\u6211\u4eec\u7ed9\u5b9a\u7684\u8bad\u7ec3\u8bed\u6599\u53ea\u6709\u4e00\u53e5\u8bdd: Hope can set you free (\u613f\u4f60\u81ea\u7531\u6210\u957f)\uff0c\u7a97\u53e3\u5927\u5c0f\u4e3a3\uff0c\u56e0\u6b64\u6a21\u578b\u7684\u7b2c\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c\u6765\u81eaHope you set\uff0c\u56e0\u4e3a\u662fCBOW\u6a21\u5f0f\uff0c\u6240\u4ee5\u5c06\u4f7f\u7528Hope\u548cset\u4f5c\u4e3a\u8f93\u5165\uff0cyou\u4f5c\u4e3a\u8f93\u51fa\uff0c\u5728\u6a21\u578b\u8bad\u7ec3\u65f6\uff0c Hope\uff0cset\uff0cyou\u7b49\u8bcd\u6c47\u90fd\u4f7f\u7528\u5b83\u4eec\u7684one-hot\u7f16\u7801. \u5982\u56fe\u6240\u793a: \u6bcf\u4e2aone-hot\u7f16\u7801\u7684\u5355\u8bcd\u4e0e\u5404\u81ea\u7684\u53d8\u6362\u77e9\u9635(\u5373\u53c2\u6570\u77e9\u96353x5, \u8fd9\u91cc\u76843\u662f\u6307\u6700\u540e\u5f97\u5230\u7684\u8bcd\u5411\u91cf\u7ef4\u5ea6)\u76f8\u4e58\u4e4b\u540e\u518d\u76f8\u52a0, \u5f97\u5230\u4e0a\u4e0b\u6587\u8868\u793a\u77e9\u9635(3x1). \u63a5\u7740, \u5c06\u4e0a\u4e0b\u6587\u8868\u793a\u77e9\u9635\u4e0e\u53d8\u6362\u77e9\u9635(\u53c2\u6570\u77e9\u96355x3, \u6240\u6709\u7684\u53d8\u6362\u77e9\u9635\u5171\u4eab\u53c2\u6570)\u76f8\u4e58, \u5f97\u52305x1\u7684\u7ed3\u679c\u77e9\u9635, \u5b83\u5c06\u4e0e\u6211\u4eec\u771f\u6b63\u7684\u76ee\u6807\u77e9\u9635\u5373you\u7684one-hot\u7f16\u7801\u77e9\u9635(5x1)\u8fdb\u884c\u635f\u5931\u7684\u8ba1\u7b97, \u7136\u540e\u66f4\u65b0\u7f51\u7edc\u53c2\u6570\u5b8c\u6210\u4e00\u6b21\u6a21\u578b\u8fed\u4ee3. \u6700\u540e\u7a97\u53e3\u6309\u5e8f\u5411\u540e\u79fb\u52a8\uff0c\u91cd\u65b0\u66f4\u65b0\u53c2\u6570\uff0c\u76f4\u5230\u6240\u6709\u8bed\u6599\u88ab\u904d\u5386\u5b8c\u6210\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u53d8\u6362\u77e9\u9635(3x5)\uff0c\u8fd9\u4e2a\u53d8\u6362\u77e9\u9635\u4e0e\u6bcf\u4e2a\u8bcd\u6c47\u7684one-hot\u7f16\u7801(5x1)\u76f8\u4e58\uff0c\u5f97\u5230\u76843x1\u7684\u77e9\u9635\u5c31\u662f\u8be5\u8bcd\u6c47\u7684word2vec\u5f20\u91cf\u8868\u793a. \u5b66\u4e60\u4e86skipgram\u6a21\u5f0f: \u7ed9\u5b9a\u4e00\u6bb5\u7528\u4e8e\u8bad\u7ec3\u7684\u6587\u672c\u8bed\u6599, \u518d\u9009\u5b9a\u67d0\u6bb5\u957f\u5ea6(\u7a97\u53e3)\u4f5c\u4e3a\u7814\u7a76\u5bf9\u8c61, \u4f7f\u7528\u76ee\u6807\u8bcd\u6c47\u9884\u6d4b\u4e0a\u4e0b\u6587\u8bcd\u6c47. \u5b66\u4e60\u4e86skipgram\u6a21\u5f0f\u4e0b\u7684word2vec\u8fc7\u7a0b\u8bf4\u660e: \u5047\u8bbe\u6211\u4eec\u7ed9\u5b9a\u7684\u8bad\u7ec3\u8bed\u6599\u53ea\u6709\u4e00\u53e5\u8bdd: Hope can set you free (\u613f\u4f60\u81ea\u7531\u6210\u957f)\uff0c\u7a97\u53e3\u5927\u5c0f\u4e3a3\uff0c\u56e0\u6b64\u6a21\u578b\u7684\u7b2c\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c\u6765\u81eaHope you set\uff0c\u56e0\u4e3a\u662fskipgram\u6a21\u5f0f\uff0c\u6240\u4ee5\u5c06\u4f7f\u7528you\u4f5c\u4e3a\u8f93\u5165 \uff0chope\u548cset\u4f5c\u4e3a\u8f93\u51fa\uff0c\u5728\u6a21\u578b\u8bad\u7ec3\u65f6\uff0c Hope\uff0cset\uff0cyou\u7b49\u8bcd\u6c47\u90fd\u4f7f\u7528\u5b83\u4eec\u7684one-hot\u7f16\u7801. \u5982\u56fe\u6240\u793a: \u5c06you\u7684one-hot\u7f16\u7801\u4e0e\u53d8\u6362\u77e9\u9635(\u5373\u53c2\u6570\u77e9\u96353x5, \u8fd9\u91cc\u76843\u662f\u6307\u6700\u540e\u5f97\u5230\u7684\u8bcd\u5411\u91cf\u7ef4\u5ea6)\u76f8\u4e58, \u5f97\u5230\u76ee\u6807\u8bcd\u6c47\u8868\u793a\u77e9\u9635(3x1). \u63a5\u7740, \u5c06\u76ee\u6807\u8bcd\u6c47\u8868\u793a\u77e9\u9635\u4e0e\u591a\u4e2a\u53d8\u6362\u77e9\u9635(\u53c2\u6570\u77e9\u96355x3)\u76f8\u4e58, \u5f97\u5230\u591a\u4e2a5x1\u7684\u7ed3\u679c\u77e9\u9635, \u5b83\u5c06\u4e0e\u6211\u4eechope\u548cset\u5bf9\u5e94\u7684one-hot\u7f16\u7801\u77e9\u9635(5x1)\u8fdb\u884c\u635f\u5931\u7684\u8ba1\u7b97, \u7136\u540e\u66f4\u65b0\u7f51\u7edc\u53c2\u6570\u5b8c\u6210\u4e00\u6b21\u6a21 \u578b\u8fed\u4ee3. \u6700\u540e\u7a97\u53e3\u6309\u5e8f\u5411\u540e\u79fb\u52a8\uff0c\u91cd\u65b0\u66f4\u65b0\u53c2\u6570\uff0c\u76f4\u5230\u6240\u6709\u8bed\u6599\u88ab\u904d\u5386\u5b8c\u6210\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u53d8\u6362\u77e9\u9635\u5373\u53c2\u6570\u77e9\u9635(3x5)\uff0c\u8fd9\u4e2a\u53d8\u6362\u77e9\u9635\u4e0e\u6bcf\u4e2a\u8bcd\u6c47\u7684one-hot\u7f16\u7801(5x1)\u76f8\u4e58\uff0c\u5f97\u5230\u76843x1\u7684\u77e9\u9635\u5c31\u662f\u8be5\u8bcd\u6c47\u7684word2vec\u5f20\u91cf\u8868\u793a. \u5b66\u4e60\u4e86\u4f7f\u7528fasttext\u5de5\u5177\u5b9e\u73b0word2vec\u7684\u8bad\u7ec3\u548c\u4f7f\u7528: \u7b2c\u4e00\u6b65: \u83b7\u53d6\u8bad\u7ec3\u6570\u636e \u7b2c\u4e8c\u6b65: \u8bad\u7ec3\u8bcd\u5411\u91cf \u7b2c\u4e09\u6b65: \u6a21\u578b\u8d85\u53c2\u6570\u8bbe\u5b9a \u7b2c\u56db\u6b65: \u6a21\u578b\u6548\u679c\u68c0\u9a8c \u7b2c\u4e94\u6b65: \u6a21\u578b\u7684\u4fdd\u5b58\u4e0e\u91cd\u52a0\u8f7d \u5b66\u4e60\u4e86\u4ec0\u4e48\u662fword embedding(\u8bcd\u5d4c\u5165): \u901a\u8fc7\u4e00\u5b9a\u7684\u65b9\u5f0f\u5c06\u8bcd\u6c47\u6620\u5c04\u5230\u6307\u5b9a\u7ef4\u5ea6(\u4e00\u822c\u662f\u66f4\u9ad8\u7ef4\u5ea6)\u7684\u7a7a\u95f4. \u5e7f\u4e49\u7684word embedding\u5305\u62ec\u6240\u6709\u5bc6\u96c6\u8bcd\u6c47\u5411\u91cf\u7684\u8868\u793a\u65b9\u6cd5\uff0c\u5982\u4e4b\u524d\u5b66\u4e60\u7684word2vec, \u5373\u53ef\u8ba4\u4e3a\u662fword embedding\u7684\u4e00\u79cd. \u72ed\u4e49\u7684word embedding\u662f\u6307\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u52a0\u5165\u7684embedding\u5c42, \u5bf9\u6574\u4e2a\u7f51\u7edc\u8fdb\u884c\u8bad\u7ec3\u7684\u540c\u65f6\u4ea7\u751f\u7684embedding\u77e9\u9635(embedding\u5c42\u7684\u53c2\u6570), \u8fd9\u4e2aembedding\u77e9\u9635\u5c31\u662f\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u6240\u6709\u8f93\u5165\u8bcd\u6c47\u7684\u5411\u91cf\u8868\u793a\u7ec4\u6210\u7684\u77e9\u9635. \u5b66\u4e60\u4e86word embedding\u7684\u53ef\u89c6\u5316\u5206\u6790: \u901a\u8fc7\u4f7f\u7528tensorboard\u53ef\u89c6\u5316\u5d4c\u5165\u7684\u8bcd\u5411\u91cf. \u5728\u7ec8\u7aef\u542f\u52a8tensorboard\u670d\u52a1. \u6d4f\u89c8\u5668\u5c55\u793a\u5e76\u53ef\u4ee5\u4f7f\u7528\u53f3\u4fa7\u8fd1\u90bb\u8bcd\u6c47\u529f\u80fd\u68c0\u9a8c\u6548\u679c.","title":"\u5c0f\u8282\u603b\u7ed3"},{"location":"1.html#14","text":"","title":"1.4 \u6587\u672c\u6570\u636e\u5206\u6790"},{"location":"1.html#_18","text":"\u4e86\u89e3\u6587\u672c\u6570\u636e\u5206\u6790\u7684\u4f5c\u7528. \u638c\u63e1\u5e38\u7528\u7684\u51e0\u79cd\u6587\u672c\u6570\u636e\u5206\u6790\u65b9\u6cd5. \u6587\u672c\u6570\u636e\u5206\u6790\u7684\u4f5c\u7528: \u6587\u672c\u6570\u636e\u5206\u6790\u80fd\u591f\u6709\u6548\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u6570\u636e\u8bed\u6599, \u5feb\u901f\u68c0\u67e5\u51fa\u8bed\u6599\u53ef\u80fd\u5b58\u5728\u7684\u95ee\u9898, \u5e76\u6307\u5bfc\u4e4b\u540e\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4e00\u4e9b\u8d85\u53c2\u6570\u7684\u9009\u62e9. \u5e38\u7528\u7684\u51e0\u79cd\u6587\u672c\u6570\u636e\u5206\u6790\u65b9\u6cd5: \u6807\u7b7e\u6570\u91cf\u5206\u5e03 \u53e5\u5b50\u957f\u5ea6\u5206\u5e03 \u8bcd\u9891\u7edf\u8ba1\u4e0e\u5173\u952e\u8bcd\u8bcd\u4e91 \u8bf4\u660e: \u6211\u4eec\u5c06\u57fa\u4e8e\u771f\u5b9e\u7684\u4e2d\u6587\u9152\u5e97\u8bc4\u8bba\u8bed\u6599\u6765\u8bb2\u89e3\u5e38\u7528\u7684\u51e0\u79cd\u6587\u672c\u6570\u636e\u5206\u6790\u65b9\u6cd5. \u4e2d\u6587\u9152\u5e97\u8bc4\u8bba\u8bed\u6599: \u5c5e\u4e8e\u4e8c\u5206\u7c7b\u7684\u4e2d\u6587\u60c5\u611f\u5206\u6790\u8bed\u6599, \u8be5\u8bed\u6599\u5b58\u653e\u5728\"./cn_data\"\u76ee\u5f55\u4e0b. \u5176\u4e2dtrain.tsv\u4ee3\u8868\u8bad\u7ec3\u96c6, dev.tsv\u4ee3\u8868\u9a8c\u8bc1\u96c6, \u4e8c\u8005\u6570\u636e\u6837\u5f0f\u76f8\u540c. train.tsv\u6570\u636e\u6837\u5f0f: sentence label \u65e9\u9910\u4e0d\u597d,\u670d\u52a1\u4e0d\u5230\u4f4d,\u665a\u9910\u65e0\u897f\u9910,\u65e9\u9910\u665a\u9910\u76f8\u540c,\u623f\u95f4\u6761\u4ef6\u4e0d\u597d,\u9910\u5385\u4e0d\u5206\u5438\u70df\u533a.\u623f\u95f4\u4e0d\u5206\u6709\u65e0\u70df\u623f. 0 \u53bb\u7684\u65f6\u5019 ,\u9152\u5e97\u5927\u5385\u548c\u9910\u5385\u5728\u88c5\u4fee,\u611f\u89c9\u5927\u5385\u6709\u70b9\u6324.\u7531\u4e8e\u9910\u5385\u88c5\u4fee\u672c\u6765\u8be5\u4eab\u53d7\u7684\u65e9\u996d,\u4e5f\u6ca1\u6709\u4eab\u53d7(\u4ed6\u4eec\u662f8\u70b9\u5f00\u59cb\u6bcf\u4e2a\u623f\u95f4\u9001,\u4f46\u662f\u6211\u65f6\u95f4\u6765\u4e0d\u53ca\u4e86)\u4e0d\u8fc7\u524d\u53f0\u670d\u52a1\u5458\u6001\u5ea6\u597d! 1 \u6709\u5f88\u957f\u65f6\u95f4\u6ca1\u6709\u5728\u897f\u85cf\u5927\u53a6\u4f4f\u4e86\uff0c\u4ee5\u524d\u53bb\u5317\u4eac\u5728\u8fd9\u91cc\u4f4f\u7684\u8f83\u591a\u3002\u8fd9\u6b21\u4f4f\u8fdb\u6765\u53d1\u73b0\u6362\u4e86\u6db2\u6676\u7535\u89c6\uff0c\u4f46\u7f51\u7edc\u4e0d\u662f\u5f88\u597d\uff0c\u4ed6\u4eec\u81ea\u5df1\u8bf4\u662f\u6536\u8d39\u7684\u539f\u56e0\u9020\u6210\u7684\u3002\u5176\u5b83\u8fd8\u597d\u3002 1 \u975e\u5e38\u597d\u7684\u5730\u7406\u4f4d\u7f6e\uff0c\u4f4f\u7684\u662f\u8c6a\u534e\u6d77\u666f\u623f\uff0c\u6253\u5f00\u7a97\u6237\u5c31\u53ef\u4ee5\u770b\u89c1\u6808\u6865\u548c\u6d77\u666f\u3002\u8bb0\u5f97\u5f88\u65e9\u4ee5\u524d\u4e5f\u4f4f\u8fc7\uff0c\u73b0\u5728\u91cd\u65b0\u88c5\u4fee\u4e86\u3002\u603b\u7684\u6765\u8bf4\u6bd4\u8f83\u6ee1\u610f\uff0c\u4ee5\u540e\u8fd8\u4f1a\u4f4f 1 \u4ea4\u901a\u5f88\u65b9\u4fbf\uff0c\u623f\u95f4\u5c0f\u4e86\u4e00\u70b9\uff0c\u4f46\u662f\u5e72\u51c0\u6574\u6d01\uff0c\u5f88\u6709\u9999\u6e2f\u7684\u7279\u8272\uff0c\u6027\u4ef7\u6bd4\u8f83\u9ad8\uff0c\u63a8\u8350\u4e00\u4e0b\u54e6 1 \u9152\u5e97\u7684\u88c5\u4fee\u6bd4\u8f83\u9648\u65e7\uff0c\u623f\u95f4\u7684\u9694\u97f3\uff0c\u4e3b\u8981\u662f\u536b\u751f\u95f4\u7684\u9694\u97f3\u975e\u5e38\u5dee\uff0c\u53ea\u80fd\u7b97\u662f\u4e00\u822c\u7684 0 \u9152\u5e97\u6709\u70b9\u65e7\uff0c\u623f\u95f4\u6bd4\u8f83\u5c0f\uff0c\u4f46\u9152\u5e97\u7684\u4f4d\u5b50\u4e0d\u9519\uff0c\u5c31\u5728\u6d77\u8fb9\uff0c\u53ef\u4ee5\u76f4\u63a5\u53bb\u6e38\u6cf3\u30028\u697c\u7684\u6d77\u666f\u6253\u5f00\u7a97\u6237\u5c31\u662f\u6d77\u3002\u5982\u679c\u60f3\u4f4f\u5728\u70ed\u95f9\u7684\u5730\u5e26\uff0c\u8fd9\u91cc\u4e0d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\uff0c\u4e0d\u8fc7\u5a01\u6d77\u57ce\u5e02\u771f\u7684\u6bd4\u8f83\u5c0f\uff0c\u6253\u8f66\u8fd8\u662f\u76f8\u5f53\u4fbf\u5b9c\u7684\u3002\u665a\u4e0a\u9152\u5e97\u95e8\u53e3\u51fa\u79df\u8f66\u6bd4\u8f83\u5c11\u3002 1 \u4f4d\u7f6e\u5f88\u597d\uff0c\u8d70\u8def\u5230\u6587\u5e99\u3001\u6e05\u51c9\u5bfa5\u5206\u949f\u90fd\u7528\u4e0d\u4e86\uff0c\u5468\u8fb9\u516c\u4ea4\u8f66\u5f88\u591a\u5f88\u65b9\u4fbf\uff0c\u5c31\u662f\u51fa\u79df\u8f66\u4e0d\u592a\u7231\u53bb\uff08\u8001\u57ce\u533a\u8def\u7a84\u7231\u5835\u8f66\uff09\uff0c\u56e0\u4e3a\u662f\u8001\u5bbe\u9986\u6240\u4ee5\u8bbe\u65bd\u8981\u9648\u65e7\u4e9b\uff0c 1 \u9152\u5e97\u8bbe\u5907\u4e00\u822c\uff0c\u5957\u623f\u91cc\u5367\u5ba4\u7684\u4e0d\u80fd\u4e0a\u7f51\uff0c\u8981\u5230\u5ba2\u5385\u53bb\u3002 0 train.tsv\u6570\u636e\u6837\u5f0f\u8bf4\u660e: train.tsv\u4e2d\u7684\u6570\u636e\u5185\u5bb9\u5171\u5206\u4e3a2\u5217, \u7b2c\u4e00\u5217\u6570\u636e\u4ee3\u8868\u5177\u6709\u611f\u60c5\u8272\u5f69\u7684\u8bc4\u8bba\u6587\u672c; \u7b2c\u4e8c\u5217\u6570\u636e, 0\u62161, \u4ee3\u8868\u6bcf\u6761\u6587\u672c\u6570\u636e\u662f\u79ef\u6781\u6216\u8005\u6d88\u6781\u7684\u8bc4\u8bba, 0\u4ee3\u8868\u6d88\u6781, 1\u4ee3\u8868\u79ef\u6781.","title":"\u5b66\u4e60\u76ee\u6807"},{"location":"1.html#_19","text":"# \u5bfc\u5165\u5fc5\u5907\u5de5\u5177\u5305 import seaborn as sns import pandas as pd import matplotlib.pyplot as plt # \u8bbe\u7f6e\u663e\u793a\u98ce\u683c plt . style . use ( 'fivethirtyeight' ) # \u5206\u522b\u8bfb\u53d6\u8bad\u7ec3tsv\u548c\u9a8c\u8bc1tsv train_data = pd . read_csv ( \"./cn_data/train.tsv\" , sep = \" \\t \" ) valid_data = pd . read_csv ( \"./cn_data/dev.tsv\" , sep = \" \\t \" ) # \u83b7\u5f97\u8bad\u7ec3\u6570\u636e\u6807\u7b7e\u6570\u91cf\u5206\u5e03 sns . countplot ( \"label\" , data = train_data ) plt . title ( \"train_data\" ) plt . show () # \u83b7\u53d6\u9a8c\u8bc1\u6570\u636e\u6807\u7b7e\u6570\u91cf\u5206\u5e03 sns . countplot ( \"label\" , data = valid_data ) plt . title ( \"valid_data\" ) plt . show () \u8bad\u7ec3\u96c6\u6807\u7b7e\u6570\u91cf\u5206\u5e03: \u9a8c\u8bc1\u96c6\u6807\u7b7e\u6570\u91cf\u5206\u5e03: \u5206\u6790: \u5728\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u8bc4\u4f30\u4e2d, \u6211\u4eec\u4e00\u822c\u4f7f\u7528ACC\u4f5c\u4e3a\u8bc4\u4f30\u6307\u6807, \u82e5\u60f3\u5c06ACC\u7684\u57fa\u7ebf\u5b9a\u4e49\u572850%\u5de6\u53f3, \u5219\u9700\u8981\u6211\u4eec\u7684\u6b63\u8d1f\u6837\u672c\u6bd4\u4f8b\u7ef4\u6301\u57281:1\u5de6\u53f3, \u5426\u5219\u5c31\u8981\u8fdb\u884c\u5fc5\u8981\u7684\u6570\u636e\u589e\u5f3a\u6216\u6570\u636e\u5220\u51cf. \u4e0a\u56fe\u4e2d\u8bad\u7ec3\u548c\u9a8c\u8bc1\u96c6\u6b63\u8d1f\u6837\u672c\u90fd\u7a0d\u6709\u4e0d\u5747\u8861, \u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u6570\u636e\u589e\u5f3a.","title":"\u83b7\u5f97\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u7684\u6807\u7b7e\u6570\u91cf\u5206\u5e03"},{"location":"1.html#_20","text":"# \u5728\u8bad\u7ec3\u6570\u636e\u4e2d\u6dfb\u52a0\u65b0\u7684\u53e5\u5b50\u957f\u5ea6\u5217, \u6bcf\u4e2a\u5143\u7d20\u7684\u503c\u90fd\u662f\u5bf9\u5e94\u7684\u53e5\u5b50\u5217\u7684\u957f\u5ea6 train_data [ \"sentence_length\" ] = list ( map ( lambda x : len ( x ), train_data [ \"sentence\" ])) # \u7ed8\u5236\u53e5\u5b50\u957f\u5ea6\u5217\u7684\u6570\u91cf\u5206\u5e03\u56fe sns . countplot ( \"sentence_length\" , data = train_data ) # \u4e3b\u8981\u5173\u6ce8count\u957f\u5ea6\u5206\u5e03\u7684\u7eb5\u5750\u6807, \u4e0d\u9700\u8981\u7ed8\u5236\u6a2a\u5750\u6807, \u6a2a\u5750\u6807\u8303\u56f4\u901a\u8fc7dist\u56fe\u8fdb\u884c\u67e5\u770b plt . xticks ([]) plt . show () # \u7ed8\u5236dist\u957f\u5ea6\u5206\u5e03\u56fe sns . distplot ( train_data [ \"sentence_length\" ]) # \u4e3b\u8981\u5173\u6ce8dist\u957f\u5ea6\u5206\u5e03\u6a2a\u5750\u6807, \u4e0d\u9700\u8981\u7ed8\u5236\u7eb5\u5750\u6807 plt . yticks ([]) plt . show () # \u5728\u9a8c\u8bc1\u6570\u636e\u4e2d\u6dfb\u52a0\u65b0\u7684\u53e5\u5b50\u957f\u5ea6\u5217, \u6bcf\u4e2a\u5143\u7d20\u7684\u503c\u90fd\u662f\u5bf9\u5e94\u7684\u53e5\u5b50\u5217\u7684\u957f\u5ea6 valid_data [ \"sentence_length\" ] = list ( map ( lambda x : len ( x ), valid_data [ \"sentence\" ])) # \u7ed8\u5236\u53e5\u5b50\u957f\u5ea6\u5217\u7684\u6570\u91cf\u5206\u5e03\u56fe sns . countplot ( \"sentence_length\" , data = valid_data ) # \u4e3b\u8981\u5173\u6ce8count\u957f\u5ea6\u5206\u5e03\u7684\u7eb5\u5750\u6807, \u4e0d\u9700\u8981\u7ed8\u5236\u6a2a\u5750\u6807, \u6a2a\u5750\u6807\u8303\u56f4\u901a\u8fc7dist\u56fe\u8fdb\u884c\u67e5\u770b plt . xticks ([]) plt . show () # \u7ed8\u5236dist\u957f\u5ea6\u5206\u5e03\u56fe sns . distplot ( valid_data [ \"sentence_length\" ]) # \u4e3b\u8981\u5173\u6ce8dist\u957f\u5ea6\u5206\u5e03\u6a2a\u5750\u6807, \u4e0d\u9700\u8981\u7ed8\u5236\u7eb5\u5750\u6807 plt . yticks ([]) plt . show () \u8bad\u7ec3\u96c6\u53e5\u5b50\u957f\u5ea6\u5206\u5e03: \u9a8c\u8bc1\u96c6\u53e5\u5b50\u957f\u5ea6\u5206\u5e03: \u5206\u6790: \u901a\u8fc7\u7ed8\u5236\u53e5\u5b50\u957f\u5ea6\u5206\u5e03\u56fe, \u53ef\u4ee5\u5f97\u77e5\u6211\u4eec\u7684\u8bed\u6599\u4e2d\u5927\u90e8\u5206\u53e5\u5b50\u957f\u5ea6\u7684\u5206\u5e03\u8303\u56f4, \u56e0\u4e3a\u6a21\u578b\u7684\u8f93\u5165\u8981\u6c42\u4e3a\u56fa\u5b9a\u5c3a\u5bf8\u7684\u5f20\u91cf\uff0c\u5408\u7406\u7684\u957f\u5ea6\u8303\u56f4\u5bf9\u4e4b\u540e\u8fdb\u884c\u53e5\u5b50\u622a\u65ad\u8865\u9f50(\u89c4\u8303\u957f\u5ea6)\u8d77\u5230\u5173\u952e\u7684\u6307\u5bfc\u4f5c\u7528. \u4e0a\u56fe\u4e2d\u5927\u90e8\u5206\u53e5\u5b50\u957f\u5ea6\u7684\u8303\u56f4\u5927\u81f4\u4e3a20-250\u4e4b\u95f4.","title":"\u83b7\u53d6\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u7684\u53e5\u5b50\u957f\u5ea6\u5206\u5e03"},{"location":"1.html#_21","text":"# \u7ed8\u5236\u8bad\u7ec3\u96c6\u957f\u5ea6\u5206\u5e03\u7684\u6563\u70b9\u56fe sns . stripplot ( y = 'sentence_length' , x = 'label' , data = train_data ) plt . show () # \u7ed8\u5236\u9a8c\u8bc1\u96c6\u957f\u5ea6\u5206\u5e03\u7684\u6563\u70b9\u56fe sns . stripplot ( y = 'sentence_length' , x = 'label' , data = valid_data ) plt . show () \u8bad\u7ec3\u96c6\u4e0a\u6b63\u8d1f\u6837\u672c\u7684\u957f\u5ea6\u6563\u70b9\u5206\u5e03: \u9a8c\u8bc1\u96c6\u4e0a\u6b63\u8d1f\u6837\u672c\u7684\u957f\u5ea6\u6563\u70b9\u5206\u5e03: \u5206\u6790: \u901a\u8fc7\u67e5\u770b\u6b63\u8d1f\u6837\u672c\u957f\u5ea6\u6563\u70b9\u56fe, \u53ef\u4ee5\u6709\u6548\u5b9a\u4f4d\u5f02\u5e38\u70b9\u7684\u51fa\u73b0\u4f4d\u7f6e, \u5e2e\u52a9\u6211\u4eec\u66f4\u51c6\u786e\u8fdb\u884c\u4eba\u5de5\u8bed\u6599\u5ba1\u67e5. \u4e0a\u56fe\u4e2d\u5728\u8bad\u7ec3\u96c6\u6b63\u6837\u672c\u4e2d\u51fa\u73b0\u4e86\u5f02\u5e38\u70b9, \u5b83\u7684\u53e5\u5b50\u957f\u5ea6\u8fd13500\u5de6\u53f3, \u9700\u8981\u6211\u4eec\u4eba\u5de5\u5ba1\u67e5.","title":"\u83b7\u53d6\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u7684\u6b63\u8d1f\u6837\u672c\u957f\u5ea6\u6563\u70b9\u5206\u5e03"},{"location":"1.html#_22","text":"# \u5bfc\u5165jieba\u7528\u4e8e\u5206\u8bcd # \u5bfc\u5165chain\u65b9\u6cd5\u7528\u4e8e\u6241\u5e73\u5316\u5217\u8868 import jieba from itertools import chain # \u8fdb\u884c\u8bad\u7ec3\u96c6\u7684\u53e5\u5b50\u8fdb\u884c\u5206\u8bcd, \u5e76\u7edf\u8ba1\u51fa\u4e0d\u540c\u8bcd\u6c47\u7684\u603b\u6570 train_vocab = set ( chain ( * map ( lambda x : jieba . lcut ( x ), train_data [ \"sentence\" ]))) print ( \"\u8bad\u7ec3\u96c6\u5171\u5305\u542b\u4e0d\u540c\u8bcd\u6c47\u603b\u6570\u4e3a\uff1a\" , len ( train_vocab )) # \u8fdb\u884c\u9a8c\u8bc1\u96c6\u7684\u53e5\u5b50\u8fdb\u884c\u5206\u8bcd, \u5e76\u7edf\u8ba1\u51fa\u4e0d\u540c\u8bcd\u6c47\u7684\u603b\u6570 valid_vocab = set ( chain ( * map ( lambda x : jieba . lcut ( x ), valid_data [ \"sentence\" ]))) print ( \"\u8bad\u7ec3\u96c6\u5171\u5305\u542b\u4e0d\u540c\u8bcd\u6c47\u603b\u6570\u4e3a\uff1a\" , len ( valid_vocab )) \u8f93\u51fa\u6548\u679c: \u8bad\u7ec3\u96c6\u5171\u5305\u542b\u4e0d\u540c\u8bcd\u6c47\u603b\u6570\u4e3a\uff1a 12147 \u8bad\u7ec3\u96c6\u5171\u5305\u542b\u4e0d\u540c\u8bcd\u6c47\u603b\u6570\u4e3a\uff1a 6857","title":"\u83b7\u5f97\u8bad\u7ec3\u96c6\u4e0e\u9a8c\u8bc1\u96c6\u4e0d\u540c\u8bcd\u6c47\u603b\u6570\u7edf\u8ba1"},{"location":"1.html#_23","text":"# \u4f7f\u7528jieba\u4e2d\u7684\u8bcd\u6027\u6807\u6ce8\u529f\u80fd import jieba.posseg as pseg def get_a_list ( text ): \"\"\"\u7528\u4e8e\u83b7\u53d6\u5f62\u5bb9\u8bcd\u5217\u8868\"\"\" # \u4f7f\u7528jieba\u7684\u8bcd\u6027\u6807\u6ce8\u65b9\u6cd5\u5207\u5206\u6587\u672c,\u83b7\u5f97\u5177\u6709\u8bcd\u6027\u5c5e\u6027flag\u548c\u8bcd\u6c47\u5c5e\u6027word\u7684\u5bf9\u8c61, # \u4ece\u800c\u5224\u65adflag\u662f\u5426\u4e3a\u5f62\u5bb9\u8bcd,\u6765\u8fd4\u56de\u5bf9\u5e94\u7684\u8bcd\u6c47 r = [] for g in pseg . lcut ( text ): if g . flag == \"a\" : r . append ( g . word ) return r # \u5bfc\u5165\u7ed8\u5236\u8bcd\u4e91\u7684\u5de5\u5177\u5305 from wordcloud import WordCloud def get_word_cloud ( keywords_list ): # \u5b9e\u4f8b\u5316\u7ed8\u5236\u8bcd\u4e91\u7684\u7c7b, \u5176\u4e2d\u53c2\u6570font_path\u662f\u5b57\u4f53\u8def\u5f84, \u4e3a\u4e86\u80fd\u591f\u663e\u793a\u4e2d\u6587, # max_words\u6307\u8bcd\u4e91\u56fe\u50cf\u6700\u591a\u663e\u793a\u591a\u5c11\u4e2a\u8bcd, background_color\u4e3a\u80cc\u666f\u989c\u8272 wordcloud = WordCloud ( font_path = \"./SimHei.ttf\" , max_words = 100 , background_color = \"white\" ) # \u5c06\u4f20\u5165\u7684\u5217\u8868\u8f6c\u5316\u6210\u8bcd\u4e91\u751f\u6210\u5668\u9700\u8981\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f keywords_string = \" \" . join ( keywords_list ) # \u751f\u6210\u8bcd\u4e91 wordcloud . generate ( keywords_string ) # \u7ed8\u5236\u56fe\u50cf\u5e76\u663e\u793a plt . figure () plt . imshow ( wordcloud , interpolation = \"bilinear\" ) plt . axis ( \"off\" ) plt . show () # \u83b7\u5f97\u8bad\u7ec3\u96c6\u4e0a\u6b63\u6837\u672c p_train_data = train_data [ train_data [ \"label\" ] == 1 ][ \"sentence\" ] # \u5bf9\u6b63\u6837\u672c\u7684\u6bcf\u4e2a\u53e5\u5b50\u7684\u5f62\u5bb9\u8bcd train_p_a_vocab = chain ( * map ( lambda x : get_a_list ( x ), p_train_data )) #print(train_p_n_vocab) # \u83b7\u5f97\u8bad\u7ec3\u96c6\u4e0a\u8d1f\u6837\u672c n_train_data = train_data [ train_data [ \"label\" ] == 0 ][ \"sentence\" ] # \u83b7\u53d6\u8d1f\u6837\u672c\u7684\u6bcf\u4e2a\u53e5\u5b50\u7684\u5f62\u5bb9\u8bcd train_n_a_vocab = chain ( * map ( lambda x : get_a_list ( x ), n_train_data )) # \u8c03\u7528\u7ed8\u5236\u8bcd\u4e91\u51fd\u6570 get_word_cloud ( train_p_a_vocab ) get_word_cloud ( train_n_a_vocab ) \u8bad\u7ec3\u96c6\u6b63\u6837\u672c\u5f62\u5bb9\u8bcd\u8bcd\u4e91: \u8bad\u7ec3\u96c6\u8d1f\u6837\u672c\u5f62\u5bb9\u8bcd\u8bcd\u4e91:","title":"\u83b7\u5f97\u8bad\u7ec3\u96c6\u4e0a\u6b63\u8d1f\u7684\u6837\u672c\u7684\u9ad8\u9891\u5f62\u5bb9\u8bcd\u8bcd\u4e91"},{"location":"1.html#_24","text":"# \u83b7\u5f97\u9a8c\u8bc1\u96c6\u4e0a\u6b63\u6837\u672c p_valid_data = valid_data [ valid_data [ \"label\" ] == 1 ][ \"sentence\" ] # \u5bf9\u6b63\u6837\u672c\u7684\u6bcf\u4e2a\u53e5\u5b50\u7684\u5f62\u5bb9\u8bcd valid_p_a_vocab = chain ( * map ( lambda x : get_a_list ( x ), p_valid_data )) #print(train_p_n_vocab) # \u83b7\u5f97\u9a8c\u8bc1\u96c6\u4e0a\u8d1f\u6837\u672c n_valid_data = valid_data [ valid_data [ \"label\" ] == 0 ][ \"sentence\" ] # \u83b7\u53d6\u8d1f\u6837\u672c\u7684\u6bcf\u4e2a\u53e5\u5b50\u7684\u5f62\u5bb9\u8bcd valid_n_a_vocab = chain ( * map ( lambda x : get_a_list ( x ), n_valid_data )) # \u8c03\u7528\u7ed8\u5236\u8bcd\u4e91\u51fd\u6570 get_word_cloud ( valid_p_a_vocab ) get_word_cloud ( valid_n_a_vocab ) \u9a8c\u8bc1\u96c6\u6b63\u6837\u672c\u5f62\u5bb9\u8bcd\u8bcd\u4e91: \u9a8c\u8bc1\u96c6\u8d1f\u6837\u672c\u5f62\u5bb9\u8bcd\u8bcd\u4e91: \u5206\u6790: \u6839\u636e\u9ad8\u9891\u5f62\u5bb9\u8bcd\u8bcd\u4e91\u663e\u793a, \u6211\u4eec\u53ef\u4ee5\u5bf9\u5f53\u524d\u8bed\u6599\u8d28\u91cf\u8fdb\u884c\u7b80\u5355\u8bc4\u4f30, \u540c\u65f6\u5bf9\u8fdd\u53cd\u8bed\u6599\u6807\u7b7e\u542b\u4e49\u7684\u8bcd\u6c47\u8fdb\u884c\u4eba\u5de5\u5ba1\u67e5\u548c\u4fee\u6b63, \u6765\u4fdd\u8bc1\u7edd\u5927\u591a\u6570\u8bed\u6599\u7b26\u5408\u8bad\u7ec3\u6807\u51c6. \u4e0a\u56fe\u4e2d\u7684\u6b63\u6837\u672c\u5927\u591a\u6570\u662f\u8912\u4e49\u8bcd, \u800c\u8d1f\u6837\u672c\u5927\u591a\u6570\u662f\u8d2c\u4e49\u8bcd, \u57fa\u672c\u7b26\u5408\u8981\u6c42, \u4f46\u662f\u8d1f\u6837\u672c\u8bcd\u4e91\u4e2d\u4e5f\u5b58\u5728\"\u4fbf\u5229\"\u8fd9\u6837\u7684\u8912\u4e49\u8bcd, \u56e0\u6b64\u53ef\u4ee5\u4eba\u5de5\u8fdb\u884c\u5ba1\u67e5.","title":"\u83b7\u5f97\u9a8c\u8bc1\u96c6\u4e0a\u6b63\u8d1f\u7684\u6837\u672c\u7684\u5f62\u5bb9\u8bcd\u8bcd\u4e91"},{"location":"1.html#_25","text":"\u5b66\u4e60\u4e86\u6587\u672c\u6570\u636e\u5206\u6790\u7684\u4f5c\u7528: \u6587\u672c\u6570\u636e\u5206\u6790\u80fd\u591f\u6709\u6548\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u6570\u636e\u8bed\u6599, \u5feb\u901f\u68c0\u67e5\u51fa\u8bed\u6599\u53ef\u80fd\u5b58\u5728\u7684\u95ee\u9898, \u5e76\u6307\u5bfc\u4e4b\u540e\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4e00\u4e9b\u8d85\u53c2\u6570\u7684\u9009\u62e9. \u5b66\u4e60\u4e86\u5e38\u7528\u7684\u51e0\u79cd\u6587\u672c\u6570\u636e\u5206\u6790\u65b9\u6cd5: \u6807\u7b7e\u6570\u91cf\u5206\u5e03 \u53e5\u5b50\u957f\u5ea6\u5206\u5e03 \u8bcd\u9891\u7edf\u8ba1\u4e0e\u5173\u952e\u8bcd\u8bcd\u4e91 \u5b66\u4e60\u4e86\u57fa\u4e8e\u771f\u5b9e\u7684\u4e2d\u6587\u9152\u5e97\u8bc4\u8bba\u8bed\u6599\u8fdb\u884c\u51e0\u79cd\u6587\u672c\u6570\u636e\u5206\u6790\u65b9\u6cd5. \u83b7\u5f97\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u7684\u6807\u7b7e\u6570\u91cf\u5206\u5e03 \u83b7\u53d6\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u7684\u53e5\u5b50\u957f\u5ea6\u5206\u5e03 \u83b7\u53d6\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u7684\u6b63\u8d1f\u6837\u672c\u957f\u5ea6\u6563\u70b9\u5206\u5e03 \u83b7\u5f97\u8bad\u7ec3\u96c6\u4e0e\u9a8c\u8bc1\u96c6\u4e0d\u540c\u8bcd\u6c47\u603b\u6570\u7edf\u8ba1 \u83b7\u5f97\u8bad\u7ec3\u96c6\u4e0a\u6b63\u8d1f\u7684\u6837\u672c\u7684\u9ad8\u9891\u5f62\u5bb9\u8bcd\u8bcd\u4e91","title":"\u5c0f\u8282\u603b\u7ed3"},{"location":"1.html#15","text":"","title":"1.5 \u6587\u672c\u7279\u5f81\u5904\u7406"},{"location":"1.html#_26","text":"\u4e86\u89e3\u6587\u672c\u7279\u5f81\u5904\u7406\u7684\u4f5c\u7528. \u638c\u63e1\u5b9e\u73b0\u5e38\u89c1\u7684\u6587\u672c\u7279\u5f81\u5904\u7406\u7684\u5177\u4f53\u65b9\u6cd5. \u6587\u672c\u7279\u5f81\u5904\u7406\u7684\u4f5c\u7528: \u6587\u672c\u7279\u5f81\u5904\u7406\u5305\u62ec\u4e3a\u8bed\u6599\u6dfb\u52a0\u5177\u6709\u666e\u9002\u6027\u7684\u6587\u672c\u7279\u5f81, \u5982:n-gram\u7279\u5f81, \u4ee5\u53ca\u5bf9\u52a0\u5165\u7279\u5f81\u4e4b\u540e\u7684\u6587\u672c\u8bed\u6599\u8fdb\u884c\u5fc5\u8981\u7684\u5904\u7406, \u5982: \u957f\u5ea6\u89c4\u8303. \u8fd9\u4e9b\u7279\u5f81\u5904\u7406\u5de5\u4f5c\u80fd\u591f\u6709\u6548\u7684\u5c06\u91cd\u8981\u7684\u6587\u672c\u7279\u5f81\u52a0\u5165\u6a21\u578b\u8bad\u7ec3\u4e2d, \u589e\u5f3a\u6a21\u578b\u8bc4\u4f30\u6307\u6807. \u5e38\u89c1\u7684\u6587\u672c\u7279\u5f81\u5904\u7406\u65b9\u6cd5: \u6dfb\u52a0n-gram\u7279\u5f81 \u6587\u672c\u957f\u5ea6\u89c4\u8303","title":"\u5b66\u4e60\u76ee\u6807"},{"location":"1.html#n-gram","text":"\u7ed9\u5b9a\u4e00\u6bb5\u6587\u672c\u5e8f\u5217, \u5176\u4e2dn\u4e2a\u8bcd\u6216\u5b57\u7684\u76f8\u90bb\u5171\u73b0\u7279\u5f81\u5373n-gram\u7279\u5f81, \u5e38\u7528\u7684n-gram\u7279\u5f81\u662fbi-gram\u548ctri-gram\u7279\u5f81, \u5206\u522b\u5bf9\u5e94n\u4e3a2\u548c3. \u4e3e\u4e2a\u6817\u5b50: \u5047\u8bbe\u7ed9\u5b9a\u5206\u8bcd\u5217\u8868: [\"\u662f\u8c01\", \"\u6572\u52a8\", \"\u6211\u5fc3\"] \u5bf9\u5e94\u7684\u6570\u503c\u6620\u5c04\u5217\u8868\u4e3a: [1, 34, 21] \u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u6570\u503c\u6620\u5c04\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57\u662f\u8bcd\u6c47\u7279\u5f81. \u9664\u6b64\u4e4b\u5916, \u6211\u4eec\u8fd8\u53ef\u4ee5\u628a\"\u662f\u8c01\"\u548c\"\u6572\u52a8\"\u4e24\u4e2a\u8bcd\u5171\u540c\u51fa\u73b0\u4e14\u76f8\u90bb\u4e5f\u4f5c\u4e3a\u4e00\u79cd\u7279\u5f81\u52a0\u5165\u5230\u5e8f\u5217\u5217\u8868\u4e2d, \u5047\u8bbe1000\u5c31\u4ee3\u8868\"\u662f\u8c01\"\u548c\"\u6572\u52a8\"\u5171\u540c\u51fa\u73b0\u4e14\u76f8\u90bb \u6b64\u65f6\u6570\u503c\u6620\u5c04\u5217\u8868\u5c31\u53d8\u6210\u4e86\u5305\u542b2-gram\u7279\u5f81\u7684\u7279\u5f81\u5217\u8868: [1, 34, 21, 1000] \u8fd9\u91cc\u7684\"\u662f\u8c01\"\u548c\"\u6572\u52a8\"\u5171\u540c\u51fa\u73b0\u4e14\u76f8\u90bb\u5c31\u662fbi-gram\u7279\u5f81\u4e2d\u7684\u4e00\u4e2a. \"\u6572\u52a8\"\u548c\"\u6211\u5fc3\"\u4e5f\u662f\u5171\u73b0\u4e14\u76f8\u90bb\u7684\u4e24\u4e2a\u8bcd\u6c47, \u56e0\u6b64\u5b83\u4eec\u4e5f\u662fbi-gram\u7279\u5f81. \u5047\u8bbe1001\u4ee3\u8868\"\u6572\u52a8\"\u548c\"\u6211\u5fc3\"\u5171\u540c\u51fa\u73b0\u4e14\u76f8\u90bb \u90a3\u4e48, \u6700\u540e\u539f\u59cb\u7684\u6570\u503c\u6620\u5c04\u5217\u8868 [1, 34, 21] \u6dfb\u52a0\u4e86bi-gram\u7279\u5f81\u4e4b\u540e\u5c31\u53d8\u6210\u4e86 [1, 34, 21, 1000, 1001] \u63d0\u53d6n-gram\u7279\u5f81: # \u4e00\u822cn-gram\u4e2d\u7684n\u53d62\u6216\u80053, \u8fd9\u91cc\u53d62\u4e3a\u4f8b ngram_range = 2 def create_ngram_set ( input_list ): \"\"\" description: \u4ece\u6570\u503c\u5217\u8868\u4e2d\u63d0\u53d6\u6240\u6709\u7684n-gram\u7279\u5f81 :param input_list: \u8f93\u5165\u7684\u6570\u503c\u5217\u8868, \u53ef\u4ee5\u770b\u4f5c\u662f\u8bcd\u6c47\u6620\u5c04\u540e\u7684\u5217\u8868, \u91cc\u9762\u6bcf\u4e2a\u6570\u5b57\u7684\u53d6\u503c\u8303\u56f4\u4e3a[1, 25000] :return: n-gram\u7279\u5f81\u7ec4\u6210\u7684\u96c6\u5408 eg: >>> create_ngram_set([1, 4, 9, 4, 1, 4]) {(4, 9), (4, 1), (1, 4), (9, 4)} \"\"\" return set ( zip ( * [ input_list [ i :] for i in range ( ngram_range )])) \u8c03\u7528: input_list = [1, 3, 2, 1, 5, 3] res = create_ngram_set(input_list) print(res) \u8f93\u51fa\u6548\u679c: # \u8be5\u8f93\u5165\u5217\u8868\u7684\u6240\u6709bi-gram\u7279\u5f81 {(3, 2), (1, 3), (2, 1), (1, 5), (5, 3)}","title":"\u4ec0\u4e48\u662fn-gram\u7279\u5f81"},{"location":"1.html#_27","text":"\u4e00\u822c\u6a21\u578b\u7684\u8f93\u5165\u9700\u8981\u7b49\u5c3a\u5bf8\u5927\u5c0f\u7684\u77e9\u9635, \u56e0\u6b64\u5728\u8fdb\u5165\u6a21\u578b\u524d\u9700\u8981\u5bf9\u6bcf\u6761\u6587\u672c\u6570\u503c\u6620\u5c04\u540e\u7684\u957f\u5ea6\u8fdb\u884c\u89c4\u8303, \u6b64\u65f6\u5c06\u6839\u636e\u53e5\u5b50\u957f\u5ea6\u5206\u5e03\u5206\u6790\u51fa\u8986\u76d6\u7edd\u5927\u591a\u6570\u6587\u672c\u7684\u5408\u7406\u957f\u5ea6, \u5bf9\u8d85\u957f\u6587\u672c\u8fdb\u884c\u622a\u65ad, \u5bf9\u4e0d\u8db3\u6587\u672c\u8fdb\u884c\u8865\u9f50(\u4e00\u822c\u4f7f\u7528\u6570\u5b570), \u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662f\u6587\u672c\u957f\u5ea6\u89c4\u8303. \u6587\u672c\u957f\u5ea6\u89c4\u8303\u7684\u5b9e\u73b0: from keras.preprocessing import sequence # cutlen\u6839\u636e\u6570\u636e\u5206\u6790\u4e2d\u53e5\u5b50\u957f\u5ea6\u5206\u5e03\uff0c\u8986\u76d690%\u5de6\u53f3\u8bed\u6599\u7684\u6700\u77ed\u957f\u5ea6. # \u8fd9\u91cc\u5047\u5b9acutlen\u4e3a10 cutlen = 10 def padding ( x_train ): \"\"\" description: \u5bf9\u8f93\u5165\u6587\u672c\u5f20\u91cf\u8fdb\u884c\u957f\u5ea6\u89c4\u8303 :param x_train: \u6587\u672c\u7684\u5f20\u91cf\u8868\u793a, \u5f62\u5982: [[1, 32, 32, 61], [2, 54, 21, 7, 19]] :return: \u8fdb\u884c\u622a\u65ad\u8865\u9f50\u540e\u7684\u6587\u672c\u5f20\u91cf\u8868\u793a \"\"\" # \u4f7f\u7528sequence.pad_sequences\u5373\u53ef\u5b8c\u6210 return sequence . pad_sequences ( x_train , cutlen ) \u8c03\u7528: # \u5047\u5b9ax_train\u91cc\u9762\u6709\u4e24\u6761\u6587\u672c, \u4e00\u6761\u957f\u5ea6\u5927\u4e8e10, \u4e00\u5929\u5c0f\u4e8e10 x_train = [[ 1 , 23 , 5 , 32 , 55 , 63 , 2 , 21 , 78 , 32 , 23 , 1 ], [ 2 , 32 , 1 , 23 , 1 ]] res = padding ( x_train ) print ( res ) \u8f93\u51fa\u6548\u679c: [[ 5 32 55 63 2 21 78 32 23 1] [ 0 0 0 0 0 2 32 1 23 1]]","title":"\u6587\u672c\u957f\u5ea6\u89c4\u8303\u53ca\u5176\u4f5c\u7528"},{"location":"1.html#_28","text":"\u5b66\u4e60\u4e86\u6587\u672c\u7279\u5f81\u5904\u7406\u7684\u4f5c\u7528: \u6587\u672c\u7279\u5f81\u5904\u7406\u5305\u62ec\u4e3a\u8bed\u6599\u6dfb\u52a0\u5177\u6709\u666e\u9002\u6027\u7684\u6587\u672c\u7279\u5f81, \u5982:n-gram\u7279\u5f81, \u4ee5\u53ca\u5bf9\u52a0\u5165\u7279\u5f81\u4e4b\u540e\u7684\u6587\u672c\u8bed\u6599\u8fdb\u884c\u5fc5\u8981\u7684\u5904\u7406, \u5982: \u957f\u5ea6\u89c4\u8303. \u8fd9\u4e9b\u7279\u5f81\u5904\u7406\u5de5\u4f5c\u80fd\u591f\u6709\u6548\u7684\u5c06\u91cd\u8981\u7684\u6587\u672c\u7279\u5f81\u52a0\u5165\u6a21\u578b\u8bad\u7ec3\u4e2d, \u589e\u5f3a\u6a21\u578b\u8bc4\u4f30\u6307\u6807. \u5b66\u4e60\u4e86\u5e38\u89c1\u7684\u6587\u672c\u7279\u5f81\u5904\u7406\u65b9\u6cd5: \u6dfb\u52a0n-gram\u7279\u5f81 \u6587\u672c\u957f\u5ea6\u89c4\u8303 \u5b66\u4e60\u4e86\u4ec0\u4e48\u662fn-gram\u7279\u5f81: \u7ed9\u5b9a\u4e00\u6bb5\u6587\u672c\u5e8f\u5217, \u5176\u4e2dn\u4e2a\u8bcd\u6216\u5b57\u7684\u76f8\u90bb\u5171\u73b0\u7279\u5f81\u5373n-gram\u7279\u5f81, \u5e38\u7528\u7684n-gram\u7279\u5f81\u662fbi-gram\u548ctri-gram\u7279\u5f81, \u5206\u522b\u5bf9\u5e94n\u4e3a2\u548c3. \u5b66\u4e60\u4e86\u63d0\u53d6n-gram\u7279\u5f81\u7684\u51fd\u6570: create_ngram_set \u5b66\u4e60\u4e86\u6587\u672c\u957f\u5ea6\u89c4\u8303\u53ca\u5176\u4f5c\u7528: \u4e00\u822c\u6a21\u578b\u7684\u8f93\u5165\u9700\u8981\u7b49\u5c3a\u5bf8\u5927\u5c0f\u7684\u77e9\u9635, \u56e0\u6b64\u5728\u8fdb\u5165\u6a21\u578b\u524d\u9700\u8981\u5bf9\u6bcf\u6761\u6587\u672c\u6570\u503c\u6620\u5c04\u540e\u7684\u957f\u5ea6\u8fdb\u884c\u89c4\u8303, \u6b64\u65f6\u5c06\u6839\u636e\u53e5\u5b50\u957f\u5ea6\u5206\u5e03\u5206\u6790\u51fa\u8986\u76d6\u7edd\u5927\u591a\u6570\u6587\u672c\u7684\u5408\u7406\u957f\u5ea6, \u5bf9\u8d85\u957f\u6587\u672c\u8fdb\u884c\u622a\u65ad, \u5bf9\u4e0d\u8db3\u6587\u672c\u8fdb\u884c\u8865\u9f50(\u4e00\u822c\u4f7f\u7528\u6570\u5b570), \u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662f\u6587\u672c\u957f\u5ea6\u89c4\u8303. \u5b66\u4e60\u4e86\u6587\u672c\u957f\u5ea6\u89c4\u8303\u7684\u5b9e\u73b0\u51fd\u6570: padding","title":"\u5c0f\u8282\u603b\u7ed3"},{"location":"1.html#16","text":"","title":"1.6 \u6587\u672c\u6570\u636e\u589e\u5f3a"},{"location":"1.html#_29","text":"\u4e86\u89e3\u6587\u672c\u6570\u636e\u589e\u5f3a\u7684\u4f5c\u7528. \u638c\u63e1\u5b9e\u73b0\u5e38\u89c1\u7684\u6587\u672c\u6570\u636e\u589e\u5f3a\u7684\u5177\u4f53\u65b9\u6cd5. \u5e38\u89c1\u7684\u6587\u672c\u6570\u636e\u589e\u5f3a\u65b9\u6cd5: \u56de\u8bd1\u6570\u636e\u589e\u5f3a\u6cd5","title":"\u5b66\u4e60\u76ee\u6807"},{"location":"1.html#_30","text":"\u56de\u8bd1\u6570\u636e\u589e\u5f3a\u76ee\u524d\u662f\u6587\u672c\u6570\u636e\u589e\u5f3a\u65b9\u9762\u6548\u679c\u8f83\u597d\u7684\u589e\u5f3a\u65b9\u6cd5, \u4e00\u822c\u57fa\u4e8egoogle\u7ffb\u8bd1\u63a5\u53e3, \u5c06\u6587\u672c\u6570\u636e\u7ffb\u8bd1\u6210\u53e6\u5916\u4e00\u79cd\u8bed\u8a00(\u4e00\u822c\u9009\u62e9\u5c0f\u8bed\u79cd),\u4e4b\u540e\u518d\u7ffb\u8bd1\u56de\u539f\u8bed\u8a00, \u5373\u53ef\u8ba4\u4e3a\u5f97\u5230\u4e0e\u4e0e\u539f\u8bed\u6599\u540c\u6807\u7b7e\u7684\u65b0\u8bed\u6599, \u65b0\u8bed\u6599\u52a0\u5165\u5230\u539f\u6570\u636e\u96c6\u4e2d\u5373\u53ef\u8ba4\u4e3a\u662f\u5bf9\u539f\u6570\u636e\u96c6\u6570\u636e\u589e\u5f3a. \u56de\u8bd1\u6570\u636e\u589e\u5f3a\u4f18\u52bf: \u64cd\u4f5c\u7b80\u4fbf, \u83b7\u5f97\u65b0\u8bed\u6599\u8d28\u91cf\u9ad8. \u56de\u8bd1\u6570\u636e\u589e\u5f3a\u5b58\u5728\u7684\u95ee\u9898: \u5728\u77ed\u6587\u672c\u56de\u8bd1\u8fc7\u7a0b\u4e2d, \u65b0\u8bed\u6599\u4e0e\u539f\u8bed\u6599\u53ef\u80fd\u5b58\u5728\u5f88\u9ad8\u7684\u91cd\u590d\u7387, \u5e76\u4e0d\u80fd\u6709\u6548\u589e\u5927\u6837\u672c\u7684\u7279\u5f81\u7a7a\u95f4. \u9ad8\u91cd\u590d\u7387\u89e3\u51b3\u529e\u6cd5: \u8fdb\u884c\u8fde\u7eed\u7684\u591a\u8bed\u8a00\u7ffb\u8bd1, \u5982: \u4e2d\u6587-->\u97e9\u6587-->\u65e5\u8bed-->\u82f1\u6587-->\u4e2d\u6587, \u6839\u636e\u7ecf\u9a8c, \u6700\u591a\u53ea\u91c7\u75283\u6b21\u8fde\u7eed\u7ffb\u8bd1, \u66f4\u591a\u7684\u7ffb\u8bd1\u6b21\u6570\u5c06\u4ea7\u751f\u6548\u7387\u4f4e\u4e0b, \u8bed\u4e49\u5931\u771f\u7b49\u95ee\u9898. \u56de\u8bd1\u6570\u636e\u589e\u5f3a\u5b9e\u73b0: # pip install google_trans_new\u5b89\u88c5\u4e00\u4e0b \u8c37\u6b4c\u63a5\u53e3\u53d1\u751f\u4e86\u53d8\u5316 from google_trans_new import google_translator # \u5b9e\u4f8b\u5316\u7ffb\u8bd1\u5bf9\u8c61 translator = google_translator () # \u8fdb\u884c\u7b2c\u4e00\u6b21\u6279\u91cf\u7ffb\u8bd1, \u7ffb\u8bd1\u76ee\u6807\u662f\u97e9\u8bed text = [ \"\u8fd9\u5bb6\u4ef7\u683c\u5f88\u4fbf\u5b9c\" , \"\u8fd9\u5bb6\u4ef7\u683c\u5f88\u4fbf\u5b9c\" ] ko_res = translator . translate ( text , lang_src = \"zh-cn\" , lang_tgt = \"ko\" ) # \u6253\u5370\u7ed3\u679c print ( \"\u4e2d\u95f4\u7ffb\u8bd1\u7ed3\u679c:\" ) print ( ko_res ) # # \u6700\u540e\u5728\u7ffb\u8bd1\u56de\u4e2d\u6587, \u5b8c\u6210\u56de\u8bd1\u5168\u90e8\u6d41\u7a0b cn_res = translator . translate ( ko_res , lang_src = 'ko' , lang_tgt = 'zh-cn' ) print ( \"\u56de\u8bd1\u5f97\u5230\u7684\u589e\u5f3a\u6570\u636e:\" ) print ( cn_res ) \u8f93\u51fa\u6548\u679c: \u4e2d\u95f4\u7ffb\u8bd1\u7ed3\u679c: [\"\uc774 \uac00\uaca9\uc740 \ub9e4\uc6b0 \uc2fc \", \"\uc774 \uac00\uaca9\uc740 \ub9e4\uc6b0 \uc2fc\"] \u56de\u8bd1\u5f97\u5230\u7684\u589e\u5f3a\u6570\u636e: [\"\u8fd9\u4e2a\u4ef7\u683c\u975e\u5e38\u4fbf\u5b9c\"\uff0c\"\u8fd9\u4e2a\u4ef7\u683c\u5f88\u4fbf\u5b9c\"] \u6ce8\u610f \u5982\u679c\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u62a5:json.decoder.JSONDecodeError: Extra data: line 1 column 1962 (char 1961)\u9519\u8bef \u4fee\u6539\u5730\u5740\u53c2\u8003:https://github.com/lushan88a/google_trans_new/issues/36 \u6e29\u99a8\u63d0\u793a: \u7ffb\u8bd1\u63a5\u53e3\u5728\u5b9e\u65f6\u8fdb\u884c\u4fee\u6539, \u6240\u4ee5\u4ee5\u540e\u5728\u4f7f\u7528\u7b2c\u4e09\u65b9\u63a5\u53e3\u7684\u65f6\u5019\u8981\u5173\u6ce8\u63a5\u53e3\u662f\u5426\u53d1\u751f\u53d8\u5316","title":"\u4ec0\u4e48\u662f\u56de\u8bd1\u6570\u636e\u589e\u5f3a\u6cd5"},{"location":"1.html#_31","text":"\u5b66\u4e60\u4e86\u5e38\u89c1\u7684\u6587\u672c\u6570\u636e\u589e\u5f3a\u65b9\u6cd5: \u56de\u8bd1\u6570\u636e\u589e\u5f3a\u6cd5 \u5b66\u4e60\u4e86\u4ec0\u4e48\u662f\u56de\u8bd1\u6570\u636e\u589e\u5f3a\u6cd5: \u56de\u8bd1\u6570\u636e\u589e\u5f3a\u76ee\u524d\u662f\u6587\u672c\u6570\u636e\u589e\u5f3a\u65b9\u9762\u6548\u679c\u8f83\u597d\u7684\u589e\u5f3a\u65b9\u6cd5, \u4e00\u822c\u57fa\u4e8egoogle\u7ffb\u8bd1\u63a5\u53e3, \u5c06\u6587\u672c\u6570\u636e\u7ffb\u8bd1\u6210\u53e6\u5916\u4e00\u79cd\u8bed\u8a00(\u4e00\u822c\u9009\u62e9\u5c0f\u8bed\u79cd),\u4e4b\u540e\u518d\u7ffb\u8bd1\u56de\u539f\u8bed\u8a00, \u5373\u53ef\u8ba4\u4e3a\u5f97\u5230\u4e0e\u4e0e\u539f\u8bed\u6599\u540c\u6807\u7b7e\u7684\u65b0\u8bed\u6599, \u65b0\u8bed\u6599\u52a0\u5165\u5230\u539f\u6570\u636e\u96c6\u4e2d\u5373\u53ef\u8ba4\u4e3a\u662f\u5bf9\u539f\u6570\u636e\u96c6\u6570\u636e\u589e\u5f3a. \u5b66\u4e60\u4e86\u56de\u8bd1\u6570\u636e\u589e\u5f3a\u4f18\u52bf: \u64cd\u4f5c\u7b80\u4fbf, \u83b7\u5f97\u65b0\u8bed\u6599\u8d28\u91cf\u9ad8. \u5b66\u4e60\u4e86\u56de\u8bd1\u6570\u636e\u589e\u5f3a\u5b58\u5728\u7684\u95ee\u9898: \u5728\u77ed\u6587\u672c\u56de\u8bd1\u8fc7\u7a0b\u4e2d, \u65b0\u8bed\u6599\u4e0e\u539f\u8bed\u6599\u53ef\u80fd\u5b58\u5728\u5f88\u9ad8\u7684\u91cd\u590d\u7387, \u5e76\u4e0d\u80fd\u6709\u6548\u589e\u5927\u6837\u672c\u7684\u7279\u5f81\u7a7a\u95f4. \u5b66\u4e60\u4e86\u9ad8\u91cd\u590d\u7387\u89e3\u51b3\u529e\u6cd5: \u8fdb\u884c\u8fde\u7eed\u7684\u591a\u8bed\u8a00\u7ffb\u8bd1, \u5982: \u4e2d\u6587-->\u97e9\u6587-->\u65e5\u8bed-->\u82f1\u6587-->\u4e2d\u6587, \u6839\u636e\u7ecf\u9a8c, \u6700\u591a\u53ea\u91c7\u75283\u6b21\u8fde\u7eed\u7ffb\u8bd1, \u66f4\u591a\u7684\u7ffb\u8bd1\u6b21\u6570\u5c06\u4ea7\u751f\u6548\u7387\u4f4e\u4e0b, \u8bed\u4e49\u5931\u771f\u7b49\u95ee\u9898. \u5b66\u4e60\u4e86\u56de\u8bd1\u6570\u636e\u589e\u5f3a\u5b9e\u73b0.","title":"\u5c0f\u8282\u603b\u7ed3"},{"location":"1.html#_32","text":"jieba\u8bcd\u6027\u5bf9\u7167\u8868: - a \u5f62\u5bb9\u8bcd - ad \u526f\u5f62\u8bcd - ag \u5f62\u5bb9\u8bcd\u6027\u8bed\u7d20 - an \u540d\u5f62\u8bcd - b \u533a\u522b\u8bcd - c \u8fde\u8bcd - d \u526f\u8bcd - df - dg \u526f\u8bed\u7d20 - e \u53f9\u8bcd - f \u65b9\u4f4d\u8bcd - g \u8bed\u7d20 - h \u524d\u63a5\u6210\u5206 - i \u6210\u8bed - j \u7b80\u79f0\u7565\u79f0 - k \u540e\u63a5\u6210\u5206 - l \u4e60\u7528\u8bed - m \u6570\u8bcd - mg - mq \u6570\u91cf\u8bcd - n \u540d\u8bcd - ng \u540d\u8bcd\u6027\u8bed\u7d20 - nr \u4eba\u540d - nrfg - nrt - ns \u5730\u540d - nt \u673a\u6784\u56e2\u4f53\u540d - nz \u5176\u4ed6\u4e13\u540d - o \u62df\u58f0\u8bcd - p \u4ecb\u8bcd - q \u91cf\u8bcd - r \u4ee3\u8bcd - rg \u4ee3\u8bcd\u6027\u8bed\u7d20 - rr \u4eba\u79f0\u4ee3\u8bcd - rz \u6307\u793a\u4ee3\u8bcd - s \u5904\u6240\u8bcd - t \u65f6\u95f4\u8bcd - tg \u65f6\u8bed\u7d20 - u \u52a9\u8bcd - ud \u7ed3\u6784\u52a9\u8bcd \u5f97 - ug \u65f6\u6001\u52a9\u8bcd - uj \u7ed3\u6784\u52a9\u8bcd \u7684 - ul \u65f6\u6001\u52a9\u8bcd \u4e86 - uv \u7ed3\u6784\u52a9\u8bcd \u5730 - uz \u65f6\u6001\u52a9\u8bcd \u7740 - v \u52a8\u8bcd - vd \u526f\u52a8\u8bcd - vg \u52a8\u8bcd\u6027\u8bed\u7d20 - vi \u4e0d\u53ca\u7269\u52a8\u8bcd - vn \u540d\u52a8\u8bcd - vq - x \u975e\u8bed\u7d20\u8bcd - y \u8bed\u6c14\u8bcd - z \u72b6\u6001\u8bcd - zg hanlp\u8bcd\u6027\u5bf9\u7167\u8868: \u3010Proper Noun\u2014\u2014NR\uff0c\u4e13\u6709\u540d\u8bcd\u3011 \u3010Temporal Noun\u2014\u2014NT\uff0c\u65f6\u95f4\u540d\u8bcd\u3011 \u3010Localizer\u2014\u2014LC\uff0c\u5b9a\u4f4d\u8bcd\u3011\u5982\u201c\u5185\u201d\uff0c\u201c\u5de6\u53f3\u201d \u3010Pronoun\u2014\u2014PN\uff0c\u4ee3\u8bcd\u3011 \u3010Determiner\u2014\u2014DT\uff0c\u9650\u5b9a\u8bcd\u3011\u5982\u201c\u8fd9\u201d\uff0c\u201c\u5168\u4f53\u201d \u3010Cardinal Number\u2014\u2014CD\uff0c\u91cf\u8bcd\u3011 \u3010Ordinal Number\u2014\u2014OD\uff0c\u6b21\u5e8f\u8bcd\u3011\u5982\u201c\u7b2c\u4e09\u5341\u4e00\u201d \u3010Measure word\u2014\u2014M\uff0c\u5355\u4f4d\u8bcd\u3011\u5982\u201c\u676f\u201d \u3010Verb\uff1aVA\uff0cVC\uff0cVE\uff0cVV\uff0c\u52a8\u8bcd\u3011 \u3010Adverb\uff1aAD\uff0c\u526f\u8bcd\u3011\u5982\u201c\u8fd1\u201d\uff0c\u201c\u6781\u5927\u201d \u3010Preposition\uff1aP\uff0c\u4ecb\u8bcd\u3011\u5982\u201c\u968f\u7740\u201d \u3010Subordinating conjunctions\uff1aCS\uff0c\u4ece\u5c5e\u8fde\u8bcd\u3011 \u3010Conjuctions\uff1aCC\uff0c\u8fde\u8bcd\u3011\u5982\u201c\u548c\u201d \u3010Particle\uff1aDEC,DEG,DEV,DER,AS,SP,ETC,MSP\uff0c\u5c0f\u54c1\u8bcd\u3011\u5982\u201c\u7684\u8bdd\u201d \u3010Interjections\uff1aIJ\uff0c\u611f\u53f9\u8bcd\u3011\u5982\u201c\u54c8\u201d \u3010onomatopoeia\uff1aON\uff0c\u62df\u58f0\u8bcd\u3011\u5982\u201c\u54d7\u5566\u5566\u201d \u3010Other Noun-modifier\uff1aJJ\u3011\u5982\u201c\u53d1\u7a3f/JJ \u65f6\u95f4/NN\u201d \u3010Punctuation\uff1aPU\uff0c\u6807\u70b9\u7b26\u53f7\u3011 \u3010Foreign word\uff1aFW\uff0c\u5916\u56fd\u8bcd\u8bed\u3011\u5982\u201cOK","title":"\u9644\u5f55"},{"location":"2.html","text":"2.1 \u65b0\u95fb\u4e3b\u9898\u5206\u7c7b\u4efb\u52a1 \u5b66\u4e60\u76ee\u6807 \u4e86\u89e3\u6709\u5173\u65b0\u95fb\u4e3b\u9898\u5206\u7c7b\u548c\u6709\u5173\u6570\u636e. \u638c\u63e1\u4f7f\u7528\u6d45\u5c42\u7f51\u7edc\u6784\u5efa\u65b0\u95fb\u4e3b\u9898\u5206\u7c7b\u5668\u7684\u5b9e\u73b0\u8fc7\u7a0b. \u5173\u4e8e\u65b0\u95fb\u4e3b\u9898\u5206\u7c7b\u4efb\u52a1: \u4ee5\u4e00\u6bb5\u65b0\u95fb\u62a5\u9053\u4e2d\u7684\u6587\u672c\u63cf\u8ff0\u5185\u5bb9\u4e3a\u8f93\u5165, \u4f7f\u7528\u6a21\u578b\u5e2e\u52a9\u6211\u4eec\u5224\u65ad\u5b83\u6700\u6709\u53ef\u80fd\u5c5e\u4e8e\u54ea\u4e00\u79cd\u7c7b\u578b\u7684\u65b0\u95fb, \u8fd9\u662f\u5178\u578b\u7684\u6587\u672c\u5206\u7c7b\u95ee\u9898, \u6211\u4eec\u8fd9\u91cc\u5047\u5b9a\u6bcf\u79cd\u7c7b\u578b\u662f\u4e92\u65a5\u7684, \u5373\u6587\u672c\u63cf\u8ff0\u6709\u4e14\u53ea\u6709\u4e00\u79cd\u7c7b\u578b. \u65b0\u95fb\u4e3b\u9898\u5206\u7c7b\u6570\u636e: \u901a\u8fc7torchtext\u83b7\u53d6\u6570\u636e: # \u5bfc\u5165\u76f8\u5173\u7684torch\u5de5\u5177\u5305 import torch import torchtext # \u5bfc\u5165torchtext.datasets\u4e2d\u7684\u6587\u672c\u5206\u7c7b\u4efb\u52a1 from torchtext.datasets import text_classification import os # \u5b9a\u4e49\u6570\u636e\u4e0b\u8f7d\u8def\u5f84, \u5f53\u524d\u8def\u5f84\u7684data\u6587\u4ef6\u5939 load_data_path = \"./data\" # \u5982\u679c\u4e0d\u5b58\u5728\u8be5\u8def\u5f84, \u5219\u521b\u5efa\u8fd9\u4e2a\u8def\u5f84 if not os . path . isdir ( load_data_path ): os . mkdir ( load_data_path ) # \u9009\u53d6torchtext\u4e2d\u7684\u6587\u672c\u5206\u7c7b\u6570\u636e\u96c6'AG_NEWS'\u5373\u65b0\u95fb\u4e3b\u9898\u5206\u7c7b\u6570\u636e, \u4fdd\u5b58\u5728\u6307\u5b9a\u76ee\u5f55\u4e0b # \u5e76\u5c06\u6570\u503c\u6620\u5c04\u540e\u7684\u8bad\u7ec3\u548c\u9a8c\u8bc1\u6570\u636e\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d train_dataset , test_dataset = text_classification . DATASETS [ 'AG_NEWS' ]( root = load_data_path ) \u6570\u636e\u6587\u4ef6\u9884\u89c8: - data/ - ag_news_csv.tar.gz - ag_news_csv/ classes.txt readme.txt test.csv train.csv \u6587\u4ef6\u8bf4\u660e: train.csv\u8868\u793a\u8bad\u7ec3\u6570\u636e, \u517112\u4e07\u6761\u6570\u636e; test.csv\u8868\u793a\u9a8c\u8bc1\u6570\u636e, \u51717600\u6761\u6570\u636e; classes.txt\u662f\u6807\u7b7e(\u65b0\u95fb\u4e3b\u9898)\u542b\u4e49\u6587\u4ef6, \u91cc\u9762\u6709\u56db\u4e2a\u5355\u8bcd'World', 'Sports', 'Business', 'Sci/Tech'\u4ee3\u8868\u65b0\u95fb\u7684\u56db\u4e2a\u4e3b\u9898, readme.txt\u662f\u8be5\u6570\u636e\u96c6\u7684\u82f1\u6587\u8bf4\u660e. train.csv\u9884\u89c8: \"3\",\"Wall St. Bears Claw Back Into the Black (Reuters)\",\"Reuters - Short-sellers, Wall Street's dwindling\\band of ultra-cynics, are seeing green again.\" \"3\",\"Carlyle Looks Toward Commercial Aerospace (Reuters)\",\"Reuters - Private investment firm Carlyle Group,\\which has a reputation for making well-timed and occasionally\\controversial plays in the defense industry, has quietly placed\\its bets on another part of the market.\" \"3\",\"Oil and Economy Cloud Stocks' Outlook (Reuters)\",\"Reuters - Soaring crude prices plus worries\\about the economy and the outlook for earnings are expected to\\hang over the stock market next week during the depth of the\\summer doldrums.\" \"3\",\"Iraq Halts Oil Exports from Main Southern Pipeline (Reuters)\",\"Reuters - Authorities have halted oil export\\flows from the main pipeline in southern Iraq after\\intelligence showed a rebel militia could strike\\infrastructure, an oil official said on Saturday.\" \"3\",\"Oil prices soar to all-time record, posing new menace to US economy (AFP)\",\"AFP - Tearaway world oil prices, toppling records and straining wallets, present a new economic menace barely three months before the US presidential elections.\" \"3\",\"Stocks End Up, But Near Year Lows (Reuters)\",\"Reuters - Stocks ended slightly higher on Friday\\but stayed near lows for the year as oil prices surged past #36;46\\a barrel, offsetting a positive outlook from computer maker\\Dell Inc. (DELL.O)\" \"3\",\"Money Funds Fell in Latest Week (AP)\",\"AP - Assets of the nation's retail money market mutual funds fell by #36;1.17 billion in the latest week to #36;849.98 trillion, the Investment Company Institute said Thursday.\" \"3\",\"Fed minutes show dissent over inflation (USATODAY.com)\",\"USATODAY.com - Retail sales bounced back a bit in July, and new claims for jobless benefits fell last week, the government said Thursday, indicating the economy is improving from a midsummer slump.\" \"3\",\"Safety Net (Forbes.com)\",\"Forbes.com - After earning a PH.D. in Sociology, Danny Bazil Riley started to work as the general manager at a commercial real estate firm at an annual base salary of #36;70,000. Soon after, a financial planner stopped by his desk to drop off brochures about insurance benefits available through his employer. But, at 32, \"\"buying insurance was the furthest thing from my mind,\"\" says Riley.\" \"3\",\"Wall St. Bears Claw Back Into the Black\",\" NEW YORK (Reuters) - Short-sellers, Wall Street's dwindling band of ultra-cynics, are seeing green again.\" \u6587\u4ef6\u5185\u5bb9\u8bf4\u660e: train.csv\u5171\u75313\u5217\u7ec4\u6210, \u4f7f\u7528','\u8fdb\u884c\u5206\u9694, \u5206\u522b\u4ee3\u8868: \u6807\u7b7e, \u65b0\u95fb\u6807\u9898, \u65b0\u95fb\u7b80\u8ff0; \u5176\u4e2d\u6807\u7b7e\u7528\"1\", \"2\", \"3\", \"4\"\u8868\u793a, \u4f9d\u6b21\u5bf9\u5e94classes\u4e2d\u7684\u5185\u5bb9. test.csv\u4e0etrain.csv\u5185\u5bb9\u683c\u5f0f\u4e0e\u542b\u4e49\u76f8\u540c. \u6574\u4e2a\u6848\u4f8b\u7684\u5b9e\u73b0\u53ef\u5206\u4e3a\u4ee5\u4e0b\u4e94\u4e2a\u6b65\u9aa4 \u7b2c\u4e00\u6b65: \u6784\u5efa\u5e26\u6709Embedding\u5c42\u7684\u6587\u672c\u5206\u7c7b\u6a21\u578b. \u7b2c\u4e8c\u6b65: \u5bf9\u6570\u636e\u8fdb\u884cbatch\u5904\u7406. \u7b2c\u4e09\u6b65: \u6784\u5efa\u8bad\u7ec3\u4e0e\u9a8c\u8bc1\u51fd\u6570. \u7b2c\u56db\u6b65: \u8fdb\u884c\u6a21\u578b\u8bad\u7ec3\u548c\u9a8c\u8bc1. \u7b2c\u4e94\u6b65: \u67e5\u770bembedding\u5c42\u5d4c\u5165\u7684\u8bcd\u5411\u91cf. \u7b2c\u4e00\u6b65: \u6784\u5efa\u5e26\u6709Embedding\u5c42\u7684\u6587\u672c\u5206\u7c7b\u6a21\u578b # \u5bfc\u5165\u5fc5\u5907\u7684torch\u6a21\u578b\u6784\u5efa\u5de5\u5177 import torch.nn as nn import torch.nn.functional as F # \u6307\u5b9aBATCH_SIZE\u7684\u5927\u5c0f BATCH_SIZE = 16 # \u8fdb\u884c\u53ef\u7528\u8bbe\u5907\u68c0\u6d4b, \u6709GPU\u7684\u8bdd\u5c06\u4f18\u5148\u4f7f\u7528GPU device = torch . device ( \"cuda\" if torch . cuda . is_available () else \"cpu\" ) class TextSentiment ( nn . Module ): \"\"\"\u6587\u672c\u5206\u7c7b\u6a21\u578b\"\"\" def __init__ ( self , vocab_size , embed_dim , num_class ): \"\"\" description: \u7c7b\u7684\u521d\u59cb\u5316\u51fd\u6570 :param vocab_size: \u6574\u4e2a\u8bed\u6599\u5305\u542b\u7684\u4e0d\u540c\u8bcd\u6c47\u603b\u6570 :param embed_dim: \u6307\u5b9a\u8bcd\u5d4c\u5165\u7684\u7ef4\u5ea6 :param num_class: \u6587\u672c\u5206\u7c7b\u7684\u7c7b\u522b\u603b\u6570 \"\"\" super () . __init__ () # \u5b9e\u4f8b\u5316embedding\u5c42, sparse=True\u4ee3\u8868\u6bcf\u6b21\u5bf9\u8be5\u5c42\u6c42\u89e3\u68af\u5ea6\u65f6, \u53ea\u66f4\u65b0\u90e8\u5206\u6743\u91cd. self . embedding = nn . Embedding ( vocab_size , embed_dim , sparse = True ) # \u5b9e\u4f8b\u5316\u7ebf\u6027\u5c42, \u53c2\u6570\u5206\u522b\u662fembed_dim\u548cnum_class. self . fc = nn . Linear ( embed_dim , num_class ) # \u4e3a\u5404\u5c42\u521d\u59cb\u5316\u6743\u91cd self . init_weights () def init_weights ( self ): \"\"\"\u521d\u59cb\u5316\u6743\u91cd\u51fd\u6570\"\"\" # \u6307\u5b9a\u521d\u59cb\u6743\u91cd\u7684\u53d6\u503c\u8303\u56f4\u6570 initrange = 0.5 # \u5404\u5c42\u7684\u6743\u91cd\u53c2\u6570\u90fd\u662f\u521d\u59cb\u5316\u4e3a\u5747\u5300\u5206\u5e03 self . embedding . weight . data . uniform_ ( - initrange , initrange ) self . fc . weight . data . uniform_ ( - initrange , initrange ) # \u504f\u7f6e\u521d\u59cb\u5316\u4e3a0 self . fc . bias . data . zero_ () def forward ( self , text ): \"\"\" :param text: \u6587\u672c\u6570\u503c\u6620\u5c04\u540e\u7684\u7ed3\u679c :return: \u4e0e\u7c7b\u522b\u6570\u5c3a\u5bf8\u76f8\u540c\u7684\u5f20\u91cf, \u7528\u4ee5\u5224\u65ad\u6587\u672c\u7c7b\u522b \"\"\" # \u83b7\u5f97embedding\u7684\u7ed3\u679cembedded # >>> embedded.shape # (m, 32) \u5176\u4e2dm\u662fBATCH_SIZE\u5927\u5c0f\u7684\u6570\u636e\u4e2d\u8bcd\u6c47\u603b\u6570 embedded = self . embedding ( text ) # \u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u5c06(m, 32)\u8f6c\u5316\u6210(BATCH_SIZE, 32) # \u4ee5\u4fbf\u901a\u8fc7fc\u5c42\u540e\u80fd\u8ba1\u7b97\u76f8\u5e94\u7684\u635f\u5931 # \u9996\u5148, \u6211\u4eec\u5df2\u77e5m\u7684\u503c\u8fdc\u5927\u4e8eBATCH_SIZE=16, # \u7528m\u6574\u9664BATCH_SIZE, \u83b7\u5f97m\u4e2d\u5171\u5305\u542bc\u4e2aBATCH_SIZE c = embedded . size ( 0 ) // BATCH_SIZE # \u4e4b\u540e\u518d\u4eceembedded\u4e2d\u53d6c*BATCH_SIZE\u4e2a\u5411\u91cf\u5f97\u5230\u65b0\u7684embedded # \u8fd9\u4e2a\u65b0\u7684embedded\u4e2d\u7684\u5411\u91cf\u4e2a\u6570\u53ef\u4ee5\u6574\u9664BATCH_SIZE embedded = embedded [: BATCH_SIZE * c ] # \u56e0\u4e3a\u6211\u4eec\u60f3\u5229\u7528\u5e73\u5747\u6c60\u5316\u7684\u65b9\u6cd5\u6c42embedded\u4e2d\u6307\u5b9a\u884c\u6570\u7684\u5217\u7684\u5e73\u5747\u6570, # \u4f46\u5e73\u5747\u6c60\u5316\u65b9\u6cd5\u662f\u4f5c\u7528\u5728\u884c\u4e0a\u7684, \u5e76\u4e14\u9700\u89813\u7ef4\u8f93\u5165 # \u56e0\u6b64\u6211\u4eec\u5bf9\u65b0\u7684embedded\u8fdb\u884c\u8f6c\u7f6e\u5e76\u62d3\u5c55\u7ef4\u5ea6 embedded = embedded . transpose ( 1 , 0 ) . unsqueeze ( 0 ) # \u7136\u540e\u5c31\u662f\u8c03\u7528\u5e73\u5747\u6c60\u5316\u7684\u65b9\u6cd5, \u5e76\u4e14\u6838\u7684\u5927\u5c0f\u4e3ac # \u5373\u53d6\u6bcfc\u7684\u5143\u7d20\u8ba1\u7b97\u4e00\u6b21\u5747\u503c\u4f5c\u4e3a\u7ed3\u679c embedded = F . avg_pool1d ( embedded , kernel_size = c ) # \u6700\u540e\uff0c\u8fd8\u9700\u8981\u51cf\u53bb\u65b0\u589e\u7684\u7ef4\u5ea6, \u7136\u540e\u8f6c\u7f6e\u56de\u53bb\u8f93\u9001\u7ed9fc\u5c42 return self . fc ( embedded [ 0 ] . transpose ( 1 , 0 )) \u5b9e\u4f8b\u5316\u6a21\u578b: # \u83b7\u5f97\u6574\u4e2a\u8bed\u6599\u5305\u542b\u7684\u4e0d\u540c\u8bcd\u6c47\u603b\u6570 VOCAB_SIZE = len ( train_dataset . get_vocab ()) # \u6307\u5b9a\u8bcd\u5d4c\u5165\u7ef4\u5ea6 EMBED_DIM = 32 # \u83b7\u5f97\u7c7b\u522b\u603b\u6570 NUN_CLASS = len ( train_dataset . get_labels ()) # \u5b9e\u4f8b\u5316\u6a21\u578b model = TextSentiment ( VOCAB_SIZE , EMBED_DIM , NUN_CLASS ) . to ( device ) \u7b2c\u4e8c\u6b65: \u5bf9\u6570\u636e\u8fdb\u884cbatch\u5904\u7406 def generate_batch ( batch ): \"\"\" description: \u751f\u6210batch\u6570\u636e\u51fd\u6570 :param batch: \u7531\u6837\u672c\u5f20\u91cf\u548c\u5bf9\u5e94\u6807\u7b7e\u7684\u5143\u7ec4\u7ec4\u6210\u7684batch_size\u5927\u5c0f\u7684\u5217\u8868 \u5f62\u5982: [(label1, sample1), (lable2, sample2), ..., (labelN, sampleN)] return: \u6837\u672c\u5f20\u91cf\u548c\u6807\u7b7e\u5404\u81ea\u7684\u5217\u8868\u5f62\u5f0f(\u5f20\u91cf) \u5f62\u5982: text = tensor([sample1, sample2, ..., sampleN]) label = tensor([label1, label2, ..., labelN]) \"\"\" # \u4ecebatch\u4e2d\u83b7\u5f97\u6807\u7b7e\u5f20\u91cf label = torch . tensor ([ entry [ 0 ] for entry in batch ]) # \u4ecebatch\u4e2d\u83b7\u5f97\u6837\u672c\u5f20\u91cf text = [ entry [ 1 ] for entry in batch ] text = torch . cat ( text ) # \u8fd4\u56de\u7ed3\u679c return text , label \u8c03\u7528: # \u5047\u8bbe\u4e00\u4e2a\u8f93\u5165: batch = [( 1 , torch . tensor ([ 3 , 23 , 2 , 8 ])), ( 0 , torch . tensor ([ 3 , 45 , 21 , 6 ]))] res = generate_batch ( batch ) print ( res ) \u8f93\u51fa\u6548\u679c: # \u5bf9\u5e94\u8f93\u5165\u7684\u4e24\u6761\u6570\u636e\u8fdb\u884c\u4e86\u76f8\u5e94\u7684\u62fc\u63a5 (tensor([ 3, 23, 2, 8, 3, 45, 21, 6]), tensor([1, 0])) \u7b2c\u4e09\u6b65: \u6784\u5efa\u8bad\u7ec3\u4e0e\u9a8c\u8bc1\u51fd\u6570 # \u5bfc\u5165torch\u4e2d\u7684\u6570\u636e\u52a0\u8f7d\u5668\u65b9\u6cd5 from torch.utils.data import DataLoader def train ( train_data ): \"\"\"\u6a21\u578b\u8bad\u7ec3\u51fd\u6570\"\"\" # \u521d\u59cb\u5316\u8bad\u7ec3\u635f\u5931\u548c\u51c6\u786e\u7387\u4e3a0 train_loss = 0 train_acc = 0 # \u4f7f\u7528\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210BATCH_SIZE\u5927\u5c0f\u7684\u6570\u636e\u8fdb\u884c\u6279\u6b21\u8bad\u7ec3 # data\u5c31\u662fN\u591a\u4e2agenerate_batch\u51fd\u6570\u5904\u7406\u540e\u7684BATCH_SIZE\u5927\u5c0f\u7684\u6570\u636e\u751f\u6210\u5668 data = DataLoader ( train_data , batch_size = BATCH_SIZE , shuffle = True , collate_fn = generate_batch ) # \u5bf9data\u8fdb\u884c\u5faa\u73af\u904d\u5386, \u4f7f\u7528\u6bcf\u4e2abatch\u7684\u6570\u636e\u8fdb\u884c\u53c2\u6570\u66f4\u65b0 for i , ( text , cls ) in enumerate ( data ): # \u8bbe\u7f6e\u4f18\u5316\u5668\u521d\u59cb\u68af\u5ea6\u4e3a0 optimizer . zero_grad () # \u6a21\u578b\u8f93\u5165\u4e00\u4e2a\u6279\u6b21\u6570\u636e, \u83b7\u5f97\u8f93\u51fa output = model ( text ) # \u6839\u636e\u771f\u5b9e\u6807\u7b7e\u4e0e\u6a21\u578b\u8f93\u51fa\u8ba1\u7b97\u635f\u5931 loss = criterion ( output , cls ) # \u5c06\u8be5\u6279\u6b21\u7684\u635f\u5931\u52a0\u5230\u603b\u635f\u5931\u4e2d train_loss += loss . item () # \u8bef\u5dee\u53cd\u5411\u4f20\u64ad loss . backward () # \u53c2\u6570\u8fdb\u884c\u66f4\u65b0 optimizer . step () # \u5c06\u8be5\u6279\u6b21\u7684\u51c6\u786e\u7387\u52a0\u5230\u603b\u51c6\u786e\u7387\u4e2d train_acc += ( output . argmax ( 1 ) == cls ) . sum () . item () # \u8c03\u6574\u4f18\u5316\u5668\u5b66\u4e60\u7387 scheduler . step () # \u8fd4\u56de\u672c\u8f6e\u8bad\u7ec3\u7684\u5e73\u5747\u635f\u5931\u548c\u5e73\u5747\u51c6\u786e\u7387 return train_loss / len ( train_data ), train_acc / len ( train_data ) def valid ( valid_data ): \"\"\"\u6a21\u578b\u9a8c\u8bc1\u51fd\u6570\"\"\" # \u521d\u59cb\u5316\u9a8c\u8bc1\u635f\u5931\u548c\u51c6\u786e\u7387\u4e3a0 loss = 0 acc = 0 # \u548c\u8bad\u7ec3\u76f8\u540c, \u4f7f\u7528DataLoader\u83b7\u5f97\u8bad\u7ec3\u6570\u636e\u751f\u6210\u5668 data = DataLoader ( valid_data , batch_size = BATCH_SIZE , collate_fn = generate_batch ) # \u6309\u6279\u6b21\u53d6\u51fa\u6570\u636e\u9a8c\u8bc1 for text , cls in data : # \u9a8c\u8bc1\u9636\u6bb5, \u4e0d\u518d\u6c42\u89e3\u68af\u5ea6 with torch . no_grad (): # \u4f7f\u7528\u6a21\u578b\u83b7\u5f97\u8f93\u51fa output = model ( text ) # \u8ba1\u7b97\u635f\u5931 loss = criterion ( output , cls ) # \u5c06\u635f\u5931\u548c\u51c6\u786e\u7387\u52a0\u5230\u603b\u635f\u5931\u548c\u51c6\u786e\u7387\u4e2d loss += loss . item () acc += ( output . argmax ( 1 ) == cls ) . sum () . item () # \u8fd4\u56de\u672c\u8f6e\u9a8c\u8bc1\u7684\u5e73\u5747\u635f\u5931\u548c\u5e73\u5747\u51c6\u786e\u7387 return loss / len ( valid_data ), acc / len ( valid_data ) \u7b2c\u56db\u6b65: \u8fdb\u884c\u6a21\u578b\u8bad\u7ec3\u548c\u9a8c\u8bc1 # \u5bfc\u5165\u65f6\u95f4\u5de5\u5177\u5305 import time # \u5bfc\u5165\u6570\u636e\u968f\u673a\u5212\u5206\u65b9\u6cd5\u5de5\u5177 from torch.utils.data.dataset import random_split # \u6307\u5b9a\u8bad\u7ec3\u8f6e\u6570 N_EPOCHS = 10 # \u5b9a\u4e49\u521d\u59cb\u7684\u9a8c\u8bc1\u635f\u5931 min_valid_loss = float ( 'inf' ) # \u9009\u62e9\u635f\u5931\u51fd\u6570, \u8fd9\u91cc\u9009\u62e9\u9884\u5b9a\u4e49\u7684\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570 criterion = torch . nn . CrossEntropyLoss () . to ( device ) # \u9009\u62e9\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u4f18\u5316\u5668 optimizer = torch . optim . SGD ( model . parameters (), lr = 4.0 ) # \u9009\u62e9\u4f18\u5316\u5668\u6b65\u957f\u8c03\u8282\u65b9\u6cd5StepLR, \u7528\u6765\u8870\u51cf\u5b66\u4e60\u7387 scheduler = torch . optim . lr_scheduler . StepLR ( optimizer , 1 , gamma = 0.9 ) # \u4ecetrain_dataset\u53d6\u51fa0.95\u4f5c\u4e3a\u8bad\u7ec3\u96c6, \u5148\u53d6\u5176\u957f\u5ea6 train_len = int ( len ( train_dataset ) * 0.95 ) # \u7136\u540e\u4f7f\u7528random_split\u8fdb\u884c\u4e71\u5e8f\u5212\u5206, \u5f97\u5230\u5bf9\u5e94\u7684\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6 sub_train_ , sub_valid_ = \\ random_split ( train_dataset , [ train_len , len ( train_dataset ) - train_len ]) # \u5f00\u59cb\u6bcf\u4e00\u8f6e\u8bad\u7ec3 for epoch in range ( N_EPOCHS ): # \u8bb0\u5f55\u6982\u8bba\u8bad\u7ec3\u7684\u5f00\u59cb\u65f6\u95f4 start_time = time . time () # \u8c03\u7528train\u548cvalid\u51fd\u6570\u5f97\u5230\u8bad\u7ec3\u548c\u9a8c\u8bc1\u7684\u5e73\u5747\u635f\u5931, \u5e73\u5747\u51c6\u786e\u7387 train_loss , train_acc = train ( sub_train_ ) valid_loss , valid_acc = valid ( sub_valid_ ) # \u8ba1\u7b97\u8bad\u7ec3\u548c\u9a8c\u8bc1\u7684\u603b\u8017\u65f6(\u79d2) secs = int ( time . time () - start_time ) # \u7528\u5206\u949f\u548c\u79d2\u8868\u793a mins = secs / 60 secs = secs % 60 # \u6253\u5370\u8bad\u7ec3\u548c\u9a8c\u8bc1\u8017\u65f6\uff0c\u5e73\u5747\u635f\u5931\uff0c\u5e73\u5747\u51c6\u786e\u7387 print ( 'Epoch: %d ' % ( epoch + 1 ), \" | time in %d minutes, %d seconds\" % ( mins , secs )) print ( f ' \\t Loss: { train_loss : .4f } (train) \\t | \\t Acc: { train_acc * 100 : .1f } %(train)' ) print ( f ' \\t Loss: { valid_loss : .4f } (valid) \\t | \\t Acc: { valid_acc * 100 : .1f } %(valid)' ) \u8f93\u51fa\u6548\u679c: 120000lines [00:06, 17834.17lines/s] 120000lines [00:11, 10071.77lines/s] 7600lines [00:00, 10432.95lines/s] Epoch: 1 | time in 0 minutes, 36 seconds Loss: 0.0592(train) | Acc: 63.9%(train) Loss: 0.0005(valid) | Acc: 69.2%(valid) Epoch: 2 | time in 0 minutes, 37 seconds Loss: 0.0507(train) | Acc: 71.3%(train) Loss: 0.0005(valid) | Acc: 70.7%(valid) Epoch: 3 | time in 0 minutes, 36 seconds Loss: 0.0484(train) | Acc: 72.8%(train) Loss: 0.0005(valid) | Acc: 71.4%(valid) Epoch: 4 | time in 0 minutes, 36 seconds Loss: 0.0474(train) | Acc: 73.4%(train) Loss: 0.0004(valid) | Acc: 72.0%(valid) Epoch: 5 | time in 0 minutes, 36 seconds Loss: 0.0455(train) | Acc: 74.8%(train) Loss: 0.0004(valid) | Acc: 72.5%(valid) Epoch: 6 | time in 0 minutes, 36 seconds Loss: 0.0451(train) | Acc: 74.9%(train) Loss: 0.0004(valid) | Acc: 72.3%(valid) Epoch: 7 | time in 0 minutes, 36 seconds Loss: 0.0446(train) | Acc: 75.3%(train) Loss: 0.0004(valid) | Acc: 72.0%(valid) Epoch: 8 | time in 0 minutes, 36 seconds Loss: 0.0437(train) | Acc: 75.9%(train) Loss: 0.0004(valid) | Acc: 71.4%(valid) Epoch: 9 | time in 0 minutes, 36 seconds Loss: 0.0431(train) | Acc: 76.2%(train) Loss: 0.0004(valid) | Acc: 72.7%(valid) Epoch: 10 | time in 0 minutes, 36 seconds Loss: 0.0426(train) | Acc: 76.6%(train) Loss: 0.0004(valid) | Acc: 72.6%(valid) \u7b2c\u4e94\u6b65: \u67e5\u770bembedding\u5c42\u5d4c\u5165\u7684\u8bcd\u5411\u91cf # \u6253\u5370\u4ece\u6a21\u578b\u7684\u72b6\u6001\u5b57\u5178\u4e2d\u83b7\u5f97\u7684Embedding\u77e9\u9635 print ( model . state_dict ()[ 'embedding.weight' ]) \u8f93\u51fa\u6548\u679c: tensor([[ 0.4401, -0.4177, -0.4161, ..., 0.2497, -0.4657, -0.1861], [-0.2574, -0.1952, 0.1443, ..., -0.4687, -0.0742, 0.2606], [-0.1926, -0.1153, -0.0167, ..., -0.0954, 0.0134, -0.0632], ..., [-0.0780, -0.2331, -0.3656, ..., -0.1899, 0.4083, 0.3002], [-0.0696, 0.4396, -0.1350, ..., 0.1019, 0.2792, -0.4749], [-0.2978, 0.1872, -0.1994, ..., 0.3435, 0.4729, -0.2608]]) \u5c0f\u8282\u603b\u7ed3 \u5b66\u4e60\u4e86\u5173\u4e8e\u65b0\u95fb\u4e3b\u9898\u5206\u7c7b\u4efb\u52a1: \u4ee5\u4e00\u6bb5\u65b0\u95fb\u62a5\u9053\u4e2d\u7684\u6587\u672c\u63cf\u8ff0\u5185\u5bb9\u4e3a\u8f93\u5165, \u4f7f\u7528\u6a21\u578b\u5e2e\u52a9\u6211\u4eec\u5224\u65ad\u5b83\u6700\u6709\u53ef\u80fd\u5c5e\u4e8e\u54ea\u4e00\u79cd\u7c7b\u578b\u7684\u65b0\u95fb, \u8fd9\u662f\u5178\u578b\u7684\u6587\u672c\u5206\u7c7b\u95ee\u9898, \u6211\u4eec\u8fd9\u91cc\u5047\u5b9a\u6bcf\u79cd\u7c7b\u578b\u662f\u4e92\u65a5\u7684, \u5373\u6587\u672c\u63cf\u8ff0\u6709\u4e14\u53ea\u6709\u4e00\u79cd\u7c7b\u578b. \u5b66\u4e60\u4e86\u65b0\u95fb\u4e3b\u9898\u5206\u7c7b\u6570\u636e\u7684\u83b7\u53d6\u548c\u6837\u5f0f. \u5b66\u4e60\u4e86\u6574\u4e2a\u6848\u4f8b\u7684\u5b9e\u73b0\u7684\u4e94\u4e2a\u6b65\u9aa4: \u7b2c\u4e00\u6b65: \u6784\u5efa\u5e26\u6709Embedding\u5c42\u7684\u6587\u672c\u5206\u7c7b\u6a21\u578b. \u7b2c\u4e8c\u6b65: \u5bf9\u6570\u636e\u8fdb\u884cbatch\u5904\u7406. \u7b2c\u4e09\u6b65: \u6784\u5efa\u8bad\u7ec3\u4e0e\u9a8c\u8bc1\u51fd\u6570. \u7b2c\u56db\u6b65: \u8fdb\u884c\u6a21\u578b\u8bad\u7ec3\u548c\u9a8c\u8bc1. \u7b2c\u4e94\u6b65: \u67e5\u770bembedding\u5c42\u5d4c\u5165\u7684\u8bcd\u5411\u91cf.","title":"2"},{"location":"2.html#21","text":"","title":"2.1 \u65b0\u95fb\u4e3b\u9898\u5206\u7c7b\u4efb\u52a1"},{"location":"2.html#_1","text":"\u4e86\u89e3\u6709\u5173\u65b0\u95fb\u4e3b\u9898\u5206\u7c7b\u548c\u6709\u5173\u6570\u636e. \u638c\u63e1\u4f7f\u7528\u6d45\u5c42\u7f51\u7edc\u6784\u5efa\u65b0\u95fb\u4e3b\u9898\u5206\u7c7b\u5668\u7684\u5b9e\u73b0\u8fc7\u7a0b. \u5173\u4e8e\u65b0\u95fb\u4e3b\u9898\u5206\u7c7b\u4efb\u52a1: \u4ee5\u4e00\u6bb5\u65b0\u95fb\u62a5\u9053\u4e2d\u7684\u6587\u672c\u63cf\u8ff0\u5185\u5bb9\u4e3a\u8f93\u5165, \u4f7f\u7528\u6a21\u578b\u5e2e\u52a9\u6211\u4eec\u5224\u65ad\u5b83\u6700\u6709\u53ef\u80fd\u5c5e\u4e8e\u54ea\u4e00\u79cd\u7c7b\u578b\u7684\u65b0\u95fb, \u8fd9\u662f\u5178\u578b\u7684\u6587\u672c\u5206\u7c7b\u95ee\u9898, \u6211\u4eec\u8fd9\u91cc\u5047\u5b9a\u6bcf\u79cd\u7c7b\u578b\u662f\u4e92\u65a5\u7684, \u5373\u6587\u672c\u63cf\u8ff0\u6709\u4e14\u53ea\u6709\u4e00\u79cd\u7c7b\u578b. \u65b0\u95fb\u4e3b\u9898\u5206\u7c7b\u6570\u636e: \u901a\u8fc7torchtext\u83b7\u53d6\u6570\u636e: # \u5bfc\u5165\u76f8\u5173\u7684torch\u5de5\u5177\u5305 import torch import torchtext # \u5bfc\u5165torchtext.datasets\u4e2d\u7684\u6587\u672c\u5206\u7c7b\u4efb\u52a1 from torchtext.datasets import text_classification import os # \u5b9a\u4e49\u6570\u636e\u4e0b\u8f7d\u8def\u5f84, \u5f53\u524d\u8def\u5f84\u7684data\u6587\u4ef6\u5939 load_data_path = \"./data\" # \u5982\u679c\u4e0d\u5b58\u5728\u8be5\u8def\u5f84, \u5219\u521b\u5efa\u8fd9\u4e2a\u8def\u5f84 if not os . path . isdir ( load_data_path ): os . mkdir ( load_data_path ) # \u9009\u53d6torchtext\u4e2d\u7684\u6587\u672c\u5206\u7c7b\u6570\u636e\u96c6'AG_NEWS'\u5373\u65b0\u95fb\u4e3b\u9898\u5206\u7c7b\u6570\u636e, \u4fdd\u5b58\u5728\u6307\u5b9a\u76ee\u5f55\u4e0b # \u5e76\u5c06\u6570\u503c\u6620\u5c04\u540e\u7684\u8bad\u7ec3\u548c\u9a8c\u8bc1\u6570\u636e\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d train_dataset , test_dataset = text_classification . DATASETS [ 'AG_NEWS' ]( root = load_data_path ) \u6570\u636e\u6587\u4ef6\u9884\u89c8: - data/ - ag_news_csv.tar.gz - ag_news_csv/ classes.txt readme.txt test.csv train.csv \u6587\u4ef6\u8bf4\u660e: train.csv\u8868\u793a\u8bad\u7ec3\u6570\u636e, \u517112\u4e07\u6761\u6570\u636e; test.csv\u8868\u793a\u9a8c\u8bc1\u6570\u636e, \u51717600\u6761\u6570\u636e; classes.txt\u662f\u6807\u7b7e(\u65b0\u95fb\u4e3b\u9898)\u542b\u4e49\u6587\u4ef6, \u91cc\u9762\u6709\u56db\u4e2a\u5355\u8bcd'World', 'Sports', 'Business', 'Sci/Tech'\u4ee3\u8868\u65b0\u95fb\u7684\u56db\u4e2a\u4e3b\u9898, readme.txt\u662f\u8be5\u6570\u636e\u96c6\u7684\u82f1\u6587\u8bf4\u660e. train.csv\u9884\u89c8: \"3\",\"Wall St. Bears Claw Back Into the Black (Reuters)\",\"Reuters - Short-sellers, Wall Street's dwindling\\band of ultra-cynics, are seeing green again.\" \"3\",\"Carlyle Looks Toward Commercial Aerospace (Reuters)\",\"Reuters - Private investment firm Carlyle Group,\\which has a reputation for making well-timed and occasionally\\controversial plays in the defense industry, has quietly placed\\its bets on another part of the market.\" \"3\",\"Oil and Economy Cloud Stocks' Outlook (Reuters)\",\"Reuters - Soaring crude prices plus worries\\about the economy and the outlook for earnings are expected to\\hang over the stock market next week during the depth of the\\summer doldrums.\" \"3\",\"Iraq Halts Oil Exports from Main Southern Pipeline (Reuters)\",\"Reuters - Authorities have halted oil export\\flows from the main pipeline in southern Iraq after\\intelligence showed a rebel militia could strike\\infrastructure, an oil official said on Saturday.\" \"3\",\"Oil prices soar to all-time record, posing new menace to US economy (AFP)\",\"AFP - Tearaway world oil prices, toppling records and straining wallets, present a new economic menace barely three months before the US presidential elections.\" \"3\",\"Stocks End Up, But Near Year Lows (Reuters)\",\"Reuters - Stocks ended slightly higher on Friday\\but stayed near lows for the year as oil prices surged past #36;46\\a barrel, offsetting a positive outlook from computer maker\\Dell Inc. (DELL.O)\" \"3\",\"Money Funds Fell in Latest Week (AP)\",\"AP - Assets of the nation's retail money market mutual funds fell by #36;1.17 billion in the latest week to #36;849.98 trillion, the Investment Company Institute said Thursday.\" \"3\",\"Fed minutes show dissent over inflation (USATODAY.com)\",\"USATODAY.com - Retail sales bounced back a bit in July, and new claims for jobless benefits fell last week, the government said Thursday, indicating the economy is improving from a midsummer slump.\" \"3\",\"Safety Net (Forbes.com)\",\"Forbes.com - After earning a PH.D. in Sociology, Danny Bazil Riley started to work as the general manager at a commercial real estate firm at an annual base salary of #36;70,000. Soon after, a financial planner stopped by his desk to drop off brochures about insurance benefits available through his employer. But, at 32, \"\"buying insurance was the furthest thing from my mind,\"\" says Riley.\" \"3\",\"Wall St. Bears Claw Back Into the Black\",\" NEW YORK (Reuters) - Short-sellers, Wall Street's dwindling band of ultra-cynics, are seeing green again.\" \u6587\u4ef6\u5185\u5bb9\u8bf4\u660e: train.csv\u5171\u75313\u5217\u7ec4\u6210, \u4f7f\u7528','\u8fdb\u884c\u5206\u9694, \u5206\u522b\u4ee3\u8868: \u6807\u7b7e, \u65b0\u95fb\u6807\u9898, \u65b0\u95fb\u7b80\u8ff0; \u5176\u4e2d\u6807\u7b7e\u7528\"1\", \"2\", \"3\", \"4\"\u8868\u793a, \u4f9d\u6b21\u5bf9\u5e94classes\u4e2d\u7684\u5185\u5bb9. test.csv\u4e0etrain.csv\u5185\u5bb9\u683c\u5f0f\u4e0e\u542b\u4e49\u76f8\u540c.","title":"\u5b66\u4e60\u76ee\u6807"},{"location":"2.html#_2","text":"\u7b2c\u4e00\u6b65: \u6784\u5efa\u5e26\u6709Embedding\u5c42\u7684\u6587\u672c\u5206\u7c7b\u6a21\u578b. \u7b2c\u4e8c\u6b65: \u5bf9\u6570\u636e\u8fdb\u884cbatch\u5904\u7406. \u7b2c\u4e09\u6b65: \u6784\u5efa\u8bad\u7ec3\u4e0e\u9a8c\u8bc1\u51fd\u6570. \u7b2c\u56db\u6b65: \u8fdb\u884c\u6a21\u578b\u8bad\u7ec3\u548c\u9a8c\u8bc1. \u7b2c\u4e94\u6b65: \u67e5\u770bembedding\u5c42\u5d4c\u5165\u7684\u8bcd\u5411\u91cf.","title":"\u6574\u4e2a\u6848\u4f8b\u7684\u5b9e\u73b0\u53ef\u5206\u4e3a\u4ee5\u4e0b\u4e94\u4e2a\u6b65\u9aa4"},{"location":"2.html#embedding","text":"# \u5bfc\u5165\u5fc5\u5907\u7684torch\u6a21\u578b\u6784\u5efa\u5de5\u5177 import torch.nn as nn import torch.nn.functional as F # \u6307\u5b9aBATCH_SIZE\u7684\u5927\u5c0f BATCH_SIZE = 16 # \u8fdb\u884c\u53ef\u7528\u8bbe\u5907\u68c0\u6d4b, \u6709GPU\u7684\u8bdd\u5c06\u4f18\u5148\u4f7f\u7528GPU device = torch . device ( \"cuda\" if torch . cuda . is_available () else \"cpu\" ) class TextSentiment ( nn . Module ): \"\"\"\u6587\u672c\u5206\u7c7b\u6a21\u578b\"\"\" def __init__ ( self , vocab_size , embed_dim , num_class ): \"\"\" description: \u7c7b\u7684\u521d\u59cb\u5316\u51fd\u6570 :param vocab_size: \u6574\u4e2a\u8bed\u6599\u5305\u542b\u7684\u4e0d\u540c\u8bcd\u6c47\u603b\u6570 :param embed_dim: \u6307\u5b9a\u8bcd\u5d4c\u5165\u7684\u7ef4\u5ea6 :param num_class: \u6587\u672c\u5206\u7c7b\u7684\u7c7b\u522b\u603b\u6570 \"\"\" super () . __init__ () # \u5b9e\u4f8b\u5316embedding\u5c42, sparse=True\u4ee3\u8868\u6bcf\u6b21\u5bf9\u8be5\u5c42\u6c42\u89e3\u68af\u5ea6\u65f6, \u53ea\u66f4\u65b0\u90e8\u5206\u6743\u91cd. self . embedding = nn . Embedding ( vocab_size , embed_dim , sparse = True ) # \u5b9e\u4f8b\u5316\u7ebf\u6027\u5c42, \u53c2\u6570\u5206\u522b\u662fembed_dim\u548cnum_class. self . fc = nn . Linear ( embed_dim , num_class ) # \u4e3a\u5404\u5c42\u521d\u59cb\u5316\u6743\u91cd self . init_weights () def init_weights ( self ): \"\"\"\u521d\u59cb\u5316\u6743\u91cd\u51fd\u6570\"\"\" # \u6307\u5b9a\u521d\u59cb\u6743\u91cd\u7684\u53d6\u503c\u8303\u56f4\u6570 initrange = 0.5 # \u5404\u5c42\u7684\u6743\u91cd\u53c2\u6570\u90fd\u662f\u521d\u59cb\u5316\u4e3a\u5747\u5300\u5206\u5e03 self . embedding . weight . data . uniform_ ( - initrange , initrange ) self . fc . weight . data . uniform_ ( - initrange , initrange ) # \u504f\u7f6e\u521d\u59cb\u5316\u4e3a0 self . fc . bias . data . zero_ () def forward ( self , text ): \"\"\" :param text: \u6587\u672c\u6570\u503c\u6620\u5c04\u540e\u7684\u7ed3\u679c :return: \u4e0e\u7c7b\u522b\u6570\u5c3a\u5bf8\u76f8\u540c\u7684\u5f20\u91cf, \u7528\u4ee5\u5224\u65ad\u6587\u672c\u7c7b\u522b \"\"\" # \u83b7\u5f97embedding\u7684\u7ed3\u679cembedded # >>> embedded.shape # (m, 32) \u5176\u4e2dm\u662fBATCH_SIZE\u5927\u5c0f\u7684\u6570\u636e\u4e2d\u8bcd\u6c47\u603b\u6570 embedded = self . embedding ( text ) # \u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u5c06(m, 32)\u8f6c\u5316\u6210(BATCH_SIZE, 32) # \u4ee5\u4fbf\u901a\u8fc7fc\u5c42\u540e\u80fd\u8ba1\u7b97\u76f8\u5e94\u7684\u635f\u5931 # \u9996\u5148, \u6211\u4eec\u5df2\u77e5m\u7684\u503c\u8fdc\u5927\u4e8eBATCH_SIZE=16, # \u7528m\u6574\u9664BATCH_SIZE, \u83b7\u5f97m\u4e2d\u5171\u5305\u542bc\u4e2aBATCH_SIZE c = embedded . size ( 0 ) // BATCH_SIZE # \u4e4b\u540e\u518d\u4eceembedded\u4e2d\u53d6c*BATCH_SIZE\u4e2a\u5411\u91cf\u5f97\u5230\u65b0\u7684embedded # \u8fd9\u4e2a\u65b0\u7684embedded\u4e2d\u7684\u5411\u91cf\u4e2a\u6570\u53ef\u4ee5\u6574\u9664BATCH_SIZE embedded = embedded [: BATCH_SIZE * c ] # \u56e0\u4e3a\u6211\u4eec\u60f3\u5229\u7528\u5e73\u5747\u6c60\u5316\u7684\u65b9\u6cd5\u6c42embedded\u4e2d\u6307\u5b9a\u884c\u6570\u7684\u5217\u7684\u5e73\u5747\u6570, # \u4f46\u5e73\u5747\u6c60\u5316\u65b9\u6cd5\u662f\u4f5c\u7528\u5728\u884c\u4e0a\u7684, \u5e76\u4e14\u9700\u89813\u7ef4\u8f93\u5165 # \u56e0\u6b64\u6211\u4eec\u5bf9\u65b0\u7684embedded\u8fdb\u884c\u8f6c\u7f6e\u5e76\u62d3\u5c55\u7ef4\u5ea6 embedded = embedded . transpose ( 1 , 0 ) . unsqueeze ( 0 ) # \u7136\u540e\u5c31\u662f\u8c03\u7528\u5e73\u5747\u6c60\u5316\u7684\u65b9\u6cd5, \u5e76\u4e14\u6838\u7684\u5927\u5c0f\u4e3ac # \u5373\u53d6\u6bcfc\u7684\u5143\u7d20\u8ba1\u7b97\u4e00\u6b21\u5747\u503c\u4f5c\u4e3a\u7ed3\u679c embedded = F . avg_pool1d ( embedded , kernel_size = c ) # \u6700\u540e\uff0c\u8fd8\u9700\u8981\u51cf\u53bb\u65b0\u589e\u7684\u7ef4\u5ea6, \u7136\u540e\u8f6c\u7f6e\u56de\u53bb\u8f93\u9001\u7ed9fc\u5c42 return self . fc ( embedded [ 0 ] . transpose ( 1 , 0 )) \u5b9e\u4f8b\u5316\u6a21\u578b: # \u83b7\u5f97\u6574\u4e2a\u8bed\u6599\u5305\u542b\u7684\u4e0d\u540c\u8bcd\u6c47\u603b\u6570 VOCAB_SIZE = len ( train_dataset . get_vocab ()) # \u6307\u5b9a\u8bcd\u5d4c\u5165\u7ef4\u5ea6 EMBED_DIM = 32 # \u83b7\u5f97\u7c7b\u522b\u603b\u6570 NUN_CLASS = len ( train_dataset . get_labels ()) # \u5b9e\u4f8b\u5316\u6a21\u578b model = TextSentiment ( VOCAB_SIZE , EMBED_DIM , NUN_CLASS ) . to ( device )","title":"\u7b2c\u4e00\u6b65: \u6784\u5efa\u5e26\u6709Embedding\u5c42\u7684\u6587\u672c\u5206\u7c7b\u6a21\u578b"},{"location":"2.html#batch","text":"def generate_batch ( batch ): \"\"\" description: \u751f\u6210batch\u6570\u636e\u51fd\u6570 :param batch: \u7531\u6837\u672c\u5f20\u91cf\u548c\u5bf9\u5e94\u6807\u7b7e\u7684\u5143\u7ec4\u7ec4\u6210\u7684batch_size\u5927\u5c0f\u7684\u5217\u8868 \u5f62\u5982: [(label1, sample1), (lable2, sample2), ..., (labelN, sampleN)] return: \u6837\u672c\u5f20\u91cf\u548c\u6807\u7b7e\u5404\u81ea\u7684\u5217\u8868\u5f62\u5f0f(\u5f20\u91cf) \u5f62\u5982: text = tensor([sample1, sample2, ..., sampleN]) label = tensor([label1, label2, ..., labelN]) \"\"\" # \u4ecebatch\u4e2d\u83b7\u5f97\u6807\u7b7e\u5f20\u91cf label = torch . tensor ([ entry [ 0 ] for entry in batch ]) # \u4ecebatch\u4e2d\u83b7\u5f97\u6837\u672c\u5f20\u91cf text = [ entry [ 1 ] for entry in batch ] text = torch . cat ( text ) # \u8fd4\u56de\u7ed3\u679c return text , label \u8c03\u7528: # \u5047\u8bbe\u4e00\u4e2a\u8f93\u5165: batch = [( 1 , torch . tensor ([ 3 , 23 , 2 , 8 ])), ( 0 , torch . tensor ([ 3 , 45 , 21 , 6 ]))] res = generate_batch ( batch ) print ( res ) \u8f93\u51fa\u6548\u679c: # \u5bf9\u5e94\u8f93\u5165\u7684\u4e24\u6761\u6570\u636e\u8fdb\u884c\u4e86\u76f8\u5e94\u7684\u62fc\u63a5 (tensor([ 3, 23, 2, 8, 3, 45, 21, 6]), tensor([1, 0]))","title":"\u7b2c\u4e8c\u6b65: \u5bf9\u6570\u636e\u8fdb\u884cbatch\u5904\u7406"},{"location":"2.html#_3","text":"# \u5bfc\u5165torch\u4e2d\u7684\u6570\u636e\u52a0\u8f7d\u5668\u65b9\u6cd5 from torch.utils.data import DataLoader def train ( train_data ): \"\"\"\u6a21\u578b\u8bad\u7ec3\u51fd\u6570\"\"\" # \u521d\u59cb\u5316\u8bad\u7ec3\u635f\u5931\u548c\u51c6\u786e\u7387\u4e3a0 train_loss = 0 train_acc = 0 # \u4f7f\u7528\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210BATCH_SIZE\u5927\u5c0f\u7684\u6570\u636e\u8fdb\u884c\u6279\u6b21\u8bad\u7ec3 # data\u5c31\u662fN\u591a\u4e2agenerate_batch\u51fd\u6570\u5904\u7406\u540e\u7684BATCH_SIZE\u5927\u5c0f\u7684\u6570\u636e\u751f\u6210\u5668 data = DataLoader ( train_data , batch_size = BATCH_SIZE , shuffle = True , collate_fn = generate_batch ) # \u5bf9data\u8fdb\u884c\u5faa\u73af\u904d\u5386, \u4f7f\u7528\u6bcf\u4e2abatch\u7684\u6570\u636e\u8fdb\u884c\u53c2\u6570\u66f4\u65b0 for i , ( text , cls ) in enumerate ( data ): # \u8bbe\u7f6e\u4f18\u5316\u5668\u521d\u59cb\u68af\u5ea6\u4e3a0 optimizer . zero_grad () # \u6a21\u578b\u8f93\u5165\u4e00\u4e2a\u6279\u6b21\u6570\u636e, \u83b7\u5f97\u8f93\u51fa output = model ( text ) # \u6839\u636e\u771f\u5b9e\u6807\u7b7e\u4e0e\u6a21\u578b\u8f93\u51fa\u8ba1\u7b97\u635f\u5931 loss = criterion ( output , cls ) # \u5c06\u8be5\u6279\u6b21\u7684\u635f\u5931\u52a0\u5230\u603b\u635f\u5931\u4e2d train_loss += loss . item () # \u8bef\u5dee\u53cd\u5411\u4f20\u64ad loss . backward () # \u53c2\u6570\u8fdb\u884c\u66f4\u65b0 optimizer . step () # \u5c06\u8be5\u6279\u6b21\u7684\u51c6\u786e\u7387\u52a0\u5230\u603b\u51c6\u786e\u7387\u4e2d train_acc += ( output . argmax ( 1 ) == cls ) . sum () . item () # \u8c03\u6574\u4f18\u5316\u5668\u5b66\u4e60\u7387 scheduler . step () # \u8fd4\u56de\u672c\u8f6e\u8bad\u7ec3\u7684\u5e73\u5747\u635f\u5931\u548c\u5e73\u5747\u51c6\u786e\u7387 return train_loss / len ( train_data ), train_acc / len ( train_data ) def valid ( valid_data ): \"\"\"\u6a21\u578b\u9a8c\u8bc1\u51fd\u6570\"\"\" # \u521d\u59cb\u5316\u9a8c\u8bc1\u635f\u5931\u548c\u51c6\u786e\u7387\u4e3a0 loss = 0 acc = 0 # \u548c\u8bad\u7ec3\u76f8\u540c, \u4f7f\u7528DataLoader\u83b7\u5f97\u8bad\u7ec3\u6570\u636e\u751f\u6210\u5668 data = DataLoader ( valid_data , batch_size = BATCH_SIZE , collate_fn = generate_batch ) # \u6309\u6279\u6b21\u53d6\u51fa\u6570\u636e\u9a8c\u8bc1 for text , cls in data : # \u9a8c\u8bc1\u9636\u6bb5, \u4e0d\u518d\u6c42\u89e3\u68af\u5ea6 with torch . no_grad (): # \u4f7f\u7528\u6a21\u578b\u83b7\u5f97\u8f93\u51fa output = model ( text ) # \u8ba1\u7b97\u635f\u5931 loss = criterion ( output , cls ) # \u5c06\u635f\u5931\u548c\u51c6\u786e\u7387\u52a0\u5230\u603b\u635f\u5931\u548c\u51c6\u786e\u7387\u4e2d loss += loss . item () acc += ( output . argmax ( 1 ) == cls ) . sum () . item () # \u8fd4\u56de\u672c\u8f6e\u9a8c\u8bc1\u7684\u5e73\u5747\u635f\u5931\u548c\u5e73\u5747\u51c6\u786e\u7387 return loss / len ( valid_data ), acc / len ( valid_data )","title":"\u7b2c\u4e09\u6b65: \u6784\u5efa\u8bad\u7ec3\u4e0e\u9a8c\u8bc1\u51fd\u6570"},{"location":"2.html#_4","text":"# \u5bfc\u5165\u65f6\u95f4\u5de5\u5177\u5305 import time # \u5bfc\u5165\u6570\u636e\u968f\u673a\u5212\u5206\u65b9\u6cd5\u5de5\u5177 from torch.utils.data.dataset import random_split # \u6307\u5b9a\u8bad\u7ec3\u8f6e\u6570 N_EPOCHS = 10 # \u5b9a\u4e49\u521d\u59cb\u7684\u9a8c\u8bc1\u635f\u5931 min_valid_loss = float ( 'inf' ) # \u9009\u62e9\u635f\u5931\u51fd\u6570, \u8fd9\u91cc\u9009\u62e9\u9884\u5b9a\u4e49\u7684\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570 criterion = torch . nn . CrossEntropyLoss () . to ( device ) # \u9009\u62e9\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u4f18\u5316\u5668 optimizer = torch . optim . SGD ( model . parameters (), lr = 4.0 ) # \u9009\u62e9\u4f18\u5316\u5668\u6b65\u957f\u8c03\u8282\u65b9\u6cd5StepLR, \u7528\u6765\u8870\u51cf\u5b66\u4e60\u7387 scheduler = torch . optim . lr_scheduler . StepLR ( optimizer , 1 , gamma = 0.9 ) # \u4ecetrain_dataset\u53d6\u51fa0.95\u4f5c\u4e3a\u8bad\u7ec3\u96c6, \u5148\u53d6\u5176\u957f\u5ea6 train_len = int ( len ( train_dataset ) * 0.95 ) # \u7136\u540e\u4f7f\u7528random_split\u8fdb\u884c\u4e71\u5e8f\u5212\u5206, \u5f97\u5230\u5bf9\u5e94\u7684\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6 sub_train_ , sub_valid_ = \\ random_split ( train_dataset , [ train_len , len ( train_dataset ) - train_len ]) # \u5f00\u59cb\u6bcf\u4e00\u8f6e\u8bad\u7ec3 for epoch in range ( N_EPOCHS ): # \u8bb0\u5f55\u6982\u8bba\u8bad\u7ec3\u7684\u5f00\u59cb\u65f6\u95f4 start_time = time . time () # \u8c03\u7528train\u548cvalid\u51fd\u6570\u5f97\u5230\u8bad\u7ec3\u548c\u9a8c\u8bc1\u7684\u5e73\u5747\u635f\u5931, \u5e73\u5747\u51c6\u786e\u7387 train_loss , train_acc = train ( sub_train_ ) valid_loss , valid_acc = valid ( sub_valid_ ) # \u8ba1\u7b97\u8bad\u7ec3\u548c\u9a8c\u8bc1\u7684\u603b\u8017\u65f6(\u79d2) secs = int ( time . time () - start_time ) # \u7528\u5206\u949f\u548c\u79d2\u8868\u793a mins = secs / 60 secs = secs % 60 # \u6253\u5370\u8bad\u7ec3\u548c\u9a8c\u8bc1\u8017\u65f6\uff0c\u5e73\u5747\u635f\u5931\uff0c\u5e73\u5747\u51c6\u786e\u7387 print ( 'Epoch: %d ' % ( epoch + 1 ), \" | time in %d minutes, %d seconds\" % ( mins , secs )) print ( f ' \\t Loss: { train_loss : .4f } (train) \\t | \\t Acc: { train_acc * 100 : .1f } %(train)' ) print ( f ' \\t Loss: { valid_loss : .4f } (valid) \\t | \\t Acc: { valid_acc * 100 : .1f } %(valid)' ) \u8f93\u51fa\u6548\u679c: 120000lines [00:06, 17834.17lines/s] 120000lines [00:11, 10071.77lines/s] 7600lines [00:00, 10432.95lines/s] Epoch: 1 | time in 0 minutes, 36 seconds Loss: 0.0592(train) | Acc: 63.9%(train) Loss: 0.0005(valid) | Acc: 69.2%(valid) Epoch: 2 | time in 0 minutes, 37 seconds Loss: 0.0507(train) | Acc: 71.3%(train) Loss: 0.0005(valid) | Acc: 70.7%(valid) Epoch: 3 | time in 0 minutes, 36 seconds Loss: 0.0484(train) | Acc: 72.8%(train) Loss: 0.0005(valid) | Acc: 71.4%(valid) Epoch: 4 | time in 0 minutes, 36 seconds Loss: 0.0474(train) | Acc: 73.4%(train) Loss: 0.0004(valid) | Acc: 72.0%(valid) Epoch: 5 | time in 0 minutes, 36 seconds Loss: 0.0455(train) | Acc: 74.8%(train) Loss: 0.0004(valid) | Acc: 72.5%(valid) Epoch: 6 | time in 0 minutes, 36 seconds Loss: 0.0451(train) | Acc: 74.9%(train) Loss: 0.0004(valid) | Acc: 72.3%(valid) Epoch: 7 | time in 0 minutes, 36 seconds Loss: 0.0446(train) | Acc: 75.3%(train) Loss: 0.0004(valid) | Acc: 72.0%(valid) Epoch: 8 | time in 0 minutes, 36 seconds Loss: 0.0437(train) | Acc: 75.9%(train) Loss: 0.0004(valid) | Acc: 71.4%(valid) Epoch: 9 | time in 0 minutes, 36 seconds Loss: 0.0431(train) | Acc: 76.2%(train) Loss: 0.0004(valid) | Acc: 72.7%(valid) Epoch: 10 | time in 0 minutes, 36 seconds Loss: 0.0426(train) | Acc: 76.6%(train) Loss: 0.0004(valid) | Acc: 72.6%(valid)","title":"\u7b2c\u56db\u6b65: \u8fdb\u884c\u6a21\u578b\u8bad\u7ec3\u548c\u9a8c\u8bc1"},{"location":"2.html#embedding_1","text":"# \u6253\u5370\u4ece\u6a21\u578b\u7684\u72b6\u6001\u5b57\u5178\u4e2d\u83b7\u5f97\u7684Embedding\u77e9\u9635 print ( model . state_dict ()[ 'embedding.weight' ]) \u8f93\u51fa\u6548\u679c: tensor([[ 0.4401, -0.4177, -0.4161, ..., 0.2497, -0.4657, -0.1861], [-0.2574, -0.1952, 0.1443, ..., -0.4687, -0.0742, 0.2606], [-0.1926, -0.1153, -0.0167, ..., -0.0954, 0.0134, -0.0632], ..., [-0.0780, -0.2331, -0.3656, ..., -0.1899, 0.4083, 0.3002], [-0.0696, 0.4396, -0.1350, ..., 0.1019, 0.2792, -0.4749], [-0.2978, 0.1872, -0.1994, ..., 0.3435, 0.4729, -0.2608]])","title":"\u7b2c\u4e94\u6b65: \u67e5\u770bembedding\u5c42\u5d4c\u5165\u7684\u8bcd\u5411\u91cf"},{"location":"2.html#_5","text":"\u5b66\u4e60\u4e86\u5173\u4e8e\u65b0\u95fb\u4e3b\u9898\u5206\u7c7b\u4efb\u52a1: \u4ee5\u4e00\u6bb5\u65b0\u95fb\u62a5\u9053\u4e2d\u7684\u6587\u672c\u63cf\u8ff0\u5185\u5bb9\u4e3a\u8f93\u5165, \u4f7f\u7528\u6a21\u578b\u5e2e\u52a9\u6211\u4eec\u5224\u65ad\u5b83\u6700\u6709\u53ef\u80fd\u5c5e\u4e8e\u54ea\u4e00\u79cd\u7c7b\u578b\u7684\u65b0\u95fb, \u8fd9\u662f\u5178\u578b\u7684\u6587\u672c\u5206\u7c7b\u95ee\u9898, \u6211\u4eec\u8fd9\u91cc\u5047\u5b9a\u6bcf\u79cd\u7c7b\u578b\u662f\u4e92\u65a5\u7684, \u5373\u6587\u672c\u63cf\u8ff0\u6709\u4e14\u53ea\u6709\u4e00\u79cd\u7c7b\u578b. \u5b66\u4e60\u4e86\u65b0\u95fb\u4e3b\u9898\u5206\u7c7b\u6570\u636e\u7684\u83b7\u53d6\u548c\u6837\u5f0f. \u5b66\u4e60\u4e86\u6574\u4e2a\u6848\u4f8b\u7684\u5b9e\u73b0\u7684\u4e94\u4e2a\u6b65\u9aa4: \u7b2c\u4e00\u6b65: \u6784\u5efa\u5e26\u6709Embedding\u5c42\u7684\u6587\u672c\u5206\u7c7b\u6a21\u578b. \u7b2c\u4e8c\u6b65: \u5bf9\u6570\u636e\u8fdb\u884cbatch\u5904\u7406. \u7b2c\u4e09\u6b65: \u6784\u5efa\u8bad\u7ec3\u4e0e\u9a8c\u8bc1\u51fd\u6570. \u7b2c\u56db\u6b65: \u8fdb\u884c\u6a21\u578b\u8bad\u7ec3\u548c\u9a8c\u8bc1. \u7b2c\u4e94\u6b65: \u67e5\u770bembedding\u5c42\u5d4c\u5165\u7684\u8bcd\u5411\u91cf.","title":"\u5c0f\u8282\u603b\u7ed3"}]}